title
Abstractive Summarization of Reddit Posts with Multi-level Memory Networks
abstract
We address the problem of abstractive summarization in two directions : proposing a novel dataset and a new model .
First , we collect Reddit TIFU dataset , consisting of 120K posts from the online discussion forum Reddit .
We use such informal crowd- generated posts as text source , in contrast with existing datasets that mostly use formal documents as source such as news articles .
Thus , our dataset could less suffer from some biases that key sentences usually locate at the beginning of the text and favorable summary candidates are already inside the text in similar forms .
Second , we propose a novel abstractive summarization model named multilevel memory networks ( MMN ) , equipped with multi-level memory to store the information of text from different levels of abstraction .
With quantitative evaluation and user studies via Amazon Mechanical Turk , we show the Reddit TIFU dataset is highly abstractive and the MMN outperforms the state- ofthe - art summarization models .
The code and dataset are available at http://vision .
snu.ac.kr/projects/reddit-tifu .
Introduction Abstractive summarization methods have been under intensive study , yet they often suffer from inferior performance compared to extractive methods ( Allahyari et al. , 2017 ; Nallapati et al. , 2017 ; See et al. , 2017 ) .
Admittedly , by task definition , abstractive summarization is more challenging than extractive summarization .
However , we argue that such inferior performance is partly due to some biases of existing summarization datasets .
The source text of most datasets ( Over et al. , 2007 ; Hermann et al. , 2015 ; Cohan et al. , 2018 ; Grusky et al. , 2018 ; Narayan et al. , 2018a ) originates from formal documents such as news articles , which have some structural patterns of which extractive methods better take advantage .
In formal documents , there could be a strong tendency that key sentences locate at the beginning of the text and favorable summary candidates are already inside the text in similar forms .
Hence , summarization methods could generate good summaries by simply memorizing keywords or phrases from particular locations of the text .
Moreover , if abstractive methods are trained on these datasets , they may not show much abstraction ( See et al. , 2017 ) , because they are implicitly forced to learn structural patterns ( Kedzie et al. , 2018 ) . Grusky et al. ( 2018 ) and Narayan et al . ( 2018a ) recently report similar extractive bias in existing datasets .
They alleviate this bias by collecting articles from diverse news publications or regarding intro sentences as gold summary .
Different from previous approaches , we propose to alleviate such bias issue by changing the source of summarization dataset .
We exploit usergenerated posts from the online discussion forum Reddit , especially TIFU subreddit , which are more casual and conversational than news articles .
We observe that the source text in Reddit does not follow strict formatting and disallows models to simply rely on locational biases for summarization .
Moreover , the passages rarely contain sentences that are nearly identical to the gold summary .
Our new large-scale dataset for abstractive summarization named as Reddit TIFU contains 122,933 pairs of an online post as source text and its corresponding long or short summary sentence .
These posts are written by many different users , but each pair of post and summary is created by the same user .
Another key contribution of this work is to propose a novel memory network model named multilevel memory networks ( MMN ) .
Our model is equipped with multi-level memory networks , storing the information of source text from different levels of abstraction ( i.e. word- level , sentencelevel , paragraph - level and document- level ) .
This design is motivated by that abstractive summarization is highly challenging and requires not only to understand the whole document , but also to find salient words , phrases and sentences .
Our model can sequentially read such multiple levels of information to generate a good summary sentence .
Most abstractive summarization methods ( See et al. , 2017 ; Li et al. , 2017 ; Liu et al. , 2018 ; Cohan et al. , 2018 ; Paulus et al. , 2018 ) employ sequence-to-sequence ( seq2seq ) models ( Sutskever et al. , 2014 ) where an RNN encoder embeds an input document and another RNN decodes a summary sentence .
Our MMN has two major advantages over seq2seq - based models .
First , RNNs accumulate information in a few fixed - length memories at every step regardless of the length of an input sequence , and thus may fail to utilize far-distant information due to vanishing gradient .
It is more critical in summarization tasks , since input text is usually very long ( > 300 words ) .
On the other hand , our convolutional memory explicitly captures long-term information .
Second , RNNs cannot build representations of different ranges , since hidden states are sequentially connected over the whole sequence .
This still holds even with hierarchical RNNs that can learn multiple levels of representation .
In contrast , our model exploits a set of convolution operations with different receptive fields ; hence , it can build representations of not only multiple levels but also multiple ranges ( e.g. sentences , paragraphs , and the whole document ) .
Our experimental results show that the proposed MMN model improves abstractive summarization performance on both our new Reddit TIFU and existing Newsroom - Abs ( Grusky et al. , 2018 ) and XSum ( Narayan et al. , 2018a ) datasets .
It outperforms several state - of - the - art abstractive models with seq2seq architecture such as ( See et al. , 2017 ; Li et al. , 2017 ) .
We evaluate with quantitative language metrics ( e.g. perplexity and ROUGE ( Lin , 2004 ) ) and user studies via Amazon Mechanical Turk ( AMT ) .
The contributions of this work are as follows .
1 . We newly collect a large-scale abstractive summarization dataset named Reddit TIFU .
As far as we know , our work is the first to use non-formal text for abstractive summarization .
2 . We propose a novel model named multi-level memory networks ( MMN ) .
To the best of our knowledge , our model is the first attempt to leverage memory networks for the abstractive summarization .
We discuss the unique updates of the MMN over existing memory networks in Section 2 .
3 . With quantitative evaluation and user studies via AMT , we show that our model outperforms state - of - the - art abstractive summarization methods on both Reddit TIFU , Newsroom abstractive subset and XSum dataset .
Related Work
Our work can be uniquely positioned in the context of the following three topics .
Neural Abstractive Summarization .
Many deep neural network models have been proposed for abstractive summarization .
One of the most dominant architectures is to employ RNN - based seq2seq models with attention mechanism such as ( Rush et al. , 2015 ; Chopra et al. , 2016 ; Nallapati et al. , 2016 ; Cohan et al. , 2018 ; Hsu et al. , 2018 ; Gehrmann et al. , 2018 ) .In addition , recent advances in deep network research have been promptly adopted for improving abstractive summarization .
Some notable examples include the use of variational autoencoders ( VAEs ) ( Miao and Blunsom , 2016 ; Li et al. , 2017 ) , graph - based attention ( Tan et al. , 2017 ) , pointer- generator models ( See et al. , 2017 ) , self-attention networks ( Liu et al. , 2018 ) , reinforcement learning ( Paulus et al. , 2018 ; Pasunuru and Bansal , 2018 ) , contextual agent attention ( Celikyilmaz et al. , 2018 ) and integration with extractive models ( Hsu et al. , 2018 ; Gehrmann et al. , 2018 ) .
Compared to existing neural methods of abstractive summarization , our approach is novel to replace an RNN - based encoder with explicit multi-level convolutional memory .
While RNNbased encoders always consider the whole sequence to represent each hidden state , our multilevel memory network exploits convolutions to control the extent of representation in multiple levels of sentences , paragraphs , and the whole text .
Summarization Datasets .
Most existing summarization datasets use formal documents as source text .
News articles are exploited the most , including in DUC ( Over et al. , 2007 ) , Gigaword ( Napoles et al. , 2012 ) , CNN / DailyMail ( Nallapati et al. , 2016 ; Hermann et al. , 2015 ) , News - room ( Grusky et al. , 2018 ) and XSum ( Narayan et al. , 2018a ) datasets .
Cohan et al. ( 2018 ) introduce datasets of academic papers from arXiv and PubMed .
Hu et al . ( 2015 ) propose the LC - STS dataset as a collection of Chinese microblog 's short text each paired with a summary .
However , it selects only formal text posted by verified organizations such as news agencies or government institutions .
Compared to previous summarization datasets , our dataset is novel in that it consists of posts from the online forum Reddit .
Rotten Tomatoes and Idebate dataset ( Wang and Ling , 2016 ) use online text as source , but they are relatively small in scale : 3.7 K posts of Rotten-Tomatoes compared to 80 K posts of TIFU - short as shown in Table 1 . Moreover , Rotten Tomatoes use multiple movie reviews written by different users as single source text , and one-sentence consensus made by another professional editor as summary .
Thus , each pair of this dataset could be less coherent than that of our TIFU , which is written by the same user .
The Idebate dataset is collected from short arguments of debates on controversial topics , and thus the text is rather formal .
On the other hand , our dataset contains the posts of interesting stories happened in daily life , and thus the text is more unstructured and informal .
Neural Memory Networks .
Many memory network models have been proposed to improve memorization capability of neural networks Na et al. , 2017 ; Yoo et al. , 2019 ) . Weston et al. ( 2014 ) propose one of early memory networks for language question answering ( QA ) ; since then , many memory networks have been proposed for QA tasks ( Sukhbaatar Compared to previous memory networks , our MMN has four novel features : ( i ) building a multi-level memory network that better abstracts multi-level representation of a long document , ( ii ) employing a dilated convolutional memory write mechanism to correlate adjacent memory cells , ( iii ) proposing normalized gated tanh units to avoid covariate shift within the network , and ( iv ) generating an output sequence without RNNs .
Reddit TIFU Dataset
We introduce the Reddit TIFU dataset whose key statistics are outlined in Table 1 .
We collect data from Reddit , which is a discussion forum platform with a large number of subreddits on diverse topics and interests .
Specifically , we crawl all the posts from 2013 - Jan to 2018 - Mar in the TIFU subreddit , where every post should strictly follow the posting rules , otherwise they are removed .
Thanks to the following rules 1 , the posts in this subreddit can be an excellent corpus for abstractive summarization : Rule 3 : Posts and titles without context will be removed .
Your title must make an attempt to encapsulate the nature of your f*** up. Rule 11 : All posts must end with a TL ;DR summary that is descriptive of your f*** up and its consequences .
Thus , we regard the body text as source , the title as short summary , and the TL ; DR summary as long summary .
As a result , we make two sets of datasets : TIFU - short and TIFU - long .
Figure 1 shows an example post of the TIFU subreddit .
( Nallapati et al. , 2016 ) 36 PG Lead Ext-Oracle PG / Lead PG / Oracle Dataset R-1 R -2 R-L R-1 R -2 R-L R-1 R -2 R-L Ratio ( R-L ) Ratio ( R-L ) CNN / DM
Preprocessing
We build a vocabulary dictionary V by choosing the most frequent V ( =15 K ) words in the dataset .
We exclude any urls , unicodes and special characters .
We lowercase words , and normalize digits to 0 .
Subreddit names and user ids are replaced with @subreddit and @userid token , respectively .
We use markdown 2 package to strip markdown format , and spacy 3 to tokenize words .
Common prefixes of summary sentences ( e.g. tifu by , tifu - , tl;dr , etc ) are trimmed .
We do not take OOV words into consideration , since our vocabulary with size 15 K covers about 98 % of word frequencies in our dataset .
We set the maximum length of a document as 500 .
We exclude the gold summaries whose lengths are more than 20 and 50 for TIFUshort and TIFU - long , respectively .
They amount to about 0.6 K posts in both datasets ( i.e. less than 1 % and 3 % ) .
We use these maximum lengths , based on previous datasets ( e.g. 8 , 31 , 56 words on average per summary in Gigaword , DUC , and CNN / DailyMail datasets , respectively ) .
We randomly split the dataset into 95 % for training , 5 % for test .
Abstractive Properties of Reddit TIFU
We discuss some abstractive characteristics found in Reddit TIFU dataset , compared to existing sum-marization datasets based on news articles .
Weak Lead Bias .
Formal documents including news articles tend to be structured to emphasize key information at the beginning of the text .
On the other hand , key information in informal online text data are more spread across the text .
Figure 2 plots the density histogram of the relative locations of bigrams of gold summary in the source text .
In the CNN / DailyMail and Newsroom , the bigrams are highly concentrated on the front parts of documents .
Contrarily , our Reddit TIFU dataset shows rather uniform distribution across the text .
This characteristic can be also seen from the ROUGE score comparison in Table 2 .
The Lead baseline simply creates a summary by selecting the first few sentences or words in the document .
Thus , a high score of the Lead baseline implicates a strong lead bias .
The Lead scores are the lowest in our TIFU dataset , in which it is more difficult for models to simply take advantage of locational bias for the summary .
Strong Abstractness .
Besides the locational bias , news articles tend to contain wrap - up sentences that cover the whole article , and they often have resemblance to its gold summary .
Its existence can be measured by the score of the Ext-Oracle baseline , which creates a summary by selecting the sentences with the highest average score of F1 ROUGE - 1/2/L .
Thus , it can be viewed as an upper bound for extractive models ( Narayan et al. , 2018a , b ; Nallapati et al. , 2017 ) .
In Table 2 , the ROUGE scores of the Ext-Oracle are the lowest in our TIFU dataset .
It means that the sentences that are similar to gold summary scarcely exist inside the source text in our dataset .
This property forces the model to be trained to focus on comprehending the entire text instead of simply finding wrap - up sentences .
Finally , PG / Lead and PG / Oracle in Table 2 are the ROUGE -L ratios of PG with Lead and Ext-Oracle , respectively .
These metrics can quantify the dataset according to the degree of difficulty for extractive methods and the suitability for abstractive methods , respectively .
High scores of the TIFU dataset in both metrics show that it is potentially an excellent benchmark for evaluation of abstractive summarization systems .
Multi-level Memory Networks ( MMN ) Figure 3 shows the proposed multi-level memory network ( MMN ) model .
The MMN memorizes the source text with a proper representation in the memory and generates a summary sentence one word at a time by extracting relevant information from memory cells in response to previously generated words .
The input of the model is a source text { x i } = x 1 , ... , x N , and the output is a sequence of summary words {y t } = y 1 , ... , y T , each of which is a symbol from the dictionary V.
Text Embedding Online posts include lots of morphologically similar words , which should be closely embedded .
Thus , we use the fastText ( Bojanowski et al. , 2016 ) trained on the Common Crawl corpus , to initialize the word embedding matrix W emb .
We use the same embedding matrix W emb for both source text and output sentences .
That is , we represent a source text {x i } N i=1 in a distributional space as {d 0 i } N i=1 by d 0 i = W emb x i where x i is a one- hot vector for i-th word in the source text .
Likewise , output words {y t } T t=1 is embedded as {o 0 t } T t=1 , and d 0 i and o 0 t ? R 300 .
Construction of Multi-level Memory
As shown in Figure 3 ( a ) , the multi-level memory network takes the source text embedding {d 0 i } N i=1 as an input , and generates S number of memory tensors { M a/ c s } S s=1 as output , where superscript a and c denote input and output memory repre-sentation , respectively .
The multi-level memory network is motivated by that when human understand a document , she does not remember it as a single whole document but ties together several levels of abstraction ( e.g. word- level , sentencelevel , paragraph - level and document- level ) .
That is , we generate S sets of memory tensors , each of which associates each cell with different number of neighboring word embeddings based on the level of abstraction .
To build memory slots of such multi-level memory , we exploit a multi-layer CNN as the write network , where each layer is chosen based on the size of its receptive field .
However , one issue of convolution is that large receptive fields require many layers or large filter sizes .
For example , stacking 6 layers with a filter size of 3 results in a receptive field size of 13 , i.e. each output depends on 13 input words .
In order to grow the receptive field without increasing the computational cost , we exploit the dilated convolution ( Yu and Koltun , 2016 ; Oord et al. , 2016a ) for the write network .
Memory Writing with Dilated Convolution .
In dilated convolution , the filter is applied over an area larger than its length by skipping input values with a certain gap .
Formally , for a 1 - D n-length input x ?
R n?300 and a filter w : { 1 , ... , k} ?
R 300 , the dilated convolution operation F on s elements of a sequence is defined as F( x , s ) = k i=1 w( i ) * x s+d ?( i? k/2 ) + b , ( 1 ) where d is the dilation rate , k is the filter size , s ? d ? ( i ? k/2 ) accounts for the direction of dilation and w ?
R k?300?300 and b ?
R 300 are the parameters of the filter .
With d = 1 , the dilated convolution reduces to a regular convolution .
Using a larger dilation enables a single output at the top level to represent a wider range of input , thus effectively expanding the receptive field .
To the embedding of a source text {d 0 i } N i=1 , we recursively apply a series of dilated convolutions F ( d 0 ) ? R N ?300 .
We denote the output of the l-th convolution layer as {d l i } N i=1 . Normalized Gated Tanh Units .
Each convolution is followed by our new activation of normalized gated tanh unit ( NGTU ) , which is illustrated in Figure 4 ( b ) : GTU ( d l ) = tanh ( F l f ( d l ) ) ? ?( F l g ( d l ) ) , ( 2 ) d l+1 = LayerNorm ( d l + GTU ( d l ) ) , ( 3 ) where ? is a sigmoid , ? is the element- wise multiplication and F l f and F l g denote the filter and gate for l-th layer dilated convolution , respectively .
The NGTU is an extension of the existing gated tanh units ( GTU ) ( Oord et al. , 2016 a , b) by applying weight normalization ( Salimans and Kingma , 2016 ) and layer normalization ( Ba et al. , 2016 ) .
This mixed normalization improves earlier work of Gehring et al . ( 2017 ) , where only weight normalization is applied to the GLU .
As in Figure 4 ( a ) , it tries to preserve the variance of activations throughout the whole network by scaling the output of residual blocks by ? 0.5 .
However , we observe that this heuristic does not always preserve the variance and does not empirically work well in our dataset .
Contrarily , the proposed NGTU not only guarantees preservation of activation variances but also significantly improves the performance .
Multi-level Memory .
Instead of using only the last layer output of CNNs , we exploit the outputs of multiple layers of CNNs to construct S sets of memories .
For example , memory constructed from the 4 - th layer , whose receptive field is 31 , may have sentence - level embeddings , while memory from the 8- th layer , whose receptive field is 511 , may have document - level embeddings .
We obtain each s-th level memory M a /c s by resembling key -value memory networks ( Miller et al. , 2016 ) : M a s = d m ( s ) , M c s = d m( s ) + d 0 . ( 4 ) Recall that M a s and M c s ?
R N ?300 are input and output memory matrix , respectively . m( s ) indicates an index of convolutional layer used for the s-th level memory .
For example , if we set S = 3 and m = { 3 , 6 , 9 } , we make three - level memories , each of which uses the output of the 3- rd , 6 - th , and 9 - th convolution layer , respectively .
To output memory representation M c s , we add the document embedding d 0 as a skip connection .
State - Based Sequence Generation
We discuss how to predict the next word y t+1 at time step t based on the memory state and previously generated words y 1 :t . Figure 3 ( b ) visualizes the overall procedure of decoding .
We first apply max-pooling to the output of the last layer of the encoder network to build a whole document embedding d whole ?
R 300 : d whole = maxpool ( [ d L 1 ; ... ; d L N ] ) .
( 5 ) The decoder is designed based on WaveNet ( Oord et al. , 2016a ) that uses a series of causal dilated convolutions , denoted by F( o l 1 :t ) ? R t?300 .
We globally condition d whole to obtain embeddings of previously generated words o l 1:t as : h l f / g = Fl f /g ( o l 1 :t + W l f / g d whole ) , ( 6 ) h l a = tanh ( h l f ) ? ?( h l g ) , ( 7 ) o l+1 1 : t = LayerNorm ( o l 1:t + h l a ) , ( 8 ) where h l f /g are the filter and gate hidden state respectively , and learnable parameters are W l f and W l g ? R 300?300 .
We initialize o 0 t = W emb y t .
We set the level of the decoder network to L = 3 for TIFU - short and L = 5 for TIFU - long .
Next , we generate S number of query vectors {q s t } S s=1 at time t to our memory network as q s t = tanh ( W s q o L t + b s q ) , ( 9 ) where W s q ? R 300?300 and b s q ?
R 300 . Each of these query vectors {q s t } S s=1 is fed into the attention function of each level of memory .
As in ( Vaswani et al. , 2017 ) , the attention function is M s ot = softmax ( q s t ( M a s ) T ? d emb ) M c s , ( 10 ) where we set d emb = 300 for the embedding dimension and M s ot ?
R 300 . Next , we obtain the output word probability : s t = softmax ( W o [ M 1 ot ; ... ; M S ot ; o L t ] ) , ( 11 ) where W o ? R ( 300 ? ( S+ 1 ) ) ?
V .
Finally , we select the word with the highest probability y t+1 = argmax s?V ( s t ) .
Unless y t+1 is an EOS token , we repeat generating the next word by feeding y t+1 into the output convolution layer of Eq . ( 8 ) .
Training
We use the softmax cross-entropy loss from estimated y t to its target y GT , t .
However , it forces the model to predict extremes ( zero or one ) to distinguish among the ground truth and alternatives .
The label smoothing alleviates this issue by acting as a regularizer that makes the model less confident in its prediction .
We smooth the target distribution with a uniform prior distribution u ( Pereyra et al. , 2017 ; Edunov et al. , 2017 ; Vaswani et al. , 2017 ) .
Thus , the loss over the training set D is L = ? log p ? ( y|x ) ? D KL ( u| |p ? ( y| x ) ) .
We implement label smoothing by modifying the ground truth distribution for word y GT , t to be p(y GT , t ) = 1 ? and p(y ) = / V for y = y GT , t where is a smoothing parameter set to 0.1 .
Further details can be found in the Appendix .
Experiments
Experimental Setting Evaluation Metrics .
We evaluate the summarization performance with two language metrics : perplexity and standard F1 ROUGE scores ( Lin , 2004 ) .
We remind that lower perplexity and higher ROUGE scores indicate better performance .
Datasets .
In addition to Reddit TIFU , we also evaluate on two existing datasets : abstractive subset of Newsroom ( Grusky et al. , 2018 ) and XSum ( Narayan et al. , 2018a ) .
These are suitable benchmarks for evaluation of our model in two aspects .
First , they are specialized for abstractive summarization , which meets well the goal of this work .
Second , they have larger vocabulary size ( 40 K , 50K ) than Reddit TIFU ( 15 K ) , and thus we can evaluate the learning capability of our model .
Baselines .
We compare with three abstractive summarization methods , one basic seq2seq model , two heuristic extractive methods and variants of our model .
We choose PG ( See et al. , 2017 ) , SEASS , DRGD ( Li et al. , 2017 ) as the state - of - the - art methods of abstractive summarization .
We test the attention based seq2seq model denoted as s2s- att ( Chopra et al. , 2016 ) .
As heuristic extractive methods , the Lead - 1 uses the first sentence in the text as summary , and the Ext-Oracle takes the sentence with the highest average score of F1 ROUGE - 1/2/L with the gold summary in the text .
Thus , Ext- Oracle can be viewed as an upper-bound for extractive methods .
We also test variants of our method MMN -* .
To validate the contribution of each component , we exclude one of key components from our model as follows : ( i ) - NoDilated with conventional convolutions instead , ( ii ) - NoMulti with no multi-level memory ( iii ) - NoNGTU with existing gated linear units ( Gehring et al. , 2017 ) .
That is , - NoDilated quantifies the improvement by the dilated convolution , - NoMulti assesses the effect of multi-level memory , and - NoNGTU validates the normalized gated tanh unit .
Please refer to the Appendix for implementation details of our method .
TIFU - short Methods PPL R-1 R -2 R-L Lead -1 n/a 3.4 0.0 3.3 Ext-Oracle n/a 8.0 0.0 7.7 s2s-att ( Chopra et al. , 2016 ) 46.2 18.3 6.4 17.8 PG ( See et al. , 2017 ) 40.9 18.3 6.5 17.9 SEASS 62.6 18.5 6.4 18.0 DRGD ( Li et al. , 2017 ) 69 387.0 17.5 2.9 13.9 DRGD ( Li et al. , 2017 ) 176 Table 3 : Summarization results measured by perplexity and ROUGE - 1/2/L on the TIFU - short / long dataset .
( Grusky et al. , 2018 ) and XSum ( Narayan et al. , 2018a ) . Except MMN , all scores are referred to the original papers .
T-ConvS2S is the topic-aware convolutional seq2seq model .
Newsroom - Abs XSum Methods R-1 R-2 R-L R-1 R -2 R-L s2s-att 6.2
Quantitative Results
Table 3 compares the summarization performance of different methods on the TIFU - short / long dataset .
Our model outperforms the state- of- theart abstractive methods in both ROUGE and perplexity scores .
PG utilizes a pointer network to copy words from the source text , but it may not be a good strategy in our dataset , which is more abstractive as discussed in Table 2 . SEASS shows strong performance in DUC and Gigaword dataset , in which the source text is a single long sentence and the gold summary is its shorter version .
Yet , it may not be sufficient to summarize much longer articles of our dataset , even with its second -level representation .
DRGD is based on the variational autoencoder with latent variables to capture the structural patterns of gold summaries .
This idea can be useful for the similarly structured formal documents but may not go well with di- verse online text in the TIFU dataset .
These state - of - the - art abstractive methods are not as good as our model , but still perform better than extractive methods .
Although the Ext-Oracle heuristic is an upper-bound for extractive methods , it is not successful in our highly abstractive dataset ; it is not effective to simply retrieve existing sentences from the source text .
Moreover , the performance gaps between abstractive and extractive methods are much larger in our dataset than in other datasets ( See et al. , 2017 ; Paulus et al. , 2018 ; Cohan et al. , 2018 ) , which means too that our dataset is highly abstractive .
Table 4 compares the performance of our MMN on Newsroom - Abs and XSum dataset .
We report the numbers from the original papers .
Our model outperforms not only the RNN - based abstractive methods but also the convolutional - based methods in all ROUGE scores .
Especially , even trained on single end-to - end training procedure , our model outperforms T-ConvS2S , which necessitates two training stages of LDA and ConvS2S .
These results assure that even on formal documents with large vocabulary sizes , our multi-level memory is effective for abstractive datasets .
Qualitative Results
We perform two types of qualitative evaluation to complement the limitation of automatic language metrics as summarization evaluation .
User Preferences .
We perform Amazon Mechanical Turk ( AMT ) tests to observe general users ' preferences between the summarization of different algorithms .
We randomly sample 100 test examples .
At test , we show a source text and two summaries generated by our method and one baseline in a random order .
We ask turkers to choose the more relevant one for the source text .
We obtain answers from three different turkers for each test example .
We compare with four abstractive baselines ( s2s - att , PG , SEASS and DRGD ) ( ? )
I decided to go over to my friends house to a small party at 1 in the morning .
I knew my parents would say no so I snuck out of the house . ( ? )
I had been talking to my mom about how sad even hearing the theme song made me .
Also she had seen me watching a bunch of sad anime theme songs and tearing up a little so she must have thought I was depressed .
When I got home today my mom was practically in tears .
and the gold summary ( Gold ) .
Table 5 summarizes the results of AMT tests , which validate that human annotators significantly prefer our results to those of baselines .
As expected , the gold summary is voted the most .
Summary Examples .
Figure 5 shows selected examples of abstractive summarization .
Baselines often generate the summary by mostly focusing on some keywords in the text , while our model produces the summary considering both keywords and the whole context thanks to multi-level memory .
We present more examples in the Appendix .
Conclusions
We introduced a new dataset Reddit TIFU for abstractive summarization on informal online text .
We also proposed a novel summarization model named multi-level memory networks ( MMN ) .
Experiments showed that the Reddit TIFU dataset is uniquely abstractive and the MMN model is highly effective .
There are several promising future directions .
First , ROUGE metrics are limited to correctly capture paraphrased summaries , for which a new automatic metric of abstractive summarization may be required .
Second , we can explore the data in other online forums such as Quora , Stackoverflow and other subreddits . ( ? )
We use an internal messaging application software at work which has been great for communicating with other teammates .
A lot of us have started using it to complain about things we are not happy about at work . ( ? )
This leads me to today where just as i am about to go home my manager calls me in to a private meeting looking really upset .
Then they mentioned the program name and that they had received an email , and suddenly I realized I had fucked up one of the quirks of this program is that when someone is offline it emails them the message .
A recently ex co-worker is still active on the chat for quick questions for the next 2 weeks .
They came online so we started having a conversation , then another co-worker walked up to me for a chat who has been having a rough week and complained about our boss .
When they finished their rant , I then messaged my ex co-worker that my boss was n't popular with the staff at the moment as that was the second minor complaint I had heard that week .
They had gone offline , so an email was sent to their old work email .
Past employees emails get sent to the boss , in case important emails are sent to them .
So after the meeting I still have my job .
I had an awkward conversation with my boss ( ? ) ( ? )
This weekend I went out and bought myself a motorcycle !
I 've been planning on buying one this summer and I finally went out and did it . ( ? )
I geared up and went on my way for my first ride . ( ? )
I went all the way back to my house and alas , no phone .
So I spent the next 4 hours walking the route to my girlfriends house looking along the side of the road for my phone .
These are all back roads to my girlfriends house so I had to really get in the undergrowth to look for my phone .
It got dark and I headed home feeling dejected .
The next morning my friend came over with my phone !
The only damage was a few scuffs to my otterbox .
I could n't believe he found it , and as it turns out it fell off my bike and tumbled onto the side of his driveway .
I chalked this up as a win and considered myself lucky .
Until yesterday .
I woke up with poison ivy all over my body .
And when I say all over my body , I mean ALL OVER my body .
I have some on my arms , legs , face , and most importantly all over my dick .
And the worst spot of them all is on my dick .
I have never been so uncomfortable in my life .
I must have had some of the oil on my hands and scratched an itch down there .
Needless to say I have n't been on my new motorcycle since I 've had this and I 've been doing as little moving as possible at my job and at home .
F ***. tive methods .
We summarize two interesting observations as follows .
First , as expected , the more favorable for abstractive methods is , the higher novel n-gram ratio is .
Second , novel n-gram ratios of Newsroom - Abs and XSum are higher than those of our dataset , even though their data sources are news publications .
Thus , we argue that novel n-gram ratios are pretty good but not a sufficient measure to find extractive bias in the summarization dataset .
C More Examples Figure 6 illustrates selected examples of summary generation .
In each set , we show a source text , a reference summary and generated summaries by our method and baselines .
In the examples , while baselines generate summary by mostly focusing on some keywords , our model produces summary considering both keywords and the whole context thanks to the multi-level memory .
Figure 1 : 1 Figure 1 : An example post of the TIFU subreddit .
Figure 2 : 2 Figure 2 : Relative locations of bigrams of gold summary in the source text across different datasets .
Figure 3 : Figure 4 : 34 Figure 3 : Illustration of the proposed multi-level memory network ( MMN ) model .
Figure 5 : Examples of abstractive summary generated by our model and baselines .
In each set , we too show the source text and gold summary .
Table 1 : 1 Statistics of the Reddit TIFU dataset compared to existing opinion summarization corpora , Rot-tenTomatoes and Idebate ( Wang and Ling , 2016 ) .
We show average and median ( in parentheses ) values .
Kumar et al. , 2016 ; Miller et al. , 2016 ) .
Park et al. ( 2017 ) propose a convolutional read memory network for personalized image captioning .
One of the closest works to ours may be Singh et al . ( 2017 ) , which use a memory network for text summarization .
However , they only deal with extractive summarization by storing embeddings of individual sentences into memory .
Dataset # posts # words / post # words / summ RottenTomatoes 3,731 2124.7 ( 1747 ) 22.2 ( 22 ) Idebate 2,259 178.3 ( 160 ) 11.4 ( 10 ) TIFU - short 79,949 342.4 ( 269 ) 9.33 ( 8 ) TIFU - long 42,984 432.6 ( 351 ) 23.0 ( 21 )
Table 2 : 2 Comparison of F1 ROUGE scores between different datasets ( row ) and methods ( column ) .
PG is a stateof - the - art abstractive summarization method , and Lead and Ext-Oracle are extractive ones .
PG / Lead and PG / Oracle are the ROUGE -L ratios of PG with Lead and Ext-Oracle , respectively .
We report the numbers for each dataset ( row ) from the corresponding cited papers .
Table 4 : 4 Summarization results in terms of ROUGE -1/2/L on Newsroom - Abs 1.1 5.7 28.4 8.8 22.5 PG 14.7 2.2 11.4 29.7 9.2 23.2 ConvS2S - - - 31.3 11.1 25.2 T-ConvS2S - - - 31.9 11.5 25.8 MMN ( Ours ) 17.5 4.7 14.2 32.0 12.1 26.0
https://reddit.com/r/tifu/wiki/rules.
https://python-markdown.github.io/.
3 https://spacy.io.
