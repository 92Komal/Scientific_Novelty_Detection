title
NILC USP : A Hybrid System for Sentiment Analysis in Twitter Messages
abstract
This paper describes the NILC USP system that participated in SemEval - 2013 Task 2 : Sentiment Analysis in Twitter .
Our system adopts a hybrid classification process that uses three classification approaches : rulebased , lexicon - based and machine learning approaches .
We suggest a pipeline architecture that extracts the best characteristics from each classifier .
Our system achieved an Fscore of 56.31 % in the Twitter message - level subtask .
Introduction Twitter and Twitter messages ( tweets ) are a modern way to express sentiment and feelings about aspects of the world .
In this scenario , understanding the sentiment contained in a message is of vital importance in order to understand users behavior and for market analysis ( Java et al. , 2007 ; Kwak et al. , 2010 ) .
The research area that deals with the computational treatment of opinion , sentiment and subjectivity in texts is called sentiment analysis ( Pang et al. , 2002 ) .
Sentiment analysis is usually associated with a text classification task .
Sentiment classifiers are commonly categorized in two basic approaches : lexicon - based and machine learning ( Taboada et al. , 2011 ) .
A lexicon- based classifier uses a lexicon to provide the polarity , or semantic orientation , of each word or phrase in the text .
A machine learning classifier learns features ( usually the vocabulary ) from annotated corpus or labeled examples .
In this paper , we present a hybrid system for sentiment classification in Twitter messages .
Our system combines three different approaches : rule-based , lexicon - based and machine learning .
The purpose of our system is to better understand the use of a hybrid system in Twitter text and to verify the performance of this approach in an open evaluation contest .
Our system participated in SemEval - 2013 Task 2 : Sentiment Analysis in Twitter ( Wilson et al. , 2013 ) .
The task objective was to determine the sentiment contained in Twitter messages .
The task included two sub-tasks : a expression - level classification ( Task A ) and a message - level classification ( Task B ) .
Our system participated in Task B .
In this task , for a given message , our system should classify it as positive , negative , or neutral .
Our system was coded using Python and the CLiPS Pattern library ( De Smedt and Daelemans , 2012 ) .
This last library provides the part- of-speech tagger and the SVM algorithm used in this work 1 .
Related work Despite the significant number of works in sentiment analysis , few works have approached Twitter messages .
Agarwal et al. ( 2011 ) explored new features for sentiment classification of twitter messages .
Davidov et al. ( 2010 ) studied the use of hashtags and emoticons in sentiment classification .
Diakopoulos and Shamma ( 2010 ) analyzed the people 's sentiment on Twitter for first U.S. presidential debate in 2008 .
The majority of works in sentiment analysis uses either machine learning techniques or lexicon - based 1 Our system code is freely available at http://github.com/pedrobalage/SemevalTwitterHybridClassifier techniques .
However , some few works have presented hybrid approaches .
K?nig and Brill ( 2006 ) propose a hybrid classifier that utilizes human reasoning over automatically discovered text patterns to complement machine learning .
Prabowo and Thelwall ( 2009 ) evaluates the effectiveness of different classifiers .
This study showed that the use of multiple classifiers in a hybrid manner could improve the effectiveness of sentiment analysis .
System architecture
Our system is organized in four main components : normalization , rule- based classifier , lexicon - based classifier and machine learning classifier .
These components are connected in a pipeline architecture that extracts the best characteristics from each component .
The Figure 1 shows the system architecture .
This architecture improves the classification process because it takes advantage of the multiple approaches .
For example , the rule- based classifier is the most reliable classifier .
It achieves good results when the text is matched by a high- confidence rule .
However , due the freedom of language , rules may not match 100 % of the unseen examples , consequently it has a low recall rate .
Lexicon - based classifiers , for example , are very confident in the process to determine if a text is polar or neutral .
Using sentiment lexicons , we can determine that sentences containing sentiment words are polar and sentences that do not contain such words are neutral .
Moreover , the presence of a high number of positive or negative words in the text may be a strong indicative of the polarity .
Finally , machine learning is known to be highly domain adaptive and to be able to find deep correlations ( Taboada et al. , 2011 ) .
This last classifier might provide the final decision when the previous methods failed .
In the following sub-sections , we describe in more details the components in which our system is based on .
In the next section , we explain how the confidence level was determined .
Normalization and rule-based classifier
The normalization module is in charge of correcting and normalizing the texts .
This module performs the following operations : ?
Elements such as hashtags , urls and mentions are transformed into a consistent set of codes ; ?
Emoticons are grouped into representative categories ( such as happy , sad , laugh ) and converted to particular codes ; ?
Signals of exaltation ( such as repetitive exclamation marks ) are recognized ; ?
A simple misspelling correction is performed ; ?
Part-of-speech tagging is performed .
The rule- based classifier is very simple .
The only rules applied here are concerned to the emoticons found in the text .
Empirically , we evidenced that positive emoticons are an important indicative of positiveness in texts .
Likewise , negative emoticons indicate negativeness tendency .
This module returns the number of positive and negative emoticons matched in the text .
Lexicon - based classifier
The lexicon- based classifier is based on the idea that the polarity of a text can be summarized by the sum of the individual polarity values of each word or phrase present in the text .
In this assumption , a sentiment lexicon identifies polar words and assigns polarity values to them ( known as semantic orientations ) .
In our system , we used the sentiment lexicon provided by SentiStrength ( Thelwall et al. , 2010 ) .
This lexicon provides an emotion vocabulary , an emoticons list , a negation list and a booster word list .
In our algorithm , we sum the semantic orientations of each individual word in the text .
If the word is negated , the polarity is inverted .
If the word is intensified ( boosted ) , we increase its polarity by a factor determined in the sentiment lexicon .
A lexiconbased classifier usually assumes the signal of the final score as the sentiment class : positive , negative or neutral ( score zero ) .
Machine learning classifier
The machine learning classifier uses labeled examples to learn how to classify new instances .
The algorithm learns by using features extracted from these examples .
In our classifier , we used the SVM algorithm provided by CLiPS Pattern .
The features used by the classifier are bag-of-words , the part-ofspeech set , and the existence of negation in the sentence .
Hybrid approach and tuning The organization from SemEval - 2013 Task 2 : Sentiment Analysis in Twitter provided three datasets for the task ( Wilson et al. , 2013 ) .
A training dataset ( TrainSet ) , with 6,686 messages 2 , a development dataset ( DevSet ) , with 1,654 messages , and two testing datasets ( TestSets ) , with 3,813 ( Twitter TestSet ) and 2,094 ( SMS TestSet ) messages each .
As we said in the previous section , our system is a pipeline of classifiers where each classifier may assign a sentiment class if it achieves a particular confidence threshold .
This confidence threshold is a fixed value we set for each system in order to have a decision boundary .
This decision was made by inspecting the results table obtained with the development set , as shown below .
Table 1 shows how the rule- based classifier performed in the development dataset .
The classifier score consists in the difference between the number of positive emoticons and the number of negative emoticons found in the message .
For example , for score of - 1 we had 22 negative , 4 neutral and 2 positive messages .
Inspecting the Table 1 we adjusted the rule- based classifier boundary to decide when the score is different from zero .
For values greater than zero , the classifier will assign the positive class and , for values below zero , the classifier will assign the negative class .
For values equal zero , the classifier will call the lexicon - based classifier .
Table 2 is similar to the Table 1 , but it now shows the scores obtained by the lexicon - based classifier for the development set .
This score is the message semantic orientation computed by the sum of the semantic orientation for each individual word .
Inspecting Table 2 , we adjusted the lexicon- based classifier to assign the positive class when the total score is greater than 3 and negative class when the total score is below - 3 .
Moreover , we evidenced that , compared to the other classifiers , the lexicon - based classifier had better performance to determine the neutral class .
Therefore , we adjusted the lexiconbased classifier to assign the neutral class when the total score is zero .
For any other values , the machine learning classifier is called .
Finally ,
Table 3 shows the confusion matrix for the machine learning classifier in the development
Results
Table 4 shows the results obtained by each individual classifier and the hybrid classifier for the test dataset .
In the task , the systems were evaluated with the average F-Score obtained for positive and negative classes 3 .
We see that the Hybrid approach could improve in relation to each classifier score , confirming our hypothesis .
Conclusion
We described a hybrid classification system used for Semeval - 2013 Task 2 : Sentiment Analysis in Twitter .
This paper showed how a hybrid classifier might take advantage of multiple sentiment analysis approaches and how these approaches perform in a Twitter dataset .
A future direction of this work would be improving each individual classifier .
In our system , we used simple methods for each employed classifier .
Thus , we believe the hybrid classification technique applied might achieve even better results .
This strengthens our theory that hybrid techniques might outperform the current state - of - art in sentiment analysis .
Figure 1 : 1 Figure 1 : System architecture
