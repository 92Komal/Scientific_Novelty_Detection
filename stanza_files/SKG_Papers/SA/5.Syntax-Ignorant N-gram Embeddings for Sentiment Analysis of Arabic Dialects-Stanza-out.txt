title
Syntax -Ignorant N-gram Embeddings for Sentiment Analysis of Arabic Dialects
abstract
Arabic sentiment analysis models have employed compositional embedding features to represent the Arabic dialectal content .
These embeddings are usually composed via ordered , syntax - aware composition functions and learned within deep neural frameworks .
With the free word order and the varying syntax nature across the different Arabic dialects , a sentiment analysis system developed for one dialect might not be efficient for the others .
Here we present syntax - ignorant n-gram embeddings to be used in sentiment analysis of several Arabic dialects .
The proposed embeddings were composed and learned using an unordered composition function and a shallow neural model .
Five datasets of different dialects were used to evaluate the produced embeddings in the sentiment analysis task .
The obtained results revealed that , our syntax - ignorant embeddings could outperform word2vec model and doc2vec both variant models in addition to hand -crafted system baselines , while a competent performance was noticed towards baseline systems that adopted more complicated neural architectures .
Introduction
According to the used features , existing Arabic Sentiment Analysis ( ASA ) systems can be classified into : ( a ) hand - crafted - based systems ( Abdulla et al. , 2013 ; El - Beltagy et al. , 2017 ) where linguistic / stylistic and lexical features are generated by morphological analyzers and semantic resources and ( b ) text embeddings - based systems that adopt word / sentence embeddings using one of the composition models ( Gridach et al. , 2017 ; Medhaffar et al. , 2017 ) .
While the first type of ASA systems provide a comparable performance , the generation of hand -crafted features is considered a laborintensive task that requires using language / dialectspecific NLP tools and techniques ( Altowayan and Tao , 2016 ) .
In contrast , text embeddings - based systems can use the raw unprocessed input content to generate expressive features to represent words or even longer pieces of text through using the composition models ( Mikolov et al. , 2013 ) .
Composition models aim to construct a phrase / sentence embeddings based on its constituent word embeddings and structural information ( Iyyer et al. , 2015 ) .
Two main types of these models can be recognized : ( a) Ordered models where the order and linguistic / grammatical structure of the input words do count while constructing the phrase / sentence vector and ( b ) Unordered models in which the word representations are combined irrespective of their order using algebraic operations ( Sum of Word Embeddings ( SOWE ) , average ( Avg ) , mean and multiplication functions ) ( Mitchell and Lapata , 2010 ) .
Context words along side their syntactic properties have been considered essential to build effective word embeddings able to infer the semantic / syntactic similarities among words , phrases or sentences .
Consequently , most of the recentlydeveloped SA systems adopted deep neural network architectures such as Convolutional Neural Networks ( CNNs ) and Recursive Neural Networks ( RecNNs ) where ordered composition models are employed to grasp the syntactic and linguistic relations between the words ( Al Sallab et al. , 2015 ; Dahou et al. , 2016 ) .
These systems required more training time to learn words ' order- aware embeddings due to the high computational complexity consumed at each layer of the model ( Iyyer et al. , 2015 ) .
However , such embeddings resulting from ordered compositionality might not form discriminating features for the Arabic dialects ; especially that these dialects have a free word order and varying syntactic / grammatical rules ( Brustad , 2000 ) .
For instance , the dialectal ( Levantine ) sentence in - O S V O V S V S O S V O Table 1 : Free word order of dialectal Arabic .
Dialect Sentence POS
Levantine Adjective
The situation is okay
Moroccan Negation
We are not happy Egyptian Verb I was walking towards home
On the other hand , the Arabic dialects show phonological , morphological , lexical , and syntactic differences such that the same word might infer different syntactic information across different dialects .
To clarify that , Table 2 reviews how the word " " has several Part Of Speech ( POS ) tags , multiple meanings and different sentiments across three Arabic dialects .
Thus , to handle such informality of DA , we propose an unordered composition model to construct sentence / phrase embeddings regardless of the order and the syntax of the context 's words .
Nevertheless , when coming to the sentiment analysis task , sentence embeddings that are merely composed and learned based on the context words do not always infer the sentiment accurately .
This is due to the fact that , some words of contradict sentiments might be mentioned within identical contexts which leads to map opposite words close to each other in the embedding space .
To clarify that , both sentences in Example 1 and Example 2 contain the same context words organized in the same order ; yet the first sentence is of positive polarity while the second has a negative sentiment since the words " " and " " are antonyms that mean " interesting " and " boring " , respectively .
Example 1 1 Example 2 2 One way to address this issue is to learn the embeddings from sentiment - annotated corpora such that the sentiment information is incorporated along with the contextual data within the composed embedding during the training phase .
This was examined with the English language , as Tang et al . ( 2014 ) presented sentiment -specific word embeddings ( SSWE ) composed via unordered Min , Max and Avg composition models .
Another pairing between Avg composition functions and supervised learning was introduced by ( Iyyer et al. , 2015 ) where a neural model of two hidden layers called Deep Averaging Neural network ( DAN ) was used to learn the embeddings together with sentiment , yielding a performance competent to much more complicated models such as Rec-NNs and CNNs - Multi Channel ( CNN - MC ) .
While some of the recent ASA systems considered the syntactic information in the composed embeddings ( Al Sallab et al. , 2015 ) , other models used pretrained or unsupervised unordered word / doc embeddings as features to mine the sentiment of MSA / DA content ( Altowayan and Tao , 2016 ; Gridach et al. , 2017 ) .
However , mining the sentiment of DA using syntax - aware ordered embeddings might be ineffective especially with the drastic differences between Eastern and Western Arabic dialects ( Brustad , 2000 ) .
In addition , for the SA task , the embeddings learned from unlabeled data are not as discriminating as those learned with sentiment information integrated in the embedding vectors ( Tang et al. , 2014 ) .
This evokes the need to provide a sentiment -specific , dialect - independent embeddings with which the gap resulted from the differences among Arabic dialects can be bridged .
Such embeddings would ignore the syntactic structure and focus on the semantic and sentiment information .
Inspired by ( Iyyer et al. , 2015 ; Tang et al. , 2014 ) , we hypothesize that representing a sentence by its constituent sentiment -specific , unordered and syntax - ignorant n-gram embeddings can handle the diversity of the Arabic dialects and provide better features for the dialectal Arabic SA task .
In the current paper , we present a SA framework whose features are n-gram embeddings learned from labeled data ( sentiment-specific ) and composed via the additive unordered composition function ( syntax -ignorant ) known as SOWE .
The embeddings composition and the sentiment learning processes were conducted within Tw - StAR framework which forms a shallow feed -forward neural network of single hidden layer .
The contributions of this study can be briefly described as follows :
1 . Based on the outperformance of SOWE composition function in sentence semantic similarity applications ( White et al. , 2015 ) , we believe that SOWE can be an effective replacement of the Average ( Avg ) composition functions used in ( Iyyer et al. , 2015 ) and ( Mikolov et al. , 2013 ) .
Besides its low computation complexity as it conducts an element - wise sum over the word embedding vectors contained in a sentence , SOWE can capture and encode semantic and synonymous information in the resulting composed embeddings ( White et al. , 2015 ) .
2 . Given that , DA has a free word order and a varying syntactic nature , therefore , unlike ( Tang et al. , 2014 ) whose embeddings were generated using corrupted input ngrams from which the syntactic context nature are learned , we feed whole n-grams to our model as the training objective is to capture the semantic and sentiment relations regardless of the order and the syntax of the context words .
3 . In contrast to previous studies , that composed unordered embeddings within deep neural models ( Iyyer et al. , 2015 ) , the embeddings introduced here are generated and learned within a shallow feed -forward neural model as we are seeking to investigate whether SA of DA can be performed using less complicated neural architectures .
2 The Proposed Model ( Tw - StAR )
As we are seeking to answer the question :
To which extent a shallow neural model , trained with embeddings specifically formulated to target DA , can rival complicated neural architectures ? , we chose to implement Tw - StAR as a feed-forward neural network in which sentiment -
The generated n-gram embeddings were then employed as discriminative features to predict the positive / negative sentiment of the tackled input sentences .
As it is shown in Figure 1 , Tw - StAR model is a shallow feed -forward neural network composed of the following layers : the input or embeddings layer followed by lambda layer then a hidden layer and finally an output layer with softmax function applied for the classification into positive or negative sentiment .
Model Description
The embedding layer , in Tw - StAR , acts as a word lookup table , it is responsible of projecting words in the input into their corresponding dense vector representations .
Given the input sentences , in order to handle their varying lengths , each sentence S of l words was formulated as a sequence of fixedlength n-grams generated using a sliding window of a specific size C. Instead of using corrupted input n-grams as in the SSWEu model provided in ( Tang et al. , 2014 ) and CBOW in ( Mikolov et al. , 2013 ) , whole n-grams were fed to the embedding layer such that each n-gram is accompanied with the sentiment label of the sentence from which it was derived ; where [ 1,0 ] and [ 0,1 ] vectors were used to represent the positive and negative polarities , respectively .
Having the n-grams prepared , their constituent words are mapped into the corresponding embeddings using the weights matrix M ? R |V | xd of the embedding layer , where | V | is the vocabulary size and d denotes the embedding dimension .
The weights of the embedding layer were initialized randomly using Glorot uniform initializer ( Glorot and Bengio , 2010 ) then optimized while training the model .
It should be noted that , we chose not to use pretrained word embeddings for initialization , as the available Arabic pretrained word embeddings from ( Zahran et al. , 2015 ) and ( Al - Rfou et al. , 2013 ) were generated based on MSA / Egyptian corpora .
We assume that , this can lead to out - of- vocabulary ( OOV ) issues especially with the Tunisian and Moroccan content , used in this study , where less common words with MSA / Egyptian do exist .
Thus , for a single fixedlength n-gram containing a sequence of words { w i , w i+ 1 , w i + 2 , ... , w i+C- 1 } , each word w i is represented by a unique integer index i ? [ 0 , V ] and stored as a one- hot vector vec i whose values are zero in all positions except at the i-th index .
To obtain the embedding vector v i of a word w i , its one- hot vector vec i is multiplied by the matrix M as in equation ( 1 ) .
v i = vec i * M ? R 1xd ( 1 ) As each row of the embedding matrix M denotes the dense embedding representation of a specific word in the vocabulary , multiplying the onehot vector of each word in the input by the embedding matrix M , will essentially select one of M rows that corresponds to the embeddings of this word .
The resulting word embeddings were then combined using the compositional model SOWE which is applied by the next linear layer Lambda .
In this layer , an element - wise sum is conducted over the word embedding vectors .
Here we could refer to the fact that , although the n-gram scheme retains the local order of its constituent words , formulating the n-gram embeddings vector via the additive function SOWE , totally ignores the words ' order since an identical embedding vector would be composed for any order of the words contained in an n-gram .
Thus , the output of the lambda layer is a single embeddings vector O lambda ? R 1 * | d| resulted from summing the embeddings vectors produced by the embedding layer which correspond to the input words contained in a window of size C : O lambda = C i=1 v i ?
R 1xd ( 2 ) In the subsequent hidden layer ( hl ) , the output from the previous layer O lambda is subjected to a linear transformation using the weights matrix W hl ?
R dx2 and biases b hl ?
R 1x2 : O hl = f ( O lambda * W hl + b hl ) ? R 1x2 ( 3 )
Where W hl and b hl form the model 's parameters that are learned and optimized during the training process and f refers to the activation function that introduces non-linear discriminative features to our model .
Here , we used Hard sigmoid activation function ( h ? ) .
Hard sigmoid is a piecewise function whose output are very similar to the traditional sigmoid , however , it is computationally cheaper which leads to a smarter model since it accelerates the learning process in each iteration ( Gulcehre et al. , 2016 ) .
Finally , the output O hl resulting from the hidden layer is forwarded into the output layer ( Ol ) where a softmax function is applied to induce the estimated probabilities for each output label ( positive / negative ) of a specific n-gram .
Where each n-gram is accompanied with the predicted two dimensional label [ 1,0 ] denoting positive or [ 0,1 ] indicating negative .
? = sof tmax ( O hl ) ? R 1x2 ( 6 ) Softmax selects the maximum score among the two predicted conditional probabilities to denote positive or negative polarity of an input n-gram where the distribution of the form [ 1,0 ] was assigned for positive while [ 0,1 ] distribution form was adopted for negative .
Thus , if the gold sentiment polarity of an n-gram is positive , the predicted positive score should be higher than the negative score while if the gold sentiment polarity of a word sequence is negative , its positive score should be smaller than the negative score .
To decide the polarity of the whole sentence , the predicted positive scores and negative scores of n-grams are summed then each of which is divided by the number of the n-grams contained in this sentence resulting two values representing the potential positive and negative scores of the input sentence .
The final sentence polarity is , thus , decided according to the greater among these two values .
Cross-entropy loss between gold sentiment distribution and predicted distribution was adopted such that the loss function of the model : J ( ? ) = ? k= { 0,1 } y k log ?k ( 7 ) Where y ?
R 2 is the gold sentiment value represented by a one- hot vector , ? is the sentiment distribution predicted by the model while ? refers to the parameters ( weights and biases ) of the model to be learned and optimized during the training process .
Training details and Model's Parameters
The key hyper parameters of the proposed model are the sliding window size C and the embeddings dimension d .
We have selected both parameters ' values empirically during the model tuning period .
To train the proposed neural network , the backpropagation algorithm with Adaptive Moment estimation ( Adam ) stochastic optimization method ( Kingma and Ba , 2014 ) has been used .
Adam optimizer combines the early optimization speed of Adagrad with the better later convergence of various other methods like Adadelta and RMSprop .
This is done through calculating learning rates and storing momentum changes for each model parameter separately .
To deal with the overfitting issue , Dropout was used as a regularization mechanism .
The value of the dropout parameter was selected empirically during the model 's tuning period .
Experimental Study
Datasets
For the model evaluation , Tw - StAR was employed to predict the sentiment in five publicly available datasets ( See Table 3 ) .
Four of them were written in Eastern ( Jordanian ) and Western ( Tunisian , Moroccan ) Arabic dialects , while the fifth combined Eastern , Western and Gulf Arabic dialects .
They are as follows : ? Arabic Twitter Dataset ( ArTwitter ) : combines 2,000 positive / negative tweets mostly written in the Jordanian dialect ( Abdulla et al. , 2013 ) . ? Tunisian Election Corpus ( TEC ) : refers to 3,043 tweets positive / negative combining MSA and Tunisian dialect where Tunisian tweets form the majority of the data ( Sayadi et al. , 2016 ) . ? Tunisian Sentiment Analysis Corpus ( TSAC ) : combines 7,366 positive / negative Facebook comments ( Medhaffar et al. , 2017 ) .
Results and Discussion
The model 's parameters ( C , d , dropout ) were assigned empirically .
Among several window sizes ranging from 6 to 10 , a window size value equals to 8 was adopted since it produced the best Fmeasure in all datasets as it is shown in Table 4 .
Consequently , each input sentence is represented by a set of 8 - grams to be fed to the model .
Similarly , upon examining three embedding dimensions values equal to 50 , 100 and 150 , and several dropout values ranging from 0.2 to 0.5 , d=100 and dropout =0.2 were adopted for dimensions and dropout , respectively .
The efficiency of the proposed n-gram embeddings composed by SOWE were compared against word embeddings ( word2vec ) and document embeddings ( doc2vec ) .
Using a supervised learning strategy with sentiment labels included in the training corpora , and provided with the same parameters of Tw - StAR model in terms of window size and embedding dimensions , we trained word2vec ( Mikolov et al. , 2013 ) and doc2vec ( PV - DBoW / PV - DM ) ( Le and Mikolov , 2014 ) algorithms on each of the tackled datasets to generate the proper embedding features .
In the distributed bag of words ( DBoW ) , the embeddings vector representing a sentence is composed with words ' order ignored , whereas the distributed memory variant ( DM ) follows the CBOW mechanism as it considers the words order while learning the Table 5 : Tw - StAR performances against baseline systems and word2vec / doc2vec for all datasets . ( *,**,*** ) refers to a significant difference at P-value < 0.05 , < 0.01 , < 0.001 , respectively , compared to Tw- StAR .
composed sentence embeddings vector ( Le and Mikolov , 2014 ) .
Having the word embeddings and document embeddings generated for each dataset by word2vec and doc2vec algorithms , they were used as features to train Tw - StAR neural model on recognizing the sentiment of the datasets in Table 3 .
This was done through replacing the embeddings layer in Tw - StAR by the embeddings produced by word2vec and both variants of doc2vec .
It should be noted that , word2vec and both variants of doc2vec were trained in a supervised manner .
Thus , their learned embeddings are sentiment informed as the polarity labels were associated with the input training instances .
This enabled a fair comparison between word2vec / doc2vec variants and our sentiment -specific syntax - ignorant ngrams embeddings .
Table 5 , reviews the sentiment classification performances achieved using n-grams by SOWE , word vectors by word2vec and sentence vectors by doc2vec ( PV - DBoW / PV - DM ) for all datasets .
The obtained performances of Tw - StAR were further compared against the baseline systems that tack - led the same datasets and also listed in Table 5 ; where P. , R. , F1 and A. denote the achieved averaged precision , recall , F-measure and accuracy respectively .
It should be mentioned that , due to the limited work in SA of under-represented dialects such as Tunisian and Moroccan , it was n't possible to perform the comparison against text embeddings - based baselines for these dialects , as the provided models for MEC and TEC datasets used only hand -crafted features .
The results in Table 5 suggest the outperformance of the proposed embeddings over those generated by word2vec and doc2vec for most datasets .
This was emphasized through the significance test ( T-test ) , where the sentiment classification performance of Tw - StAR with n-grams embeddings used for training was proved to be significantly better than that produced with word2vec / doc2vec embedding features .
For instance , the best achieved F-measure was in TEC dataset with a value of 87.7 % compared to 58.4 % , 56.4 % and 56.7 % scored by word2vec , doc2vec ( PV - DM ) and doc2vec ( PV - DBoW ) , respectively .
This could be explained by the ability of SOWE to capture the semantic information along with the synonymous relations among words more accurately than the average function used by doc2vec variants ( White et al. , 2015 ) .
On the other hand , it can be seen from Table 5 that , for datasets having an MSA - dominated content such as MEC , doc2vec ( PV - DM ) performs better than word2vec and doc2vec ( PV - DBoW ) .
Indeed , the achieved accuracy for MEC dataset with the embeddings learned by doc2vec ( PV - DM ) was 76.6 % compared to 69.1 % and 69.3 % scored by word2vec and doc2vec ( PV - DBoW ) , respectively .
This could be due to the fact that , doc2vec ( PV - DM ) is a syntax - aware embeddings learning method where it acts as a memory that remembers what is missing from the context to predict a ( typically ) center word ( Le and Mikolov , 2014 ) .
Therefore , it can handle the MSA - dominated data where syntax does matter in indicating the sentiment .
Compared to the state- of - the - art applied on the tackled datasets , our results showed that Tw - StAR trained with the proposed embeddings could improve the performance over the baselines in most of the datasets .
As we can see in Table 5 , with Tw - StAR applied , the accuracy increased by 17.1 % , 8.3 % and 1.2 % for TEC , TSAC and MEC datasets , respectively .
On the other hand , the less accuracy increment was reported in MSA / Moroccan MEC dataset ;
This defines the proposed embeddings as expressive features of pure dialectal content more than they are of MSA .
Since the free word order and varying syntactic structure of dialects can be be better handled by SOWE .
Moreover , for ArTwitter dataset , a competent performance was achieved by Tw - StAR against complicated neural architectures such as CNNs adopted by ( Dahou et al. , 2016 ) and combined LSTMs used in ( Al - Azani and El - Alfy , 2017 ) , where the accuracy decreased by 0.1 % and 2.3 % compared to ( Dahou et al. , 2016 ) and ( Al - Azani and El - Alfy , 2017 ) , respectively .
Hence , a shallow neural model such as Tw - StAR trained with embeddings specifically composed to target the DA content can rival much more complicated neural architectures .
In addition , for MDT dataset that contains three different dialects , although Tw - StAR could not outperform the baseline system , a satisfying performance was achieved without the need for a huge training corpus used by ( Altowayan and Tao , 2016 ) .
Aiming to inspect the performance of the n- Considering Figure 2 , a clustering behavior of the words that compose n-grams or document embeddings could be observed in both doc2vec ( PV - DBoW ) and Tw - StAR models .
In word2vec model , however , word vectors tend to spread sparsely in the embeddings space .
This was reflected on the performance of the embeddings as discriminating features for the SA task .
To clarify that , considering TSAC dataset , we have noticed that pure Tunisian dialectal words such " " and " 3 which bear positive sentiments were mapped by Tw - StAR model close to each other in the embeddings space .
However , when looking to the representations created for the same dataset by doc2vec ( PV - DBoW ) , we have come through the words " " and " " 4 which refer to a positive sentiment , yet they are mapped close to the negative words " " and " " 5 in the embeddings space .
Related works
In ( Altowayan and Tao , 2016 ) , Arabic word vectors were generated through training Continuous Bag of Words ( CBOW ) algorithm ( Mikolov et al. , 2013 ) using an Arabic corpus of 190 million words .
To evaluate the generated embeddings , they were used to train several binary classifiers on recognition of the subjectivity and sentiment polarity in a combination of twitter datasets : ASTD ( Nabil et al. , 2015 ) , ArTwitter ( Abdulla et al. , 2013 ) and QCRI ( Mourad and Darwish , 2013 ) and MSA news articles .
The model 's performance was slightly better than ( Mourad and Darwish , 2013 ) in subjectivity classification , while for the polarity classification of the twitter datasets , the best metric values were scored by the Nu-SVM with an accuracy of 80.21 % and an F-measure of 79.62 % .
A study by ( Dahou et al. , 2016 ) introduced a CNN - based deep learning SA model .
The model was trained with word embeddings learned from a corpus of 3.4 billion Arabic words using CBOW and Skip- Gram ( SG ) .
Using CNN as a building unit , a neural model with one non-static channel and one convolutional layer was developed .
Multiple filter window sizes were adopted to perform the convolutional operation while a max-overtime pooling layer was utilized to capture the most relevant global features ( Collobert et al. , 2011 ) .
The model was applied on several datasets such as ASTD ( Nabil et al. , 2015 ) , ArTwitter ( Abdulla et al. , 2013 ) .
The results revealed that the performance of the presented model mostly outperformed all the state - of - the - art systems where for ArTwitter , the achieved accuracy was 85.0 % .
The idea of including Arabic pre-trained word embeddings in a deep neural SA model was introduced by ( Gridach et al. , 2017 ) .
The authors used word embeddings provided by ( Zahran et al. , 2015 ) previously trained with MSA / dialectal corpora by Glove , SG and CBOW methods .
These embeddings were used to initialize the input word embeddings with which their model CNN - ASAWR was trained .
The proposed model was developed as a variant of ( Collobert et al. , 2011 ) system and customized to conduct SA on two MSA / dialectal datasets : ASTD ( Nabil et al. , 2015 ) and SemEval - 2017 ( El - Beltagy et al. , 2017 .
Results showed that using pretrained word embeddings led to better evaluation measures compared to the baseline systems .
In ASTD dataset for instance , the best F-measure scored by CNN - ASAWR was 72.14 % compared to 62.60 % achieved by ( Nabil et al. , 2015 ) while for SemEval - 2017 , an F-measure of 63 % was achieved against 61 % scored by the system of ( El - Beltagy et al. , 2017 ) .
As a first attempt to leverage document embeddings in ASA , doc2vec model was used in ( Medhaffar et al. , 2017 ) to generate training vectors for a Tunisian SA model .
The presented model was evaluated using a combination of publicly available MSA / multi-dialectal datasets and a manually annotated Tunisian Sentiment Analysis Corpus ( TSAC ) obtained from Facebook comments about popular TV shows .
The input data was represented by document vectors which were used later to train SVM , Bernoulli NB ( BNB ) and Multilayer Perceptron ( MLP ) classifiers .
The best results were scored by a multi-layer perceptron ( MLP ) classifier when TSAC corpus was solely used as a training set where it achieved an accuracy equals to 78 % and an F-measure value of 78 % .
Conclusion
We introduced syntax - ignorant , n-gram embeddings as discriminating features in the context of sentiment analysis of Arabic dialects .
The presented model Tw - StAR trained with these embeddings could classify the sentiment of several dialects better than most baseline systems .
Being composed via SOWE function , our embeddings emphasized the efficiency of using unordered additive composition model in SA as the produced performances by n-gram embeddings were better than those learned via word2vec and doc2vec ( PV - DM / PV - DBoW ) models .
Based on the visualization of the word embeddings learned by Tw - StAR , word2vec and doc2vec ( PV - DBoW ) models , it was possible to deduce that several words of close sentiments were better mapped using Tw - StAR model .
Finally , it was revealed that , for Arabic dialects , a shallow neural model trained with unordered embeddings can address the varying syntactic structure and free word order issues yielding a competent performance with much more complicated deep learning architectures .
A natural future step would involve using the proposed embeddings to represent the sentiment of other languages .
Furthermore , a multi-dialectal lexicon would be constructed based on the distances among the word embedding vectors learned via Tw - StAR and visualized by t-SNE tool .
Figure 1 : 1 Figure 1 : Tw- StAR neural sentiment analysis model .
