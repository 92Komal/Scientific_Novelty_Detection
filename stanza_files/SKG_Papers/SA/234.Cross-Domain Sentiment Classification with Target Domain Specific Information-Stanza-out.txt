title
Cross-Domain Sentiment Classification with Target Domain Specific Information
abstract
The task of adopting a model with good performance to a target domain that is different from the source domain used for training has received considerable attention in sentiment analysis .
Most existing approaches mainly focus on learning representations that are domain-invariant in both the source and target domains .
Few of them pay attention to domain specific information , which should also be informative .
In this work , we propose a method to simultaneously extract domain specific and invariant representations and train a classifier on each of the representation , respectively .
And we introduce a few target domain labeled data for learning domain-specific information .
To effectively utilize the target domain labeled data , we train the domain-invariant representation based classifier with both the source and target domain labeled data and train the domain-specific representation based classifier with only the target domain labeled data .
These two classifiers then boost each other in a co-training style .
Extensive sentiment analysis experiments demonstrated that the proposed method could achieve better performance than state - of - the - art methods .
Introduction Sentiment classification aims to automatically predict sentiment polarity of user generated sentiment data like movie reviews .
The exponential increase in the availability of online reviews and recommendations makes it an interesting topic in research and industrial areas .
However , reviews
Book Review Kitchen Review Figure 1 : Top indicators extracted with logistic regression for Book and Kitchen domains .
The overlap between the two ellipses denotes the shared features between these two domains .
can span so many different domains that it is difficult to gather annotated training data for all of them .
This has motivated much research on crossdomain sentiment classification which transfers the knowledge from label rich domain ( source domain ) to the label few domain ( target domain ) .
In recent years , the most popular cross-domain sentiment classification approach is to extract domain invariant features , whose distribution in the source domain is close to that in the target domain .
( Glorot et al. , 2011 ; Fernando et al. , 2013 ; Kingma and Welling , 2013 ; Aljundi et al. , 2015 ; Baochen Sun , 2015 ; Long et al. , 2015 ; Ganin et al. , 2016 ; Zellinger et al. , 2017 ) .
And based on this representation , it trains a classifier with the source rich labeled data .
Specifically , for data of the source domain X s and data of the target domain X t , it trains a feature generator G ( ? ) with restriction P ( G( X s ) ) ? P ( G( X t ) ) .
And the classifier is trained on G( X s ) with the source labels Y s .
The main difference of these approaches is the mechanism to incorporate the restriction on G ( ? ) into the system .
The major limitation of this framework is that it losses the domain specific information .
As depicted in Figure1 , even if it can perfectly extract the domain invariant features ( e.g. , excellent ) , it will loss some strong indicators ( e.g. , delicious , fast ) of the target Kitchen domain .
We believe that it can achieve greater improvement if it can effectively make use of this information .
Thus , in this work , we try to explore a path to use the target domain specific information with as few as possible target labeled data .
Specifically , we first introduce a novel method to extract the domain invariant and domain specific features of target domain data .
Then , we treat these two representations as two different views of the target domain data and accordingly train a domain invariant classifier and a target domain specific classifier , respectively .
Because the domain invariant representation is compatible with both source data and target data , we train the domain invariant classifier with both source and target labeled data .
And for the target domain specific classifier , we train it with target labeled data only .
Based on these two classifiers , we perform co-training on target unlabeled data , which can further improve the usage of target data in a bootstrap style .
In summary , the contributions of this paper include : ( i ) This is the first work to explore the usage of target domain specific information in cross-domain sentiment classification task .
( ii )
We propose a novel to extract the domain specific representation of target domain data , which encodes the individual characteristics of the target domain .
Related Work Domain adaptation aims to generalize a classifier that is trained on a source domain , for which typically plenty of labeled data is available , to a target domain , for which labeled data is scarce .
In supervised domain adaptation , cross-domain classifiers are learnt by using labeled source samples and a small number of labeled target samples ( Hoffman et al. , 2014 ) .
A common practice is training the cross-domain classifiers with the labeled source data and then fine-tuning the classifier with the target labeled data ( Pan and Yang , 2010 ) .
Meanwhile , some unsupervised and semi-supervised cross domain methods ( Ganin et al. , 2016 ; Louizos et al. , 2015 ; Zellinger et al. , 2017 ) are proposed by combining the transfer of classifiers with the match of distributions .
These methods focus on extracting the domaininvariant features with the help of unlabeled data .
Specifically , Ganin et al. , ( 2016 ) incorporated an adversarial framework to perform this task .
It trained the feature generator to minimize the classification loss and simutaneously deceive the discriminator , which is trained to distinguish the domain of the input data coming from .
Louizos et al. , ( 2015 ) used the Maximum Mean Discrepancy ( Borgwardt et al. , 2006 ) regularizer to constrain the feature generator to extract the domain invariant features .
And similarly , Zellinger et al. , ( 2017 ) proposed the central moment discrepancy ( CMD ) metric for the role of domain regularizer .
The above methods either treat it no difference between domain specific information and domain invariant information or just ignore the domain specific information during in the process of learning adaptive classifiers .
One of the most related work is the DSN model ( Bousmalis et al. , 2016 ) .
It proposed to extract the domain specific and the domain invariant representations , simultaneously .
However ,
It does not explored the usage of the domain specific information .
Its classifier was still only trained on the domain invariant representation .
This work differs from it in the following two aspects .
First , we make use of the source and target unlabeled data to extract domain specific information , instead of relying on the orthogonality constraint between the extra representation and the domain invariant counterpart .
It is achieved by forcing the distribution of the source examples and that of the target examples in the domain specific space to be different .
We argue that this can avoid the potential problem of the orthogonality constraint in that the domain specific representation can be well predicted by the domain invariant representation , while simultaneously meeting the orthogonality constraint .
For example , let X = ( 0 , Z ) be the domain invariant representation and Y = ( Z , 0 ) be the domain specific representation , then X can be uniquely determined by Y , while in the meanwhile X ? Y .
Second , we apply a cotraining framework to make use of the domain specific representation , rather than simply treating it as a regularizer for extracting the domain invariant representation .
Another related work is the CODA model ( Chen et al. , 2011 ) .
It also applied a co-training framework for semi-supervised domain adaptation .
However , instead of dividing the feature space into domain invariant and domain specific Xs Xt Xs Xt Co-training on U t Invariant Encoder Ec ( x ) Target Specific Encoder Et ( x ) Invariant Classfier Fc ( x ) Specific Classfier Ft ( x ) Dt ( x ) Decoder Lsim Ldiff Lc Lrecon
Lt H t common H s common H s target H t target Figure 2 : The general architecture of the proposed model .
The source data X s and target data X t are mapped to a domain invariant representation and a target domain specific representation by feature maps E c and E t , respectively .
In the space of the domain invariant representation , the distributions of source data H s inv and target data H t common are forced to be similar by minimizing a certain distance L sim .
In contrast , in the space of the target domain specific representation , the distributions of source data H s spec and target data H t spec are forced to be different by minimizing the distance L dif f .
Based on the domain invariant representation , a classifier F c is trained with the source rich labeled data and some of the target labeled data .
In addition , based on the target domain specific representation , a classifier F t is trained with the target labeled data only .
These two classifiers teach each other in a co-training framework based on the target unlabeled data U t . parts , it randomly separated the features space .
Approach
We consider the following domain adaptation setting .
The source domain consists of a set of n s fully labeled points D s = {( x s 1 , y s 1 ) , ? ? ? , ( x s ns , y s ns ) } ?
R d ?
Y drawn from the distribution P s ( X , Y ) .
And the target data is divided into n l ( n l n s ) labeled points D l t = {( x t 1 , y t 1 ) , ? ? ? , ( x t n l , y t n l } ?
R d ?
Y from the distribution P t ( X , Y ) and n u ( n u n l ) unlabeled points D u t = { ( x t n l + 1 , y t n l + 1 ) , ? ? ? , ( x t n l + nu , y t n l + nu } ?
R d from the marginal distribution P t ( X ) .
The goal is to build a classifier for the target domain data using the source domain data and a few labeled target domain data .
In the following section , we first introduce the CMD metric , which is used to measure the probability distribution discrepancy between two random variables .
Then , we describe our method to extract the domain specific and domain invariant representations of target domain examples , using the CMD - based regularizer .
Finally , we show how to combine these two representations using a co-training framework .
Central Moment Discrepancy ( CMD )
The CMD metric was proposed by Zellinger et al . ( 2017 ) to measure the discrepancy between the probability distributions of two ( highdimensional ) random variables .
It is one of the state - of - the - art metrics and is used as a domain regularizer for domain adaptation .
Here , we introduce its definition as a domain regularizer .
Definition 1 ( CMD regularizer ) .
Let X and Y be bounded random samples with respective probability distributions p and q on the interval [ a , b] N .
The CMD regularizer CM D K is defined by CM D K ( X , Y ) = 1 | b ? a| E ( X ) ? E( Y ) 2 + 1 | b ? a| k K k=2 C k ( X ) ? C k ( Y ) 2 , ( 1 ) where E( X ) = 1 | X | x?X x is the empirical expectation vector computed on the sample X and C k ( X ) = E ( N i=1 ( X i ? E ( X i ) ) r i r i ?0 , N i r i =k , is the vector of all k th order sample central moments of the coordinates of X .
An intuitive understanding of this metric is that if two probability distributions are similar , their central moment of each order should be close .
Extract Domain Invariant and Domain Specific Representations
In this work , we aim to extract a domain invariant representation , as well as a domain specific counterpart , for each target example .
This makes our work different from most of the existing works , which only focus on the domain invariant representation .
The general architecture of the proposed model is illustrated in Figure 2 . Data are mapped into a domain invariant hidden space and target domain specific hidden space using two different mappers E t and E c , respectively : H s spec = E t ( X s ; ? t e ) H t spec = E t ( X t ; ? t e ) H s inv = E c ( X s ; ? c e ) H t inv = E c ( X t ; ? c e ) .
( 2 ) Here , E t refers to the domain invariant mapper and E c is the target domain specific mapper .
?
t e and ?
c e denote their corresponding parameters .
The subscript e denotes encode .
Based on the hidden presentations H t inv and H t spec , we build an autoencoder for the target domain examples :
Xt = D t ( H t inv , H t spec ; ? t d ) , ( 3 ) with respect to parameters ?
t d , where the subscript d denotes decode .
The corresponding reconstruction loss is defined by the mean square error : L recon = 1 n t nt i 1 k ||X i t ?
Xt i || 2 2 , ( 4 ) where k is the dimension of the input feature vector , and X i t denotes the i th example of the target domain data .
Note that in this work , only target examples are passed to the auto-encoder because we only want to extract target domain specific information .
For E c , we hope that it only encodes features shared by both the source and target domains .
From the distribution view , we hope that the distributions of the mapped outputs , by E c , of source and target data are similar .
To this end , we apply the CMD regularizer onto the hidden representation of source data H s inv and that of target data H t inv .
The corresponding loss is defined by : L sim = CM D K ( H s inv , H t inv ) .
( 5 ) Minimizing this loss will force the distribution of H s inv and H t inv to be similar , which in turn encourages E c to encode domain invariant features .
And for the domain specific encoder E t , we hope that it only encodes features dominated by the target domain .
Ideally , these features should commonly appear in the target domain while hardly appear in the source domain .
We argue that this can also be obtained by forcing the distribution of these features in the target domain to differ from that in the source domain , because the target specific auto-encoder D t should filter out features that hardly appear in the target domain while commonly appear in the source domain .
Based on this intuition , we apply a signal flipped CMD regularizer onto the mapped representation of source data H s spec and that of target data H t spec .
The corresponding loss is defined by : L dif f = ?CM
D K ( H s spec , H t spec ) .
( 6 ) Minimizing this loss encourages the distribution of H s spec to differ from that of H t spec , which in turn encourage E t to encode domain specific features .
Co-Training with Domain Invariant and Domain Specific Representations
The the domain invariant hidden space , we use both the source rich labels and a few target labels to train the classifier F c .
To train the classifier F t , only the target labels are used .
The entire procedure is described in Algorithm 1 .
Model Learning
The training of this model is divided into two parts with one for the domain invariant classifier , F c , and another one for the domain specific classifier , F t .
For F c , the goal of training is to minimize the following loss with respect to parameters ? = {? c e , ? c e , ?
t d , ? c } : L = L recon ( ?
c e , ?
t e , ? t d ) + ?L c (? c e , ? c ) + ?L sim ( ?
c e ) + ?L dif f ( ? t e ) , ( 7 ) where ? , ? , and ? are weights that control the interaction of the loss terms .
L ( ? ) means that loss , L , is optimized on the parameters ? during training .
And L c denotes the classification loss on the domain invariant representation , which is defined by the negative log-likelihood of the ground truth class for examples of both source and target domains : L c = 1 n s + l t ns i=1 ?Y
i s log F c ( Y i s | E c ( L i s ) ) + 1 n s + l t lt i=1 ?Y
i t log F c ( Y i t | E c ( L i t ) ) , ( 8 ) where Y i s is the one- hot encoding of the class label for the i th source example , Y i t is that for the i th labeled target example , and l t denotes the dynamic number of target labeled data in each iteration .
For F t , the goal of training is to minimize the following loss with respect to parameters ? = {? c e , ?
t e , ?
t d , ? t } : L = L recon ( ?
c e , ?
t e , ? t d ) + ?L t ( ?
t e , ? t ) + ?L sim ( ?
c e ) + ?L dif f ( ? t e ) , ( 9 ) where ? and ? are the same weights as those for the classifier F c , and ? is the weight that controls the portion of classification loss , L t , on the domain specific representation , which is defined by the negative log-likelihood of the ground truth class for examples of the target domain only :
The major experiments were performed on the benchmark made of reviews of Amazon products gathered by .
This data set 1 contains Amazon product reviews from four different domains : Books , DVD , Electronics , and Kitchen appliances from Amazon.com .
Each review was originally associated with a rating of 1 - 5 stars .
For simplicity , we are only concerned with whether or not a review is positive ( higher than 3 stars ) or negative ( 3 stars or lower ) .
Reviews are encoded in 5,000 dimensional tf - idf feature vectors of bag-of-words unigrams and bigrams .
From this data , we constructed 12 cross-domain binary classification tasks .
1 : Average prediction accuracy with 5 runs on target domain testing data set .
The left group of models refer to previous state - of - the - art methods and the right group of models refer to the proposed model and some of its variants .
We list the p-values of the T-test between CoCMD and CMD - ft for more intuitive understanding .
L t = 1 l t lt i=1 ?Y
i t log F t ( Y i t | E t ( L i t ) ) (
Compared Methods CoCMD is systematically compared with : 1 ) neural network classifier without any domain adaptation trained on labeled source data only ( SO ) ; 2 ) neural network classifier without any domain adaptation trained on the union of labeled source and target data ( ST ) ; 3 ) unsupervised central moment discrepancy trained with labeled source data only ( CMD ) ( Zellinger et al. , 2017 ) ; 4 ) unsupervised domain separation network ( DSN ) ( Bousmalis et al. , 2016 ) ; 5 ) semi-supervised CMD trained on labeled source data and then finetuned on labeled target data ( CMD - ft ) ; 6 ) semisupervised DSN trained on labeled source data and then fine-tuned on labeled target data ( DSNft ) ; 7 ) semi-supervised Co-training for domain adaptation ( CODA ) ( Chen et al. , 2011 ) .
Implementation Detail CoCMD was imeplented with a similar architecture to that of Ganin et al. , ( 2016 ) and Zellinger et al. , ( 2017 ) , with one dense hidden layer with 50 hidden nodes and sigmoid activation functions .
The classifiers consist of a softmax layer with two dimensional outputs .
And the decoder was implemented with a multilayer perceptron ( MLP ) with one dense hidden layer , tanh activation functions , and relu output functions .
Model optimization was performed using the RmsProp ( Tieleman and Hinton , 2012 ) update rule with learning rate set to 0.005 for all of the tasks .
Hyper-parameter K of the CMD regularizer was set to 3 for all of the tasks , according to the experiment result of Zellinger et al . ( 2017 ) .
For the hyper-parameters ? , ? , ? , and ? , we took the values that achieve the best performance on the developing data set via a grid search { 0.01 , 0.1 , 1 , 10 , 100 } .
However , instead of building grids on ? , ? , ? , and ? all at the same time , we first fine - tuned the values of ? and ? with the values of ? and ? fixed at 1 .
After that , we finetuned the values of ? and ? with ? and ? fixed at the best values obtained at last step .
Though , this practice may miss the best combination of these hyper-parameters , it can greatly reduce the time consuming for fine-tuning and still obtain acceptable results .
And for each iteration of the co-training , we set p = n = 5 .
Result Table 1 shows the average classification accuracy of our proposed model and the baselines over all 12 domain adaptation tasks .
We can first observe that the proposed model CoCMD outperforms the compared methods over almost all of the the distance of two domains .
The proxy was defined by 2 ( 1 ? 2 ) , where is the generalization error of a linear SVM classifier trained on the binary classification problem to distinguish inputs between the source and target domains .
Figure 4 shows the results of each pair of domains .
We observe several trends :
Firstly , the proxy A-distance of within-group domain pairs ( i.e. , BD and EK ) is consistently smaller than that of the cross-group domain pairs ( i.e. , BK and DE ) on all of the hidden spaces .
Secondly , the proxy A-distance on the domain specific space is consistently larger than its corresponding value on the hidden space of SO model , as expected .
While the proxy A-distance value on domain invariant space is generally smaller than its corresponding value on the hidden space of SO model , except for BK domain pair .
A possible explanation is that the balance of classification loss and domain discrepancy loss makes there is still some target domain specific information in the domain invariant space , introduced by the target unlabeled data .
Visualization :
For more intuitive understanding of the behaviour of the proposed model , we further perform a visualization of the domain invariant representation and the domain specific representation , respectively .
For this purpose , we reduce the dimension of the hidden space to 2 using principle component analysis ( PCA ) ( Wold et al. , 1987 ) .
Due to space constraints we choose three tasks : two within-group tasks ( B?D and E?K ) and a cross-group task ( B?K ) .
For comparison , we also display the distribution of each domain in the hidden space of the SO model .
The results are shown in Figure 3 . Pictures of the first column in Figure 3 show the original distribution of the source and target examples in the hidden space of SO model .
As can be seen , there is a great overlap between the distributions of the domain B and the domain D domains and between the distributions of the domain E and the domain K .
While there is quite a gap between the distribution of the domain B and the domain K .
This strengthens our argument that within-group domains share relatively more common information than cross-group domains .
Pictures of the second column show the distribution of the source and target examples in the domain invariant hidden space of the proposed model .
From these pictures we can see that the distributions of the source and target data are quite similar in this presentation .
This demonstrates the effectiveness of the CMD regularizer for extracting domain invariant representation .
Pictures of the third column show the distribution of the source and target examples in the domain specific hidden space of the proposed model .
As can be seen from these pictures , examples of the source and target domains are separated very well .
This demonstrates the effectiveness of our proposed method for extracting domain specific information .
Conclusion
In this work , we investigated the importance of domain specific information for domain adaptation .
In contrast with most of the previous methods , which pay more attention to domain invariant information , we showed that domain specific information could also be beneficially used in the domain adaptation task with a small amount of in-domain labeled data .
Specifically , we proposed a novel method , based on the CMD metric , to simultaneously extract domain invariant feature and domain specific feature for target domain data .
With these two different features , we performed co-training with labeled data from the source domain and a small amount of labeled data from the target domain .
Sentiment analysis experiments demonstrated the effectiveness of this method .
Domain adaptation for sentiment classification has been widely studied in the NLP community .
