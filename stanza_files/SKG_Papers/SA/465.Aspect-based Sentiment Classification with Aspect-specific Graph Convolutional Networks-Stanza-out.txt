title
Aspect- based Sentiment Classification with Aspect-specific Graph Convolutional Networks
abstract
Due to their inherent capability in semantic alignment of aspects and their context words , attention mechanism and Convolutional Neural Networks ( CNNs ) are widely applied for aspect-based sentiment classification .
However , these models lack a mechanism to account for relevant syntactical constraints and long-range word dependencies , and hence may mistakenly recognize syntactically irrelevant contextual words as clues for judging aspect sentiment .
To tackle this problem , we propose to build a Graph Convolutional Network ( GCN ) over the dependency tree of a sentence to exploit syntactical information and word dependencies .
Based on it , a novel aspectspecific sentiment classification framework is raised .
Experiments on three benchmarking collections illustrate that our proposed model has comparable effectiveness to a range of state - of - the - art models 1 , and further demonstrate that both syntactical information and long-range word dependencies are properly captured by the graph convolution structure .
Introduction Aspect- based ( also known as aspect-level ) sentiment classification aims at identifying the sentiment polarities of aspects explicitly given in sentences .
For example , in a comment about a laptop saying " From the speed to the multi-touch gestures this operating system beats Windows easily . " , the sentiment polarities for two aspects operating system and Windows are positive and negative , respectively .
Generally , this task is formulated as predicting the polarity of a provided ( sentence , aspect ) pair .
Given the inefficiency of manual feature refinement ( Jiang et al. , 2011 ) , early works of aspect-based sentiment classification are mainly based on neural network methods ( Dong et al. , 2014 ; Vo and Zhang , 2015 ) .
Ever since Tang et al. ( 2016a ) pointed out the challenge of modelling semantic relatedness between context words and aspects , attention mechanism coupled with Recurrent Neural Networks ( RNNs ) ( Bahdanau et al. , 2014 ; Luong et al. , 2015 ; starts to play a critical role in more recent models ( Wang et al. , 2016 ; Tang et al. , 2016 b ; Liu and Zhang , 2017 ; Ma et al. , 2017 ; Huang et al. , 2018 ) .
While attention - based models are promising , they are insufficient to capture syntactical dependencies between context words and the aspect within a sentence .
Consequently , the current attention mechanism may lead to a given aspect mistakenly attending to syntactically unrelated context words as descriptors ( Limitation 1 ) .
Look at a concrete example " Its size is ideal and the weight is acceptable . " .
Attention - based models often identify acceptable as a descriptor of the aspect size , which is in fact not the case .
In order to address the issue , He et al . ( 2018 ) imposed some syntactical constraints on attention weights , but the effect of syntactical structure was not fully exploited .
In addition to the attention - based models , Convolutional Neural Networks ( CNNs ) ( Xue and Li , 2018 ; have been employed to discover descriptive multi-word phrases for an aspect , based on the finding ( Fan et al. , 2018 ) that the sentiment of an aspect is usually determined by key phrases instead of individual words .
Nevertheless , the CNN - based models can only perceive multi-word features as consecutive words with the convolution operations over word sequences , but are inadequate to determine sentiments depicted by multiple words that are not next to each other ( Limitation 2 ) .
In the sentence " The staff should be a bit more friendly " with staff as the aspect , a CNN - based model may make an incorrect prediction by detecting more friendly as the descriptive phrase , disregarding the impact of should be which is two words away but reverses the sentiment .
In this paper , we aim to tackle the two limitations identified above by using Graph Convolutional Networks ( GCNs ) ( Kipf and Welling , 2017 ) .
GCN has a multi-layer architecture , with each layer encoding and updating the representation of nodes in the graph using features of immediate neighbors .
Through referring to syntactical dependency trees , a GCN is potentially capable of drawing syntactically relevant words to the target aspect , and exploiting long- range multi-word relations and syntactical information with GCN layers .
GCNs have been deployed on document- word relationships ( Yao et al. , 2018 ) and tree structures ( Marcheggiani and Titov , 2017 ; Zhang et al. , 2018 ) , but how they can be effectively used in aspect-based sentiment classification is yet to be explored .
To fill the gap , this paper proposes an Aspectspecific Graph Convolutional Network ( ASGCN ) , which , to the best of our knowledge , is the first GCN - based model for aspect- based sentiment classification .
ASGCN starts with a bidirectional Long Short - Term Memory network ( LSTM ) layer to capture contextual information regarding word orders .
In order to obtain aspect-specific features , a multi-layered graph convolution structure is implemented on top of the LSTM output , followed by a masking mechanism that filters out nonaspect words and keeps solely high - level aspectspecific features .
The aspect-specific features are fed back to the LSTM output for retrieving informative features with respect to the aspect , which are then used to predict aspect-based sentiment .
Experiments on three benchmarking datasets show that ASGCN effectively addresses both limitations of the current aspect-based sentiment classification approaches , and outperforms a range of state - of - the - art models .
Our contributions are as follows : ?
We propose to exploit syntactical dependency structures within a sentence and resolve the long-range multi-word dependency issue for aspect- based sentiment classification .
?
We posit that Graph Convolutional Network ( GCN ) is suitable for our purpose , and pro- pose a novel Aspect-specific GCN model .
To our best knowledge , this is the first investigation in this direction .
?
Extensive experiment results verify the importance of leveraging syntactical information and long-range word dependencies , and demonstrate the effectiveness of our model in capturing and exploiting them in aspectbased sentiment classification .
Graph Convolutional Networks GCNs can be considered as an adaptation of the conventional CNNs for encoding local information of unstructured data .
For a given graph with k nodes , an adjacency matrix 2 A ? R k?k is obtained through enumerating the graph .
For convenience , we denote the output of the l-th layer for node i as h l i , where h 0 i represents the initial state of node i. For an L-layer GCN , l ? [ 1 , 2 , ? ? ? , L ] and h L i is the final state of node i .
The graph convolution operated on the node representation can be written as : h l i = ?( k j=1 A ij W l h l?1 j + b l ) ( 1 ) where W l is a linear transformation weight , b l is a bias term , and ? is a nonlinear function , e.g. ReLU .
For a better illustration , an example of GCN layer is shown in Figure 1 .
As the graph convolution process only encodes information of immediate neighbors , a node in the graph can only be influenced by the neighbouring nodes within L steps in an L-layer GCN .
In this way , the graph convolution over the dependency tree of a sentence provides syntactical constraints for an aspect within the sentence to identify descriptive words based on syntactical distances .
Moreover , GCN is able to deal with the circumstances where the polarity of an aspect is described by non-consecutive words , as GCN over dependency tree will gather the non-consecutive words into a smaller scope and aggregate their features properly with graph convolution .
Therefore , we are inspired to adopt GCN to leverage syntactical information and long-range word dependencies for aspect- based sentiment classification .
Aspect-specific Graph Convolutional Network Figure 2 gives an overview of ASGCN .
The components of ASGCN will be introduced separately in the rest of the section .
Embedding and Bidirectional LSTM Given a n-word sentence c = {w c 1 , w c 2 , ? ? ? , w c ?
+ 1 , ? ? ? , w c ? +m , ? ? ? , w c n?1 , w c n } containing a corresponding m-word aspect starting from the ( ? + 1 ) - th token , we embed each word token into a low-dimensional real- valued vector space ( Bengio et al. , 2003 ) with embedding matrix E ? R | V |?de , where | V | is the size of vocabulary and d e denotes the dimensionality of word embeddings .
With the word embeddings of the sentence , a bidirectional LSTM is constructed to produce hidden state vectors where h c t ?
R 2d h represents the hidden state vector at time step t from the bidirectional LSTM , and d h is the dimensionality of a hidden state vector output by an unidirectional LSTM .
H c = {h c 1 , h c 2 , ? ? ? , h c ?
+ 1 , ? ? ? , h c ? +m , ? ? ? , h c n?1 , h c n } ,
Obtaining Aspect-oriented Features
Different from general sentiment classification , aspect- based sentiment classification targets at judging sentiments from the view of aspects , and thus calls for an aspect-oriented feature extraction strategy .
In this study , we obtain aspect-oriented features by applying multi-layer graph convolution over the syntactical dependency tree of a sentence , and imposing an aspect-specific masking layer on its top .
Graph Convolution over Dependency Trees Aiming to address the limitations of existing approaches ( as discussed in previous sections ) , we leverage a graph convolutional network over dependency trees of sentences .
Specifically , after the dependency tree 3 of the given sentence is constructed , we first attain an adjacency matrix A ?
R n?n according to the words in the sentence .
It is important to note that dependency trees are directed graphs .
While GCNs generally do not consider directions , they could be adapted to the direction - aware scenario .
Accordingly , we propose two variants of ASGCN , i.e. ASGCN - DG on dependency graphs which are un-directional , and ASGCN - DT concerning dependency trees which are directional .
Practically , the only difference between ASGCN - DG and ASGCN - DT lies in their adjacency matrices :
The adjacency matrix of ASGCN - DT is much more sparse than that of ASGCN - DG .
Such setting is in accordance with the phenomenon that parents nodes are broadly influenced by their children nodes .
Furthermore , following the idea of self-looping in Kipf and Welling ( 2017 ) , each word is manually set adjacent to itself , i.e. the diagonal values of A are all ones .
The ASGCN variants are performed in a multilayer fashion , on top of the bidirectional LSTM output in Section 3.1 , i.e .
H 0 = H c to make nodes aware of context ( Zhang et al. , 2018 ) .
Then the representation of each node is updated with graph convolution operation with normalization factor ( Kipf and Welling , 2017 ) as below : hl i = n j=1 A ij W l g l?1 j ( 2 ) h l i = ReLU ( hl i /( d i + 1 ) + b l ) ( 3 ) where g l?1 j ?
R 2d h is the j-th token 's representation evolved from the preceding GCN layer while h l i ?
R 2d h is the product of current GCN layer , and d i = n j=1 A ij is degree of the i-th token in the tree .
The weights W l and bias b l are trainable parameters .
It is worth noting that we do not have h l i immediately fed into successive GCN layer , but conduct a position - aware transformation in the first place : where F ( ? ) is a function assigning position weights , widely adopted by previous works Tang et al. , 2016 b ; , for augmenting the importance of context words close to the aspect .
By doing so we aim at reducing the noise and bias that may have naturally arisen from the dependency parsing process .
Specifically , the function F ( ? ) is : g l i = F( h l i ) ( 4 ) ? ? ? ? ? ? Context Hidden States Attention Scores Embeddings ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? L- q i = ? ? ? ? ? 1 ? ? + 1? i n 1 ? i < ? + 1 0 ? + 1 ? i ? ? + m 1 ? i? ?m n ? + m < i ? n ( 5 ) F( h l i ) = q i h l i ( 6 ) where q i ?
R is the position weight to i-th token .
The final outcome of the L-layer GCN is H L = {h L 1 , h L 2 , ? ? ? , h L ? +1 , ? ? ? , h L ? +m , ? ? ? , h L n?1 , h L n } , h L t ?
R 2d h .
Aspect-specific Masking
In this layer , we mask out hidden state vectors of non-aspect words and keep the aspect word states unchanged : h L t = 0 1 ? t < ? + 1 , ? + m < t ? n ( 7 ) The outputs of this zero-masking layer are the aspect-oriented features H L mask = { 0 , ? ? ? , h L ? +1 , ? ? ? , h L ? +m , ? ? ? , 0 }.
Through graph convolution , these features H L mask have perceived contexts around the aspect in such a way that considers both syntactical dependencies and long-range multiword relations .
Aspect-aware Attention Based on the aspect-oriented features , a refined representation of the hidden state vectors H c is produced via a novel retrieval - based attention mechanism .
The idea is to retrieve significant features that are semantically relevant to the aspect words from the hidden state vectors , and accordingly set a retrieval - based attention weight for each context word .
In our implementation , the attention weights are computed as below : ?
t = n i=1 h c t h L i = ? +m i= ?
+ 1 h c t h L i ( 8 ) ? t = exp (? t ) n i=1 exp ( ? i ) ( 9 ) Here , the dot product is used to measure the semantic relatedness between aspect component words and words in the sentence so that aspectspecific masking , i.e. zero masking , could take effect as shown in Equation 8 .
The final representation for prediction is therefore formulated as : r = n t=1 ? t h c t ( 10 )
Sentiment Classification
Having obtained the representation r , it is then fed into a fully - connected layer , followed by a softmax normalization layer to yield a probability distribution p ?
R dp over polarity decision space : p = softmax ( W p r + b p ) ( 11 ) where d p is the same as the dimensionality of sentiment labels while W p ?
R dp?2d h and b p ?
R dp are the learned weight and bias , respectively .
Training
This model is trained by the standard gradient descent algorithm with the cross-entropy loss and L 2 - regularization : Loss = ? ( c , p ) ?
C log p p + ? ? 2 ( 12 ) where C denotes the collection of data sets , p is the label and p p means the p-th element of p , ? represents all trainable parameters , and ? is the coefficient of L 2 - regularization .
Experiments
Datasets and Experimental Settings
Our experiments are conducted on five datasets : one ( TWITTER ) is originally built by Dong et al . ( 2014 ) containing twitter posts , while the other four ( LAP14 , REST14 , REST15 , REST16 ) are respectively from SemEval 2014 task 4 ( Pontiki et al. , 2014 ) , SemEval 2015 task 12 ( Pontiki et al. , 2015 ) and SemEval 2016 task 5 ( Pontiki et al. , 2016 ) , consisting of data from two categories , i.e. laptop and restaurant .
Following previous work ( Tang et al. , 2016 b ) , we remove samples with conflicting 4 polarities or without explicit aspects in the sentences in REST15 and REST16 .
The statistics of datasets are reported in Table 1 .
For all our experiments , 300 - dimensional pretrained GloVe vectors ( Pennington et al. , 2014 ) learning rate of 0.001 .
The coefficient of L 2regularization is 10 5 and batch size is 32 .
Moreover , the number of GCN layers is set to 2 , which is the best-performing depth in pilot studies .
The experimental results are obtained by averaging 3 runs with random initialization , where Accuracy and Macro- Averaged F1 are adopted as the evaluation metrics .
We also carry out paired ttest on both Accuracy and Macro- Averaged F1 to verify whether the improvements achieved by our models over the baselines are significant .
Models for Comparison
In order to comprehensively evaluate the two variants of our model , namely , ASGCN - DG and ASGCN - DT , we compare them with a range of baselines and state - of - the - art models , as listed below : ? SVM ( Kiritchenko et al. , 2014 ) is the model which has won SemEval 2014 task 4 with conventional feature extraction methods .
? LSTM ( Tang et al. , 2016a ) uses the last hidden state vector of LSTM to predict sentiment polarity .
?
MemNet ( Tang et al. , 2016 b ) considers contexts as external memories and benefits from a multi-hop architecture .
? AOA ( Huang et al. , 2018 ) borrows the idea of attention - over-attention from the field of machine translation .
? IAN ( Ma et al. , 2017 ) interactively models the relationships between aspects and their contexts . ?
TNet - LF puts forward Context -Preserving Transformation ( CPT ) to preserve and strengthen the informative part of contexts .
In order to examine to what degrees GCN would outperform CNN , we also involve a model named ASCNN in the experiment , which replaces 2 - layer GCN with 2 - layer CNN in ASGCN 5 .
Results
As is shown in Table 2 , ASGCN - DG consistently outperforms all compared models on LAP14 and REST15 datasets , and achieves comparable results on TWITTER and REST16 datasets compared with baseline TNet - LF and on REST14 compared with ASCNN .
The results demonstrate the effectiveness of ASGCN - DG and the insufficiency of directly integrating syntax information into attention mechanism as in He et al . ( 2018 ) .
Meanwhile , ASGCN - DG performs better than ASGCN - DT by a large margin on TWITTER , LAP14 , Rest15 and REST16 datasets .
And ASGCN - DT 's result is lower than TNet - LF's on LAP14 .
A possible reason is that the information from parents nodes is as important as that from children nodes , so treating dependency trees as directed graphs leads to information loss .
Additionally , ASGCN - DG outperforms ASCNN on all datasets except REST14 , illustrating ASGCN is better at capturing long- range word dependencies , while to some extent ASCNN shows an impact brought by aspectspecific masking .
We suspect REST14 dataset is not so sensitive to syntactic information .
Moreover , the sentences from TWITTER dataset are less grammatical , restricting the efficacy .
We conjecture this is likely the reason why ASGCN - DG and ASGCN - DT get sub-optimal results on TWITTER dataset .
Ablation Study
To further examine the level of benefit that each component of ASGCN brings to the performance , an ablation study is performed on ASGCN - DG .
The results are shown in Table 3 .
We also present the results of BiLSTM + Attn as a baseline , which uses two LSTMs for the aspect and the context respectively .
First , removal of position weights ( i.e. ASGCN - DG w/o pos. ) leads to performance drops on LAP14 , REST15 and REST16 datasets but performance boosts on TWITTER and REST14 datasets .
Recall the main results on REST14 dataset , we conclude that the integration of position weights is not helpful to reduce noise of user generated contents if syntax is not crucial for the data .
Moreover , after we get rid of aspect-specific masking ( i.e. ASGCN - DG w/o masking ) , the model could not keep as competitive as TNet - LF .
This verifies the significance of aspect-specific masking .
Compared with ASGCN -DG , ASGCN - DG w/o GCN ( i.e. preserving position weights and aspectspecific masking , but without using GCN layers ) is much less powerful on all five datasets except F1 metric on TWITTER dataset .
STM + Attn on all datasets except REST14 dataset , due to the strength of the aspect-specific masking mechanism .
Thus it could be concluded that GCN contributes to ASGCN to a considerable extent since GCN captures syntatic word dependencies and long-range word relations at the same time .
Nevertheless , the GCN does not work well as expected on the datasets not sensitive to syntax information , as we have seen in TWITTER and REST14 datasets .
Case Study
To better understand how ASGCN works , we present a case study with several testing examples .
Particularly , we visualize the attention scores offered by MemNet , IAN , ASCNN and ASGCN - DG in Table 4 , along with their predictions on these examples and the corresponding ground truth labels .
The first sample " great food but the service was dreadful ! " has two aspects within one sentence , which may hinder attention - based models from aligning the aspects with their relevant descriptive words precisely .
The second sample sentence " The staff should be a bit more friendly . " uses a subjunctive word " should " , bringing extra difficulty in detecting implicit semantics .
The last example contains negation in the sentence , that can easily lead models to make wrong predictions .
MemNet fails in all three presented samples .
While IAN is capable of differing modifiers for distinct aspects , it fails to infer sentiment polarities of sentences with special styles .
Armed with position weights , ASCNN correctly predicts the label for the second sample as the phrase should be is close to the aspect staff , but failed for the third one with a longer - range word dependency .
Our ASGCN - DG correctly handles all the three samples , implying that GCN effectively integrates syntactic dependency information into an enriched semantic representation .
In particular , ASGCN - DG makes correct predictions on the second and the third sample , both having a seemingly biased focus .
This shows ASGCN 's capability of capturing long- range multi-word features .
Discussion
Investigation on the Impact of GCN Layers As ASGCN involves an L-layer GCN , we investigate the effect of the layer number L on the final performance of ASGCN - DG .
Basically , we vary the value of L in the set { 1,2,3,4,6,8,12 } and check the corresponding Accuracy and Macro-Averaged F1 of ASGCN - DG on the LAP14 dataset .
The results are illustrated in Figure 3 .
On both metrics , ASGCN - DG achieves the best performance when L is 2 , which justifies the selection on the number of layers in the experiment sec- tion .
Moreover , a dropping trend on both metrics is present as L increases .
For large L , especially when L equals to 12 , ASGCN - DG basically becomes more difficult to train due to large amount of parameters .
Investigation on the Effect of Multiple Aspects
In the datasets , there might exist multiple aspect terms in one sentence .
Thus , we intend to measure whether such phenomena would affect the effectiveness of ASGCN .
We divide the training samples in LAP14 and REST14 datasets into different groups based on the number of aspect terms in the sentences and compute the training accuracy differences between these groups .
It is worth noting that the samples with more than 7 aspect terms are removed as outliers because the sizes of these samples are too small for any meaningful comparison .
It can be seen in Figure 4 that when the number of aspects in the sentences is more than 3 , the accuracy becomes fluctuated , indicating a low robustness in capturing multiple -aspect correlations and suggesting the need of modelling multi-aspect
Related Work Constructing neural network models over word sequences , such as CNNs ( Kim , 2014 ; Johnson and Zhang , 2015 ) , RNNs ( Tang et al. , 2016a ) and Recurrent Convolutional Neural Networks ( RC - NNs ) ( Lai et al. , 2015 ) , has achieved promising performances in sentiment analysis .
However , the importance but lack of an effective mechanism of leveraging dependency trees for capturing distant relations of words has also been recognized .
Tai et al. ( 2015 ) showed that LSTM with dependency trees or constituency trees outperformed CNNs .
Dong et al. ( 2014 ) presented an adaptive recursive neural network using dependency trees , which achieved competitive results compared with strong baselines .
More recent research showed that general dependency - based models are difficult to achieve comparable results to the attentionbased models , as dependency trees are not capable of catching long -term contextualized semantic information properly .
Our work overcomes this limitation by adopting Graph convolutional networks ( GCNs ) ( Kipf and Welling , 2017 ) .
GCN has recently attracted a growing attention in the area of artificial intelligence and has been applied to Natural Language Processing ( NLP ) .
Marcheggiani and Titov ( 2017 ) claimed that GCN could be considered as a complement to LSTM , and proposed a GCN - based model for semantic role labeling .
Vashishth et al. ( 2018 ) and Zhang et al . ( 2018 ) used graph convolution over dependency trees in document dating and relation classification , respectively .
Yao et al. ( 2018 ) introduced GCN to text classification utilizing documentword and word - word relations , and gained improvements over various state - of - the - art methods .
Our work investigates the effect of dependency trees in depth via graph convolution , and develops aspect-specific GCN model that integrates with the LSTM architecture and attention mechanism for more effective aspect- based sentiment classification .
Conclusions and Future Work
We have re-examined the challenges encountering existing models for aspect-specific sentiment classification , and pointed out the suitability of graph convolutional network ( GCN ) for tackling these challenges .
Accordingly , we have proposed a novel network to adopt GCN for aspect- based sentiment classification .
Experimental results have indicated that GCN brings benefit to the overall performance by leveraging both syntactical information and long-range word dependencies .
This study may be further improved in the following aspects .
First , the edge information of the syntactical dependency trees , i.e. the label of each edge , is not exploited in this work .
We plan to design a specific graph neural network that takes into consideration the edge labels .
Second , domain knowledge can be incorporated .
Last but not least , the ASGCN model may be extended to simultaneously judge sentiments of multiple aspects by capturing dependencies between the aspects words .
Figure 1 : 1 Figure 1 : An example of GCN layer .
Figure 2 : 2 Figure 2 : Overview of aspect-specific graph convolutional network .
Figure 3 : 3 Figure 3 : Effect of the number of GCN layers .
Accuracy and macro- F1 scores are the average value over 3 runs with random initialization .
Figure 4 : 4 Figure 4 : Accuracy versus the number of aspects ( # Aspects ) in the sentences .
Table 1 : 1 Dataset statistics .
are used to initialize word embeddings .
All model weights are initialized with uniform distribution .
The dimensionality of hidden state vectors is set to 300 .
We use Adam as the optimizer with a
Table 2 : 2 ? 69.24 ? 80.86 ? 72.19 ? 79.34 ? ? 60.78 ? ? 88.69 ? 66.64 ? ASGCN -DG 72.15 ? 70.40 ? 75.55 ? ? 71.05 ? ? 80.77 ? 72.02 ? 79.89 ? ? 61.89 ? ? 88.99 ? 67.48 ? Model comparison results ( % ) .
Average accuracy and macro- F1 score over 3 runs with random initialization .
The best two results with each dataset are in bold .
The results with are retrieved from the original papers and the results with are retrieved from Dong et al . ( 2014 ) .
The marker ? refers p < 0.05 by comparing with ASCNN in paired t-test and the marker ? refers p < 0.05 by comparing with TNet - LF in paired t-test .
Model TWITTER LAP14 REST14 REST15 REST16 Acc. F1 Acc. F1 Acc. F1 Acc. F1 Acc. F1 SVM 63.40 63.30 70.49 N/A 80.16 N/A N/A N/A N/A N/A LSTM 69.56 67.70 69.28 63.09 78.13 67.47 77.37 55.17 86.80 63.88 MemNet 71.48 69.90 70.64 65.17 79.61 69.64 77.31 58.28 85.44 65.99 AOA 72.30 70.20 72.62 67.52 79.97 70.42 78.17 57.02 87.50 66.21 IAN 72.50 70.81 72.05 67.38 79.26 70.09 78.54 52.65 84.74 55.21 TNet -LF 72.98 71.43 74.61 70.14 80.42 71.03 78.47 59.47 89.07 70.43 ASCNN 71.05 69.45 72.62 66.72 81.73 73.10 78.47 58.90 87.39 64.56 ASGCN -DT 71.53 69.68 74.14
Table 3 : 3 However , ASGCN - DG w/o GCN is still slightly better than BiL-Ablation study results ( % ) .
Accuracy and macro- F1 scores are the average value over 3 runs with random initialization .
Model TWITTER LAP14 REST14 REST15 REST16 Acc. F1 Acc. F1 Acc. F1 Acc. F1 Acc. F1 BiLSTM + Attn 71.24 69.55 72.83 67.82 79.85 70.03 78.97 58.18 87.28 68.18 ASGCN -DG 72.15 70.40 75.55 71.05 80.77 72.02 79.89 61.89 88.99 67.48 ASGCN - DG w/o pos. 72.69 70.59 73.93 69.63 81.22 72.94 79.58 61.55 88.04 66.63 ASGCN - DG w/o mask 72.64 70.63 72.05 66.56 79.02 68.29 77.80 57.51 86.36 61.41 ASGCN -DG w/o GCN 71.92 70.63 73.51 68.83 79.40 69.43 79.40 61.18 87.55 66.19
Table 4 : 4 Case study .
Visualization of attention scores from MemNet , IAN , ASCNN and ASGCN - DG on testing examples , along with their predictions and correspondingly , golden labels .
The marker indicates correct prediction while the marker indicates incorrect prediction .
Model Aspect Attention visualization Prediction Label food great food but the service was dreadful ! negative positive MemNet staff Windows 8
The staff should be a bit more friendly .
Did not enjoy the new Windows 8 and touchscreen functions . positive negative positive negative food great food but the service was dreadful ! positive positive IAN staff Windows 8
The staff should be a bit more friendly .
Did not enjoy the new Windows 8 and touchscreen functions . positive negative neutral negative food great food but the service was dreadful ! positive positive ASCNN staff Windows 8
The staff should be a bit more friendly .
Did not enjoy the new Windows 8 and touchscreen functions . negative negative positive negative food great food but the service was dreadful ! positive positive ASGCN - DG staff Windows 8
The staff should be a bit more friendly .
Did not enjoy the new Windows 8 and touchscreen functions . negative negative negative negative
Aij indicates whether the i-th token is adjacent to the j-th token or not .
We use spaCy toolkit : https://spacy.io/.
An opinion target is associated with different sentiment polarities .
In order to ensure the length of input and output is consistent , kernel length is set to 3 and padding is 1 .
