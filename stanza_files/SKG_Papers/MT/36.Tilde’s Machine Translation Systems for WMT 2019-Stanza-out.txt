title
Tilde 's Machine Translation Systems for WMT 2019
abstract
The paper describes the development process of Tilde 's NMT systems for the WMT 2019 shared task on news translation .
We trained systems for the English -Lithuanian and Lithuanian - English translation directions in constrained and unconstrained tracks .
We build upon the best methods of the previous year 's competition and combine them with recent advancements in the field .
We also present a new method to ensure source domain adherence in back - translated data .
Our systems achieved a shared first place in human evaluation .
Introduction
Since the paradigm-shifting success of neural machine translation ( NMT ) systems at the 2016 Conference on Machine Translation ( WMT ) ( Bojar et al. , 2016 ) , NMT methods and neural network architectures applied in NMT have been annually improved .
In 2016 , the best-performing systems were based on recurrent neural networks with gated recurrent units ( GRU ) ( Sennrich et al. , 2016 ; Bojar et al. , 2016 ) .
In 2017 , deep GRU models ( Sennrich et al. ) and models based on shallow multiplicative long short - term memory units ( MLSTM ; ( Pinnis et al. , 2017 b ) ) allowed achieving the best results ( Bojar et al. , a ) .
In 2018 , the majority of best-performing systems were based on self-attentional ( Vaswani et al. , 2017 ) ( Transformer ) models ( Bojar et al. , b ) .
A year has passed , and the majority of bestperforming systems submitted to the shared task on news translation of WMT 2019 are still based on Transformer networks .
However , improvements are evident in other areas ( e.g. , usage of document - level context , very deep models , distillation by ensemble teachers , etc. )
1 . Quite a few of the submissions indicate that substantial amounts of computational resources may have been utilised in order to achieve such results .
As we do not have access to large GPU clusters , our strategy for participating at the shared task on news translation of the 2019 Conference on Machine Translation was comprised of combining different methods that showed promising results in scientific publications published in 2018 , and analysing whether the methods allowed increasing the overall quality of NMT systems when training NMT models using just modest hardware ( with access to one or two graphical processing units ) and with the goal of producing models suitable for production .
In our experiments , we investigated methods for corpora filtering ( the Tilde MT parallel data filtering ( TMTF ) and normalisation workflow ( Pinnis , 2018 ) together with dual conditional cross-entropy filtering ( DCCEF ) ( Junczys - Dowmunt , 2018 ) ) , training data pre-processing using the methods described by Pinnis et al . ( 2018a ) , a new optimisation method , the quasi-hyperbolic Adam , proposed by Ma and Yarats ( 2018 ) , back - translation with sampling - based decoding ( e.g. , as done by ) and by targeting rare words ( Fadaee and Monz , 2018 ) and in- domain subsets of the monolingual data , and automatic linguistically informed post-editing of named entities and non-translatable phrases .
This year , Tilde participated in the shared task on news translation for the English ?
Lithuanian language pair .
We trained constrained and unconstrained systems for both translation directions .
The paper is further structured as follows :
Section 2 describes the data used for training , Section 3 describes the main NMT model training experiments , Section 4 describes our experiments on automatic post-editing of named entities , Section 5 summarises our automatic evaluation results , and the paper is concluded in Section 6 .
Data Similarly to the year before , we used both constrained data , which were provided by the organisers of the shared task , as well as unconstrained data , which comprised publicly available parallel and monolingual corpora as well as proprietary data from the Tilde Data Library 2 .
For language model ( LM ) training and back - translation , we used news data provided by the organisers .
For the unconstrained systems , we used a proprietary news corpus .
The raw statistics of data available are provided in Table 1 .
For validation , we used the first 1000 sentences of the NewsDev2019 data set .
Evaluation was performed on NewsTest 2019 .
Data Filtering
For data filtering , we applied the parallel data filtering methods of Tilde MT ( Pinnis et al. , 2018 b ; Pinnis , 2018 ) for both constrained and unconstrained systems .
The filters address potential issues that arise from misalignment of parallel data , incomplete translation , various types of data corruption , and other types of data quality issues .
However , these filters do not perform data selection .
Therefore , we applied also data filtering using DCCEF proposed by Junczys -Dowmunt ( 2018 ) .
As it uses an in- domain LM to discard out - of- domain sentence pairs , it performs the task of data selection .
Because for the constrained systems the data-set was not sufficiently large , we applied the filter with a threshold of > 0 .
For the unconstrained systems , we set the threshold to 11 million 3 highest scored sentence pairs .
For monolingual data , we filtered out all sentences that : 1 ) were redundant , 2 ) exceeded 128 tokens or 1000 characters , 3 ) contained tokens over 50 characters , and 4 ) contained corrupt characters .
See Table 1 for statistics of data filtering .
Data Pre-Processing
This year , we did not change the parallel and monolingual data pre-processing workflows that we used for our WMT 2018 submissions ( Pinnis et al. , 2018a ) .
Similarly to last year , the training corpora were supplemented with synthetic data where up to three words in each sentence were replaced with unknown word identifiers on both source and target sides to ensure that the NMT models are able to handle rare and unknown phenomena during translation ( Pinnis et al. , 2017 a ) .
The statistics of the parallel corpora after supplementing them with synthetic data sets are provided in Table 1 .
NMT Systems
We took an iterative approach to validating the methods we selected for use in NMT system training .
At each step , we either accepted or rejected a method for further use based on its performance compared to a baseline .
When moving on , we would often use the previously selected method as a baseline for the next method ( which we would combine with the previous method ) and so on .
More specifically , we conducted the experiments as follows : 1 ) Filtering ( Section 3.1 ) , 2 ) ?QHAdam ( Section 3.2.1 ) , 3 ) regular back- translation , 4 ) large batches ( Section 3.3 ) , 5.a ) back - translation using beam search or sampling ( Section 3.4.2 ) , 5.b ) back - translation using rare or random data ( Section 3.4.1 , the results were n't used further ) , 6 ) QHAdam ( Section 3.2 ) , 7 ) Source domain adherence ( Section 3.4.3 ) , 8 ) Transformer - big ( Section 3.5 ) .
The outline of this section loosely follows the above timeline .
As a result of the iterative approach , the evaluation of the training methods was mostly nonexhaustive - meaning that it was usually done only for a single translation direction ( most often En ? Lt ) testing only a few possible configurations ( e.g. , different model hyper- parameters , back - translated data- set size , etc. ) .
Also , for some experiments we did not methodically test the effect of each of the compounding changes to the experiment 's configuration , e.g. , in ?QHAdam experiments ( in Section 3.2 ) along with adopting the new optimiser we also selected a new learningrate and learning - rate schedule without confirming that the baseline optimiser would not also benefit from these changes .
As a result , for some experiments we cannot confirm with certainty that the selected method is better than the baseline , only that the selected method with a given set of hyperparameters is better .
The above choices were primarily motivated by resource and time constraints .
All NMT systems described further used the Transformer architecture ( Vaswani et al. , 2017 ) and were trained using the Marian NMT toolkit otherwise , we used the base model configuration for the model hyper-parameters .
Filtering Since DCCEF achieved the best results in the shared task on parallel corpus filtering at WMT 2018 ( Koehn et al. , 2018 ) , we decided to test whether the combination of our filtering methods ( i.e. , TMTF ) and DCCEF allows acquiring better models .
Therefore , we filtered the parallel corpora using DCCEF .
For this , we trained two NMT models using the data that were already filtered using TMTF and four language models ( two in - domain models that were trained on news corpora and two models trained using the parallel data ) , and trained several NMT systems .
Figure 1 shows the training progress for En ?
Lt .
It is evident that the combination of the methods works better only for the unconstrained systems .
We suspect that it is because the unconstrained data sets are large enough to leave enough training data remaining in the filtered data sets .
Further , all experiments for unconstrained systems will be performed using data filtered with TMTF and DCCEF and for constrained systems - only TMTF .
Figure 1 : En ?
Lt systems trained on datasets filtered using the TMTF and DCCEF methods
QHAdam
We used two versions of the Quasi-Hyperbolic Adam ( QHAdam ) optimiser ( Ma and Yarats , 2018 ) to train our systems - a version as described in the original paper , and a modified version ( ? QHAdam ) as described below .
The modified version was due to an error in our initial implementation of the optimiser but it performed well enough for us to use it to train the majority of the systems during the period of the competition .
? QHAdam
We define the ?QHAdam 's update step in ( 1 ) .
The definitions for g t , s t , v 1 and v 2 are the same as in the original paper .
The comparison of ?QHAdam and the baseline system for the constrained En ?
Lt track is given in Figure 2 . ? QHAdam was tested with different combinations of settings for the learning rate and the number of warm - up steps used .
In our initial experiments , we found that setting the learning rate to 5 ? 10 ?4 and using 48 k warm - up steps worked best .
A workspace size of 9 GB on 2 GPUs was used in Marian which resulted in an effective batch - size of around 255 sentences .
Using Large Batches
As shown by Popel and Bojar ( 2018 ) and , using a large batch size in conjunction with increasing the learning rate allows to train better - performing NMT systems .
We confirm these findings .
We trained the same system described in Section 3.2.1 except training it with a workspace size of 14 GB on 8 GPUs ( simulated using the --optimizer - delay option in Marian ) which resulted in an effective batch size of ?1263 sentences .
Additionally we increased the learning rate to 7.3 ? 10 ?4 roughly keeping to the rule of scaling the learning rate by a factor of ?
n when the batch size has increased by a factor of n ( Hoffer et al. , 2017 ) .
The results are given in Figure 3 .
These experiments were done using backtranslated data ( see Section 3.4 ) .
When using nonback - translated data , we saw overfitting occur .
? t+ 1 ? ? t ? ? ? ? ( 1 ? v 1 ) ? ? Lt ( ? t ) + v 1 ? g t +1 ( 1 ? v 2 ) ( ?
Lt ( ? t ) ) 2 + v 2 ? s t +1 + ? ? ( 1 )
Experiments with Back-translation
We used NMT model adaptation through backtranslation ( Sennrich et al. , 2015 ) to adapt NMT systems to the news domain .
We applied two iterations of back -translation and the subsequent system training to incrementally improve the backtranslated data set ( Rikters , 2018 ) .
We also analysed methods for selection of the data for backtranslation .
The methods are discussed further .
In the figures further , if not specified in the name of each system , the proportion between parallel and back - translated data is 1 - to - 1 .
Rare vs. Random Data for Back -Translation Fadaee and Monz ( 2018 ) showed that adaptation through back - translation works better if the data for back - translation can be considered rare or difficult .
Therefore , we compared two types of data selection - random selection and selection by target - ing rare words ( as proposed by Fadaee and Monz ( 2018 ) ) , back - translated the data sets using beam search , and trained NMT models .
Figure 4 depicts the training progress of the En ? Lt and Lt ?
En systems .
The results suggest that targeting of sentences containing rare words did not help .
We believe that this is due to the fact that what is rare in the target language may not be relevant for speakers of the source language .
Therefore , there is no guarantee that the method will work .
We stopped here and did not pursue this method further .
Beam vs. Sampling
As suggested by , when backtranslating data for domain adaptation , betterperforming models can be acquired when using sampling instead of beam search .
Therefore , we trained several systems on different amounts of back - translated data .
The training progress of the systems is depicted in Figure 5 .
For the final training iteration , we used sampling instead of beam-search during decoding for all but one system .
Source Domain Adherence
When adapting a system to a specific domain , it is important to use data from that specific domain .
However , since we use a monolingual corpus from the target language to adapt an NMT system for source content , there may still be a domain mismatch , because how people write and what they write about in the target language may be ( to higher or lower extent ) irrelevant for the people writing in the source language .
Therefore , we performed an experiment where we translated the in-domain source data into the target side using an NMT trained a language model on the translations , scored each sentence of the target side 's monolingual corpus , and used only the top-scored sentences for back - translation .
Comparison between systems trained on randomly selected data for back -translation and data selected using LMs ( with sorted in the name ) is given in Figure 6 .
Transformer Big
When training the unconstrained systems on the second iteration of back - translated data , we trained a variant for both translation directions using the transformer - big configuration ( Vaswani et al. , 2017 ) .
While doing so , we also adjusted the learning rate .
Due to time constraints and technical difficulties we were not able to run these experiments to completion .
Nonetheless , the transformer - big configuration still managed to surpass the baseline .
For results see Figure 7 .
Automatic Named Entity Post-Editing
In our submissions for WMT 2018 , we introduced an automatic named entity ( NE ) postediting ( ANEPE ) workflow ( Pinnis et al. , 2018a ) , which allowed to fix translations of NEs ( consisting of one word ) and non-translatable words after NMT decoding .
The method depends on the quality of word alignments .
Because then we did not have methods to extract reliable word alignments from Transformer models , we had to rely on external word alignment using fast align ( Dyer et al. , 2013 ) .
This resulted in many misalignments and unalignments , and incorrect postedits .
This year , we trained all models using the guided alignment method implemented in Marian .
Although we still had to pre-process training data using fast align , the NMT models learned to produce more reliable word alignments .
We also extended the ANEPE method to support multi-word NEs and non-translatable phrases .
The method works as described further .
Using collections of NEs and non-translatable phrases , we perform dictionary - based NE recognition in the source text .
Then , for each recognised unit , we analyse whether the NMT translation contains a valid translation of the source unit .
In order to support morphologically rich languages ( as is Lithuanian ) , stemming of tokens is performed .
However , NEs can already be included in surface forms in the NE collections to account for possible stemming -related issues .
If a valid translation is not found , we analyse whether we can identify , which target words the source unit was translated into .
If the words are next to each other ( i.e. , there is no gap between the target words ) , we replace the target words ( except trailing stop-words ) with the most similar ( according to Levenshtein distance ( Levenshtein , 1966 ) ) translation equivalent ( except trailing stop-words ) found in the NE collection .
Stop-words are excluded as the word alignment extracted from the NMT model commonly aligns stop-words to content words when stop-words ( dis ) appear in the target language .
Using ANEPE , we improved the translation quality by 0.04 to 0.1 BLEU points for all submissions .
Statistics also show that out of 408 named entities and non-translatable phrases identified in the Lithuanian validation set , 322 already had valid translations , 26 were post-edited , and the remaining 60 either had alignment issues or the target words were too dissimilar from the entries in the NE collection .
We applied ANEPE for all our submissions .
Results Automatic evaluation results of our final systems using BLEU 4 ( Papineni et al. , 2002 ) are given in Table 2 .
To acquire final translations , we performed also ensembling of the best-performing individual models .
For submission , we selected the best-performing models for both translation directions and both scenarios .
However , it is evident that other models were able to translate the New -sTest 2019 evaluation set better ( for 3 out of 4 submissions ) .
Although this can be expected , when deciding , which systems to submit , we did not account for the change of the evaluation strategy , i.e. , the fact that the evaluation set contained only texts originally written in the source language ( which is different from previous years ) .
The results clearly show that the models that are more source domain adherent ( e.g. , the ' ( u ) so-beam -?qh-1-to - 1 ' unconstrained system for Lt ? En ) even surpass the quality of our ensemble models .
Conclusion
The paper presented Tilde 's efforts on developing NMT systems for the WMT 2019 shared task on news translation .
We built upon our methods from the previous year and investigated other novel methods proposed in 2018 .
Our experiments showed that improvements in translation quality could be achieved by using improved filtering by combining TMTF and DCCEF , samplingbased back - translation ( although not for all sys - 4 BLEU scores were obtained using SacreBLEU ( Post , 2018 ) ( u ) so-sa-qh+- big-l035-1-to-2 29.12 30.09 ( u ) so-sa-qh-1-to-2 28.99 29.60 ( c ) so-sa-?qh-1-to-3.2 28.84 29.30 ( c ) so-sa-qh-1-to-3.2 28.66 28.93 ( c ) sa-1-to-3.3 28.17 28.94
Table 2 : Evaluation results - BLEU scores ( submitted models are underlined , bold marks best results for both scenarios , ( c ) - constrained scenario , ( u ) - unconstrained scenario , 'ens . '
- ensembles of models , ' sa ' - sampling - based back - translation , ' so ' - source domain adherence , ' qh ' - quasi-hyperbolic Adam , '? qh ' - modified version of ' qh ' , ' qh + ' -' qh ' with tuned parameters , ' M - to - N ' - the proportion of parallel and back - translated data ) tems ) , and the quasi-hyperbolic Adam optimiser .
We also introduced a new method that allows to boost the quality of back - translation by ensuring source domain adherence of the data selected for back - translation , as well as described improvements upon our automatic named entity postediting method .
Our systems achieved a shared first place in human evaluation .
Figure 2 : 2 Figure 2 : Training progress for the baseline and ?QHAdam systems in the En ?
Lt translation direction .
