title
CMU 's Machine Translation System for IWSLT 2019
abstract
In Neural Machine Translation ( NMT ) the usage of subwords and characters as source and target units offers a simple and flexible solution for translation of rare and unseen words .
However , selecting the optimal subword segmentation involves a trade- off between expressiveness and flexibility , and is language and dataset - dependent .
We present Block Multitask Learning ( BMTL ) , a novel NMT architecture that predicts multiple targets of different granularities simultaneously , removing the need to search for the optimal segmentation strategy .
Our multi-task model exhibits improvements of up to 1.7 BLEU points on each decoder over singletask baseline models with the same number of parameters on datasets from two language pairs of IWSLT15 and one from IWSLT19 .
The multiple hypotheses generated at different granularities can also be combined as a post-processing step to give better translations .
Introduction Neural Machine Translation ( NMT ) [ 1 , 2 , 3 ] provides a simple , end - to - end framework for translating text from one language to another .
NMT approaches have largely outperformed and replaced previous statistical translation methods .
Traditionally , NMT systems used words as source and target units , which have three main disadvantages .
First , wordbased models are unable to translate rare and out of vocabulary ( OOV ) words in the source language .
Second , they can not produce unseen target words , such as morphological variants of observed words ( e.g. , deriving realistic from real ) .
Third , they have to handle large source and target language vocabularies ( i.e. , large look - up matrices ) , which makes them less scalable in term of computation and memory .
A large vocabulary also implies data sparsity where the number of tokens is not balanced .
A common solution for the problems mentioned above is to perform word segmentation .
The Byte-Pair Encoding ( BPE ) algorithm [ 4 ] groups units together according to their frequency .
By presetting the desired vocabulary size , the BPE algorithm generates a segmentation of the data by representing words as a collection of subword units .
More recently , [ 5 ] proposed a forward probabilistic subword segmentation algorithm which is based on a unigram language model , in contrast to the deterministic BPE algorithm .
Un - I flew on Air Force
Tw o for eight years .
Subword1 k Subword300
Shared Encoder
Subword10k
PROJ
BiLSTM
? BiLSTM n < l a t e x i t s h a 1 _ b a s e 6 4 = " I q W 2 N 3 6 Q k t B w n t G Q a v L h E 1 D L r r E = " > A A A B 6 H i c b V B N S 8 N A E J 3 U r 1 q / q h 6 9 L B b B U 0 l E q M e i F 4 S q G 1 C N g k t s G W 4 E d h O F N A o E d o L J 3 d z v P K H S P J Y P Z p q g H 9 G R 5 C F n 1 F i p K Q f l i l t 1 F y D r x M t J B X I 0 B u W v / j B m a Y T S M E G 1 7 n l u Y v y M K s O Z w F m p n 2 p M K J v Q E f Y s l T R C 7 W e L Q 2 f k w i p D E s b K l j R k o f 6 e y G i k 9 T Q K b G d E z V i v e n P x P 6 + X m v D G z 7 h M U o O S L R e F q S A m J v O v y Z A r Z E Z M L a F M c X s r Y W O q K D M 2 m 5 I N w V t 9 e Z 2 0 r 6 q e W / W a 1 5 X 6 b R 5 H E c 7 g H C 7 B g x r U 4 R 4 a 0 A I G C M / w C m / O o / P i v D s f y 9 a C k 8 + c w h 8 4 n z / X E Y z y < / l a t e x i t > < l a t e x i t s h a 1 _ b a s e 6 4 = " I q W 2 N 3 6 Q k t B w n t G Q a v L h E 1 D L r r E = " > A A A B 6 H i c b V B N S 8 N A E J 3 U r 1 q / q h 6 9 L B b B U 0 l E q M e i F 4 S q G 1 C N g k t s G W 4 E d h O F N A o E d o L J 3 d z v P K H S P J Y P Z p q g H 9 G R 5 C F n 1 F i p K Q f l i l t 1 F y D r x M t J B X I 0 B u W v / j B m a Y T S M E G 1 7 n l u Y v y M K s O Z w F m p n 2 p M K J v Q E f Y s l T R C 7 W e L Q 2 f k w i p D E s b K l j R k o f 6 e y G i k 9 T Q K b G d E z V i v e n P x P 6 + X m v D G z 7 h M U o O S L R e F q S A m J v O v y Z A r Z E Z M L a F M c X s r Y W O q K D M 2 m 5 I N w V t 9 e Z 2 0 r 6 q e W / W a 1 5 X 6 b R 5 H E c 7 g H C 7 B g x r U 4 R 4 a 0 A I G C M / w C m / O o / P i v D s f y 9 a C k 8 + c w h 8 4 n z / X E Y z y < / l a t e x i t > < l a t e x i t s h a 1 _ b a s e 6 4 = " I q W 2 N 3 6 Q k t B w n t G Q a v L h E 1 D L r r E = " > A A A B 6 H i c b V B N S 8 N A E J 3 U r 1 q / q h 6 9 L B b B U 0 l E q M e i F 4 8 t 2 A 9 o Q 9 l s J + 3 a z S b s b o Q S + g u 8 e F D E q z / J m / / G b Z u D t j 4 Y e L w 3 w 8 y 8 I B F c G 9 f 9 d g o b m 1 v b O 8 X d 0 t 7 + w e F R + f i k r e N U M W y x W M S q G 1 C N g k t s G W 4 E d h O F N A o E d o L J 3 d z v P K H S P J Y P Z p q g H 9 G R 5 C F n 1 F i p K Q f l i l t 1 F y D r x M t J B X I 0 B u W v / j B m a Y T S M E G 1 7 n l u Y v y M K s O Z w F m p n 2 p M K J v Q E f Y s l T R C 7 W e L Q 2 f k w i p D E s b K l j R k o f 6 e y G i k 9 T Q K b G d E z V i v e n P x P 6 + X m v D G z 7 h M U o O S L R e F q S A m J v O v y Z A r Z E Z M L a F M c X s r Y W O q K D M 2 m 5 I N w V t 9 e Z 2 0 r 6 q e W / W a 1 5 X 6 b R 5 H E c 7 g H C 7 B g x r U 4 R 4 a 0 A I G C M / w C m / O o / P i v D s f y 9 a C k 8 + c w h 8 4 n z / X E Y z y < / l a t e x i t > < l a t e x i t s h a 1 _ b a s e 6 4 = " h P + 6 L r U f 2 d 3 t Z a l d q a Q Q v E K M X y w = " > A A A B 2 X i c b Z D N S g M x F I X v 1 L 8 6 V q 1 r N 8 E i u C o z b n Q p u H F Z w b Z C O 5 R M 5 k 4 b m s k M y R 2 h D H 0 B F 2 5 E f C 9 3 v o 3 p z 0 J b D w Q + z k n I v S c u l L Q U B N 9 e b W d 3 b / + g f u g f N f z j k 9 N m o 2 f z 0 g j s i l z l 5 j n m F p X U 2 C V J C p 8 L g z y L F f b j 6 f 0 i 7 7 + g s T L X T z Q r M M r 4 W M t U C k 7 O 6 o y a r a A d L M W 2 I V x D C 9 Y a N b + G S S 7 K D D U J x a 0 d h E F B U c U N S a F w 7 g 9 L i w U X U z 7 G g U P N M 7 R R t R x z z i 6 d k 7 A 0 N + 5 o Y k v 3 9 4 u K Z 9 b O s t j d z D h N 7 G a 2 M P / L B i W l t 1 E l d V E S a r H 6 K C 0 V o 5 w t d m a J N C h I z R x w Y a S b l Y k J N 1 y Q a 8 Z 3 H Y S b G 2 9 D 7 7 o d B u 3 w M Y A 6 n M M F X E E I N 3 A H D 9 C B L g h I 4 B X e v Y n 3 5 n 2 s u q p 5 6 9 L O 4 I + 8 z x 8 4 x I o 4 < / l a t e x i t > < l a t e x i t s h a 1 _ b a s e 6 4 = "
N t n m D L J 1 N g R z 1 8 Q x o C q I Y j L d 6 r c = " > A A A B 3 X i c b Z B L S w M x F I X v + K y 1 a n X r J l g E V 2 X G j S 4 F N y 5 b s A 9 o h 5 J J 7 7 S x m c y Q 3 B H K 0 F / g x o U i / i 1 3 / h v T x 0 J b D w Q + z k n I v S f K l L T k + 9 / e 1 v b O 7 t 5 + 6 a B 8 W D k 6 P q m e V t o 2 z Y 3 A l k h V a r o R t 6 i k x h Z J U t j N D P I k U t i J J v f z v P O M x s p U P 9 I 0 w z D h I y 1 j K T g 5 q 6 k H 1 Z p f 9 x d i m x C s o A Y r N Q b V r / 4 w F X m C m o T i 1 v Y C P 6 O w 4 I a k U D g r 9 3 O L G R c T P s K e Q 8 0 T t G G x G H T G L p 0 z Z H F q 3 N H E F u 7 v F w V P r J 0 m k b u Z c B r b 9 W x u / p f 1 c o p v w 0 L q L C f U Y v l R n C t G K Z t v z Y b S o C A 1 d c C F k W 5 W J s b c c E G u m 7 I r I V h f e R P a 1 / X A r w d N H 0 p w D h d w B Q H c w B 0 8 Q A N a I A D h B d 7 g 3 X v y X r 2 P Z V 1 b 3 q q 3 M / g j 7 / M H w t m L n w = = < / l a t e x i t > < l a t e x i t s h a 1 _ b a s e 6 4 = "
N t n m D L J 1 N g R z 1 8 Q x o C q I Y j L d 6 r c = " > A A A B 3 X i c b Z B L S w M x F I X v + K y 1 a n X r J l g E V 2 X G j S 4 F N y 5 b s A 9 o h 5 J J 7 7 S x m c y Q 3 B H K 0 F / g x o U i / i 1 3 / h v T x 0 J b D w Q + z k n I v S f K l L T k + 9 / e 1 v b O 7 t 5 + 6 a B 8 W D k 6 P q m e V t o 2 z Y 3 A l k h V a r o R t 6 i k x h Z J U t j N D P I k U t i J J v f z v P O M x s p U P 9 I 0 w z D h I y 1 j K T g 5 q 6 k H 1 Z p f 9 x d i m x C s o A Y r N Q b V r / 4 w F X m C m o T i 1 v Y C P 6 O w 4 I a k U D g r 9 3 O L G R c T P s K e Q 8 0 T t G G x G H T G L p 0 z Z H F q 3 N H E F u 7 v F w V P r J 0 m k b u Z c B r b 9 W x u / p f 1 c o p v w 0 L q L C f U Y v l R n C t G K Z t v z Y b S o C A 1 d c C F k W 5 W J s b c c E G u m 7 I r I V h f e R P a 1 / X A r w d N H 0 p w D h d w B Q H c w B 0 8 Q A N a I A D h B d 7 g 3 X v y X r 2 P Z V 1 b 3 q q 3 M / g j 7 / M H w t m L n w = = < / l a t e x i t > < l a t e x i t s h a 1 _ b a s e 6 4 = " c k 1 / v / J p O J E L H 0 i I d g P b h a W E r X Y = " > A A A B 6 H i c b V B N T 8 J A E J 3 i F + I X 6 t H L R m L i i b R e 9 E j 0 4 h E S C y T Q k O 0 y h Z X t t t n d m p C G X + D F g 8 Z 4 9 S d 5 8 9 + 4 Q A 8 K v m S S l / d m M j M v T A X X x n W / n d L G 5 t b 2 T n m 3 s r d / c H h U P T 5 p 6 y R T D H 2 W i E R 1 Q 6 p R c I m + 4 U Z g N 1 V I 4 1 B g J 5 z c z f 3 O E y r N E / l g p i k G M R 1 J H n F G j Z V a c l C t u X V 3 A b J O v I L U o E B z U P 3 q D x O W x S g N E 1 T r n u e m J s i p M p w J n F X 6 m c a U s g k d Y c 9 S S W P U Q b 4 4 d E Y u r D I k U a J s S U M W 6 u + J n M Z a T + P Q d s b U j P W q N x f / 8 3 q Z i W 6 C n M s 0 M y j Z c l G U C W I S M v + a D L l C Z s T U E s o U t 7 c S N q a K M m O z q d g Q v N W X 1 0 n 7 q u 6 5 d a / l 1 h q 3 R R x l O I N z u A Q P r q E B 9 9 A E H x g g P M M r v D m P z o v z 7 n w s W 0 t O M X M K f + B 8 / g D V 0 Y z u < / l a t e x i t > < l a t e x i t s h a 1 _ b a s e 6 4 = " I q W 2 N 3 6 Q k t B w n t G Q a v L h E 1 D L r r E = " > A A A B 6 H i c b V B N S 8 N A E J 3 U r 1 q / q h 6 9 L B b B U 0 l E q M e i F 4 8 t 2 A 9 o Q 9 l s J + 3 a z S b s b o Q S + g u 8 e F D E q z / J m / / G b Z u D t j 4 Y e L w 3 w 8 y 8 I B F c G 9 f 9 d g o b m 1 v b O 8 X d 0 t 7 + w e F R + f i k r e N U M W y x W M S q G 1 C N g k t s G W 4 E d h O F N A o E d o L J 3 d z v P K H S P J Y P Z p q g H 9 G R 5 C F n 1 F i p K Q f l i l t 1 F y D r x M t J B X I 0 B u W v / j B m a Y T S M E G 1 7 n l u Y v y M K s O Z w F m p n 2 p M K J v Q E f Y s l T R C 7 W e L Q 2 f k w i p D E s b K l j R k o f 6 e y G i k 9 T Q K b G d E z V i v e n P x P 6 + X m v D G z 7 h M U o O S L R e F q S A m J v O v y Z A r Z E Z M L a F M c X s r Y W O q K D M 2 m 5 I N w V t 9 e Z 2 0 r 6 q e W / W a 1 5 X 6 b R 5 H E c 7 g H C 7 B g x r U 4 R 4 a 0 A I G C M / w C m / O o / P i v D s f y 9 a C k 8 + c w h 8 4 n z / X E Y z y < / l a t e x i t > < l a t e x i t s h a 1 _ b a s e 6 4 = " I q W 2 N 3 6 Q k t B w n t G Q a v L h E 1 D L r r E = " > A A A B 6 H i c b V B N S 8 N A E J 3 U r 1 q / q h 6 9 L B b B U 0 l E q M e i F 4 8 t 2 A 9 o Q 9 l s J + 3 a z S b s b o Q S + g u 8 e F D E q z / J m / / G b Z u D t j 4 Y e L w 3 w 8 y 8 I B F c G 9 f 9 d g o b m 1 v b O 8 X d 0 t 7 + w e F R + f i k r e N U M W y x W M S q G 1 C N g k t s G W 4 E d h O F N A o E d o L J 3 d z v P K H S P J Y P Z p q g H 9 G R 5 C F n 1 F i p K Q f l i l t 1 F y D r x M t J B X I 0 B u W v / j B m a Y T S M E G 1 7 n l u Y v y M K s O Z w F m p n 2 p M K J v Q E f Y s l T R C 7 W e L Q 2 f k w i p D E s b K l j R k o f 6 e y G i k 9 T Q K b G d E z V i v e n P x P 6 + X m v D G z 7 h M U o O S L R e F q S A m J v O v y Z A r Z E Z M L a F M c X s r Y W O q K D M 2 m 5 I N w V t 9 e Z 2 0 r 6 q e W / W a 1 5 X 6 b R 5 H E c 7 g H C 7 B g x r U 4 R 4 a 0 A I G C M / w C m / O o / P i v D s f y 9 a C k 8 + c w h 8 4 n z / X E Y z y < / l a t e x i t > < l a t e x i t s h a 1 _ b a s e 6 4 = " I q W 2 N 3 6 Q k t B w n t G Q a v L h E 1 D L r r E = " > A A A B 6 H i c b V B N S 8 N A E J 3 U r 1 q / q h 6 9 L B b B U 0 l E q M e i F 4 8 t 2 A 9 o Q 9 l s J + 3 a z S b s b o Q S + g u 8 e F D E q z / J m / / G b Z u D t j 4 Y e L w 3 w 8 y 8 I B F c G 9 f 9 d g o b m 1 v b O 8 X d 0 t 7 + w e F R + f i k r e N U M W y x W M S q G 1 C N g k t s G W 4 E d h O F N A o E d o L J 3 d z v P K H S P J Y P Z p q g H 9 G R 5 C F n 1 F i p K Q f l i l t 1 F y D r x M t J B X I 0 B u W v / j B m a Y T S M E G 1 7 n l u Y v y M K s O Z w F m p n 2 p M K J v Q E f Y s l T R C 7 W e L Q 2 f k w i p D E s b K l j R k o f 6 e y G i k 9 T Q K b G d E z V i v e n P x P 6 + X m v D G z 7 h M U o O S L R e F q S A m J v O v y Z A r Z E Z M L a F M c X s r Y W O q K D M 2 m 5 I N w V t 9 e Z 2 0 r 6 q e W / W a 1 5 X 6 b R 5 H E c 7 g H C 7 B g x r U 4 R 4 a 0 A I G C M / w C m / O o / P i v D s f y 9 a C k 8 + c w h 8 4 n z / X E Y z y < / l a t e x i t > < l a t e x i t s h a 1 _ b a s e 6 4 = " I q W 2 N 3 6 Q k t B w n t G Q a v L h E 1 D L r r E = " > A A A B 6 H i c b V B N S 8 N A E J 3 U r 1 q / q h 6 9 L B b B U 0 l E q M e i F 4 8 t 2 A 9 o Q 9 l s J + 3 a z S b s b o Q S + g u 8 e F D E q z / J m / / G b Z u D t j 4 Y e L w 3 w 8 y 8 I B F c G 9 f 9 d g o b m 1 v b O 8 X d 0 t 7 + w e F R + f i k r e N U M W y x W M S q G 1 C N g k t s G W 4 E d h O F N A o E d o L J 3 d z v P K H S P J Y P Z p q g H 9 G R 5 C F n 1 F i p K Q f l i l t 1 F y D r x M t J B X I 0 B u W v / j B m a Y T S M E G 1 7 n l u Y v y M K s O Z w F m p n 2 p M K J v Q E f Y s l T R C 7 W e L Q 2 f k w i p D E s b K l j R k o f 6 e y G i k 9 T Q K b G d E z V i v e n P x P 6 + X m v D G z 7 h M U o O S L R e F q S A m J v O v y Z A r Z E Z M L a F M c X s r Y W O q K D M 2 m 5 I N w V t 9 e Z 2 0 r 6 q e W / W a 1 5 X 6 b R 5 H E c 7 g H C 7 B g x r U 4 R 4 a 0 A I G C M / w C m / O o / P i v D s f y 9 a C k 8 + c w h 8 4 n z / X E Y z y < / l a t e x i t > < l a t e x i t s h a 1 _ b a s e 6 4 = "
I q W 2 N 3 6 Q k t B w n t G Q a v L h E 1 D L r r E = " > A A A B 6 H i c b V B N S 8 N A E J 3 U r 1 q / q h 6 9 L B b B U 0 l E q M e i F 4 8 t 2 A 9 o Q 9 l s J + 3 a z S b s b o Q S + g u 8 e F D E q z / J m / / G b Z u D t j 4 Y e L w 3 w 8 y 8 I B F c G 9 f 9 d g o b m 1 v b O 8 X d 0 t 7 + w e F R + f i k r e N U M W y x W M S q G 1 C N g k t s G W 4 E d h O F N A o E d o L J 3 d z v P K H S P J Y P Z p q g H 9 G R 5 C F n 1 F i p K Q f l i l t 1 F y D r x M t J B X I 0 B u W v / j B m a Y T S M E G 1 7 n l u Y v y M K s O Z w F m p n 2 p M K J v Q E f Y s l T R C 7 W e L Q 2 f k w i p D E s b K l j R k o f 6 e y G i k 9 T Q K b G d E z V i v e n P x P 6 + X m v D G z 7 h M U o O S L R e F q S A m J v O v y Z A r Z E Z M L a F M c X s r Y W O q K D M 2 m 5 I N w V t 9 e Z 2 0 r 6 q e W / W a 1 5 X 6 b R 5 H E c 7 g H C 7 B g x r U 4 R 4 a 0 A I G C M / w C m / O o / P i v D s f y 9 a C k 8 + c w h 8 4 n z / X E Y z y < / l a t e x i t > < l a t e x i t s h a 1 _ b a s e 6 4 = " I q W 2 N 3 6 Q k t B w n t G Q a v L h E 1 D L r r E = " > A A A B 6 H i c b V B N S 8 N A E J 3 U r 1 q / q h 6 9 L B b B U 0 l E q M e i F 4 8 t 2 A 9 o Q 9 l s J + 3 a z S b s b o Q S + g u 8 e F D E q z / J m / / G b Z u D t j 4 Y e L w 3 w 8 y 8 I B F c G 9 f 9 d g o b m 1 v b O 8 X d 0 t 7 + w e F R + f i k r e N U M W y x W M S q G 1 C N g k t s G W 4 E d h O F N A o E d o L J 3 d z v P K H S P J Y P Z p q g H 9 G R 5 C F n 1 F i p K Q f l i l t 1 F y D r x M t J B X I 0 B u W v / j B m a Y T S M E G 1 7 n l u Y v y M K s O Z w F m p n 2 p M K J v Q E f Y s l T R C 7 W e L Q 2 f k w i p D E s b K l j R k o f 6 e y G i k 9 T Q K b G d E z V i v e n P x P 6 + X m v D G z 7 h M U o O S L R e F q S A m J v O v y Z A r Z E Z M L a F M c X s r Y W O q K D M 2 m 5 I N w V t 9 e Z 2 0 r 6 q e W / W a 1 5 X 6 b R 5 H E c 7 g H C 7 B g x r U 4 R 4 a 0 A I G C M / w C m / O o / P i v D s f y 9 a C k 8 + c w h 8 4 n z / X E Y z y < / l a t e x i t > x W M S q G 1 C N g k t s G W 4 E d h O F N A o E d o L J 3 d z v P K H S P J Y P Z p q g H 9 G R 5 C F n 1 F i p 6 Q 3 K F b f q L k D W i Z e T C u R o D M p f / W H M 0 g i l Y Y J q 3 f P c x P g Z V Y Y z g b N S P 9 W Y U D a h I + x Z K m m E 2 s 8 W h 8 7 I h V W G J I y V L W n I Q v 0 9 k d F I 6 2 k U 2 M 6 I m r F e 9 e b i f 1 4 v N e G N n 3 G Z p A Y l W y 4 K U 0 F M T O Z f k y F X y I y Y W k K Z 4 v Z W w s Z U U W Z s N i U b g r f 6 8 j p p X 1 U 9 t + o 1 r y v 1 2 z y O I p z B O V y C B z W o w z 0 0 o A U M E J 7 h F d 6 c R + f F e X c x W M S q G 1 C N g k t s G W 4 E d h O F N A o E d o L J 3 d z v P K H S P J Y P Z p q g H 9 G R 5 C F n 1 F i p 6 Q 3 K F b f q L k D W i Z e T C u R o D M p f / W H M 0 g i l Y Y J q 3 f P c x P g Z V Y Y z g b N S P 9 W Y U D a h I + x Z K m m E 2 s 8 W h 8 7 I h V W G J I y V L W n I Q v 0 9 k d F I 6 2 k U 2 M 6 I m r F e 9 e b i f 1 4 v N e G N n 3 G Z p A Y l W y 4 K U 0 F M T O Z f k y F X y I y Y W k K Z 4 v Z W w s Z U U W Z s N i U b g r f 6 8 j p p X 1 U 9 t + o 1 r y v 1 2 z y O I p z B O V y C B z W o w z 0 0 o A U M E J 7 h F d 6 c R + f F e X c x W M S q G 1 C N g k t s G W 4 E d h O F N A o E d o L J 3 d z v P K H S P J Y P Z p q g H 9 G R 5 C F n 1 F i p 6 Q 3 K F b f q L k D W i Z e T C u R o D M p f / W H M 0 g i l Y Y J q 3 f P c x P g Z V Y Y z g b N S P 9 W Y U D a h I + x Z K m m E 2 s 8 W h 8 7 I h V W G J I y V L W n I Q v 0 9 k d F I 6 2 k U 2 M 6 I m r F e 9 e b i f 1 4 v N e G N n 3 G Z p A Y l W y 4 K U 0 F M T O Z f k y F X y I y Y W k K Z 4 v Z W w s Z U U W Z s N i U b g r f 6 8 j p p X 1 U 9 t + o 1 r y v 1 2 z y O I p z B O V y C B z W o w z 0 0 o A U M E J 7 h F d 6 c R + f F e X c + l q 0 F J 5 8 5 h T 9 w P n 8 A e p 2 M t Q = = < / l a t e x i t > < l a t e x i t s h a 1 _ b a s e 6 4 = " h P + 6 L r U f 2 d 3 t Z a l d q a Q Q v E K M X y w = " > A A A B 2 X i c b Z D N S g M x F I X v 1 L 8 6 V q 1 r N 8 E i u C o z b n Q p u H F Z w b Z C O 5 R M 5 k 4 b m s k M y R 2 h D H 0 B F 2 5 E f C 9 3 v o 3 p z 0 J b D w Q + z k n I v S c u l L Q U B N 9 e b W d 3 b / + g f u g f N f z j k 9 N m o 2 f z 0 g j s i l z l 5 j n m F p X U 2 C V J C p 8 L g z y L F f b j 6 f 0 i 7 7 + g s T L X T z Q r M M r 4 W M t U C k 7 O 6 o y a r a A d L M W 2 I V x D C 9 Y a N b + G S S 7 K D D U J x a 0 d h E F B U c U N S a F w 7 g 9 L i w U X U z 7 G g U P N M 7 R R t R x z z i 6 d k 7 A 0 N + 5 o Y k v 3 9 4 u K Z 9 b O s t j d z D h N 7 G a 2 M P / L B i W l t 1 E l d V E S a r H 6 K C 0 V o 5 w t d m a J N C h I z R x w Y a S b l Y k J N 1 y Q a 8 Z 3 H Y S b G 2 9 D 7 7 o d B u 3 w M Y A 6 n M M F X E E I N 3 A H D 9 C B L g h I 4 B X e v Y n 3 5 n 2 s u q p 5 6 9 L O 4 I + 8 z x 8 4 x I o 4 < / l a t e x i t > < l a t e x i t s h a 1 _ b a s e 6 4 = " 2 y like BPE , the unigram language model is capable of providing multiple subwords with probabilities , thereby making the segmentation more flexible .
However , unigrams did not exhibit significant improvement over BPE .
I K f h y k A K v 0 M h U q D i S 4 S y w k L 1 Y = " > A A A B 3 X i c b Z B L S w M x F I X v + K y 1 a n X r J l g E V 2 X G j S 4 F N y 5 b s A 9 o h 5 J J 7 7 S x m c y Q 3 B H K 0 F / g x o U i / i 1 3 / h v T x 0 J b D w Q + z k n I v S f K l L T k + 9 / e 1 v b O 7 t 5 + 6 a B 8 W D k 6 P q m e V t o 2 z Y 3 A l k h V a r o R t 6 i k x h Z J U t j N D P I k U t i J J v f z v P O M x s p U P 9 I 0 w z D h I y 1 j K T g 5 q x k M q j W / 7 i / E N i F Y Q Q 1 W a g y q X / 1 h K v I E N Q n F r e 0 F f k Z h w Q 1 J o X B W 7 u c W M y 4 m f I Q 9 h 5 o n a M N i M e i M X T p n y O L U u K O J L d z f L w q e W D t N I n c z 4 T S 2 6 9 n c / C / r 5 R T f h o X U W U 6 o x f K j O F e M U j b f m g 2 l Q U F q 6 o A L I 9 2 s T I y 5 4 Y J c N 2 V X Q r C + 8 i a 0 r + u B X w + a P p T g H C 7 g C g K 4 g T t 4 g A a 0 Q A D C C 7 z B u / f k v X o f y 7 q 2 v F V v Z / B H 3 u c P a Q S L Y g = = < / l a t e x i t > < l a t e x i t s h a 1 _ b a s e 6 4 = " 2 y I K f h y k A K v 0 M h U q D i S 4 S y w k L 1 Y = " > A A A B 3 X i c b Z B L S w M x F I X v + K y 1 a n X r J l g E V 2 X G j S 4 F N y 5 b s A 9 o h 5 J J 7 7 S x m c y Q 3 B H K 0 F / g x o U i / i 1 3 / h v T x 0 J b D w Q + z k n I v S f K l L T k + 9 / e 1 v b O 7 t 5 + 6 a B 8 W D k 6 P q m e V t o 2 z Y 3 A l k h V a r o R t 6 i k x h Z J U t j N D P I k U t i J J v f z v P O M x s p U P 9 I 0 w z D h I y 1 j K T g 5 q x k M q j W / 7 i / E N i F Y Q Q 1 W a g y q X / 1 h K v I E N Q n F r e 0 F f k Z h w Q 1 J o X B W Subword - level NMT systems resolve the drawbacks of word- level models by providing open-vocabulary capabilities to the model and reducing the vocabulary size considerably .
However , subword - level systems also have some drawbacks .
Most importantly , input and target sequences are longer , which makes them slower to train and decode , and implies long- range dependencies which are difficult to model [ 6 ] .
Also , the open-vocabulary capabilities of the model might generate undesired variants of correct transla-tions .
Finally , subword embeddings do not carry as much semantic information as words and therefore modeling this information becomes much more difficult .
All units discussed above present a trade- off between flexibility and semantic information ( i.e. , characters are more flexible with less semantic information , whereas words can not translate OOV words but contain more semantic information ) .
This trade- off makes the selection of optimal segmentation a non-trivial problem , for a given dataset and language pair .
Generally , the optimal segmentation is treated as a hyper-parameter that needs to be found by brute- force search , and this search is time - consuming and error-prone .
This problem is even more emphasized in multilingual settings where the optimal segmentation needs to be found for each language [ 7 ] .
In this paper , we propose a block multitask learning ( BMTL ) model that , by using multiple subword segementations in the target domain , translates the same input with different granularities ( see Fig. 1 ) .
All hypotheses are combined posteriorly with Multi-Engine Machine Translation ( MEMT ) system [ 8 ] , which generates the final hypothesis of the system .
Our experiments show that , in general , each output segmentation of our BMTL outperforms all single task approaches that use the same number of parameters .
By combining the outputs of BMTL with MEMT , our system still outperforms the combination of single - task models , in spite of using lesser parameters in total .
We hypothesize that sharing an encoder among different decoder-specific granularities , makes the encoded representation more general and robust , which yields a better translation and therefore an improvement in BLEU score .
The main contributions of this paper are as follows : ?
We introduce Block Multitask Learning ( BMTL ) , an NMT framework that , by using multiple subword segmentations in the target domain , translates the same input with different granularities ( see Fig. 1 ) ( Section 2.2 ) . ?
We present a set of experiments in three different IWSLT language pairs ( En - { Fr , Vi , Cs} ) that show improvements on each output segmentation of BMTL , outperforming all single task approaches that use the same number of parameters .
( Section 3.3 ) ?
We show that by combining the outputs of BMTL with Multi-Engine Machine Translation ( MEMT ) [ 8 ] , our system still outperforms the combination of singletask models , in spite of using fewer parameters in total ( Section 3.4 ) .
Architecture
In this section , we will first introduce our baseline model that consists of a standard attention - based encoder-decoder model [ 9 ] ( Section 2.1 ) .
After that , we present our new BMTL architecture that uses the encoder-decoder model as the main building block ( Section 2.2 ) .
Finally , we describe MEMT , the mechanism that we use for combining multiple hypotheses .
Baseline Model
Our baseline model is a standard encoder-decoder model with a multilayer perceptron attention and tanh activation [ 9 ] .
The encoder is a bidirectional recurrent neural network with Gated Recurrent Units ( BiGRU ) .
This block of the system encodes the input subword embeddings .
The decoder is also a recurrent neural network , but it uses Conditional GRU decoder [ 10 ] .
The decoder , conditioned on the previously generated state and each encoded vector , generates an attention matrix that weighs all the hidden states generated by the encoder .
The decoder continuously generates symbols until the end-of-sentence symbol is produced .
This model can use different subword segmentations in the source and target space .
We will refer to this henceforth as the baseline model .
Block Multitask Learning In BMTL ( see Fig. 1 ) , we extend the baseline model with a multitask learning approach .
More specifically , in this case , each task is the generation of the translation in the target language , in different granularities .
All tasks share the same encoder as in the baseline model .
The encoded matrix is processed by multiple decoders , all of which have the same architecture as the baseline decoder .
Each of the decoders has its own attention and set of parameters .
More formally , a BMTL model with decoders outputting units of BPE300 , BPE1000 and BPE10000 , can be written as e 0 = Shared Encoder ( X ) S bpe300 = CGRU bpe300 ( e 0 ) S bpe1 k = CGRU bpe1k ( e 0 ) S bpe10 k = CGRU bpe10k ( e 0 ) ( 1 ) where S n is the generated hypothesis and CGRU n is a decoder for the subword segmentation n.
During training , the losses obtained by all the decoders are normalized according to length , summed and averaged .
We found that this approach works better than backpropagating each loss independently through its own decoder as well as the shared encoder .
This allows the encoder to learn more generalized representations which are independent of the output subword granularity .
It is important to note that BMTL is a model agnostic technique and it can be easily ported to other architectures such as Transformer [ 11 ] .
Multi-Engine Machine Translation
As a post-processing step , our system uses MEMT to combine all generated hypotheses [ 8 ] .
MEMT uses a variant of the METEOR aligner to align all the results of each decoder .
1 : BLEU scores of our BMTL1 ( i.e. , BMTL combining BPE 300 , BPE1 K and BPE10K ) and BMTL2 ( i.e. , BMTL combining BPE 10K , BPE16 K and BPE32K ) models , as well as the baseline models , on our two IWSLT15 language pairs ( i.e. , English to { French , Vietnamese} ) .
It applies four constraints to generate the combined hypothesis .
First , the sentences must start with start- of-sentence symbol and end-of-sentence symbol .
Second , a token is used only once .
Third , it forces weak monotonicity between the alignments , preventing too many jumps from the search algorithm .
Fourth , it forces the completeness of the combined hypothesis by not skipping tokens unless the sentence ends .
It is important to note that MEMT uses tokenized - word hypotheses as input .
Experiments
Datasets and Preprocessing
We report results on two language pairs from the IWSLT 2015 TED Talks corpus - English to { French , Vietnamese} .
We use the tst2012 and tst2013 sets as our development and testing sets .
Furthermore , we also report results on the IWSLT 2019 text translation task from English to Czech .
We use the provided training and development sets , and the tst2019 set for testing .
For the IWSLT 2019 dataset , we only report results of our System Combination translations ( Table 2 ) .
For preprocessing , each corpus is normalized , tokenized and truecased using Moses [ 12 ] .
Each corpus is then segmented to different BPE vocabulary sizes using the sentencepiece implementation 1 .
Implementation Details
All models are trained using Adam optimizer [ 13 ] , with a learning rate of 0.0001 , decay of 0.9 and batch size of 32 .
All models have 2 layers of bidirectional encoders of size 512 in each direction , decoder of size 1024 , and input and output embeddings of size 512 .
We also apply dropout with probability 0.1 in the encoder and decoder .
The norm of the gradient is clipped with a threshold of 1 [ 14 ] .
All models are implemented using the nmtpytorch framework [ 15 ] .
The output hypotheses are detokenized and detruecased using Moses , before using sacreBLEU [ 16 ] for scoring the translations .
Finally , all hypothesis are combined with the MEMT implementation 2 with the default configuration provided .
1 https://github.com/google/sentencepiece 2 https://github.com/kpu/MEMT
Results
We experiment with two variants of the BMTL model .
BMTL1 has inputs of BPE10 K and decoders of BPE300 , BPE1 K and BPE10K ( as seen in Figure 1 ) .
BMTL2 has inputs of BPE32 K and decoders of BPE10K , BPE16 K and BPE32K .
We experiment with different input segmentations to show that our architecture shows improvements irrespective of the input unit .
For each BMTL model , we also train three baseline encoder-decoder models - each with the same input units as BMTL and an output corresponding to one of the BMTL decoders .
For instance , we compare the output of BMTL1 's BPE300 decoder with an encoder-decoder model that has input units of BPE10 K and output units of BPE300 .
Table 1 shows the results of our experiments on the BMTL1 and BMTL2 models , as well as the baseline models .
We observe that almost all of our BMTL decoders ( in both BMTL1 and BMTL2 ) outperform the corresponding baseline models across all three languages , with an improvement of upto 2 BLEU points .
This exhibits our architecture 's ability to learn more robust encoded representations , irrespective of language , input units , and combination of output segmentations .
3
These improvements are on models that have the same size as the baselines .
Although at training time , the model includes multiple decoders and a shared encoder , while testing , we need to utilize only a single decoder and encoder , thus making it comparable to the baseline models .
Each of our BMTL decoders also converges faster than the corresponding individual baseline models ( Figure 2 ) .
Hypothesis Combination
We explore the possibility of combining hypotheses from each of the decoders in BMTL ( see Fig. 1 ) .
We use Multi-Engine Machine Translation ( MEMT ) [ 8 ] , to get a single hypothesis by combining the hypotheses of each BMTL decoder , the results of which can be seen in Table 2 .
We see that the MEMT combination from the BMTL models almost always outperforms the baselines .
Although these gains are slightly lower than the ones achieved by the individual BMTL decoders , they are achieved using models
Related Work Multiple previous works have analyzed the differences between target units of different subword resolution in NMT systems .
These works make the observation that the optimal segmentation depends on three elements : number of OOV words [ 4 ] , language [ 5 ] , and size of the model [ 18 ] .
Each of these dependencies makes the task of finding the optimal subword segmentation computationally infeasible and prone to error .
In an attempt to solve this problem , [ 19 ] propose a dy-namic end-to-end , data-driven segmentation . [ 19 ] uses the Adaptive Computation Time paradigm [ 20 ] to let the network learn an optimal segmentation .
This approach , however , does not match nor overcome the BLEU score of any of the manual segmentations proposed .
Our work , instead , benefits from having mutliple representations for the same input outperforming almost all single-segmentation baselines proposed .
To take advantage of the different available segmentations and solve the problem of OOV words , [ 21 ] proposes a hybrid system that combines words and character - based models .
Translation occurs primarily at the word level , and the system uses the character - level model when an unknown symbol is predicted . [ 21 ] is similar to our approach in its usage of multiple target unit segmentations .
Even though [ 21 ] achieves similar improvements to ours , the incorporation of a second character - based architecture makes their approach Perhaps more related to our work , there are two recent NMT approaches that combine multiple BPE segmentations .
First , [ 22 ] sequentially increase the number of units during training each time the architecture converges .
This method achieves comparable results to grid search , without the need of training the model a number of times .
Second , [ 23 ] proposes summing the multiple subword embeddings from different segmentations to the same embedding layer .
Although [ 22 , 23 ] propose to use multiple target segmentations in the same system , there are multiple differences from our work .
Even though [ 22 ] finds the optimal segmentation , they do not use concurrently different target units . [ 23 ] uses multiple representations in parallel in the input while we use ours in the output .
Related to the architecture of our model , [ 24 ] proposed the first work on multitask learning .
Similarly , many approaches integrated other tasks in NMT models such as the translation of more languages [ 25 ] , Part - Of - Speech tagging [ 26 ] or general syntax [ 27 ] .
However , none of them combined different granularities of the same sentence .
More recently , in Automatic Speech Recognition , [ 28 ] proposed also the use of multiple levels of segmentation in a hierarchical multitask learning structure .
The improvements showed in [ 28 ] inspired this paper .
Conclusions And Future Work
We propose Block Multitask Learning ( BMTL ) model that translates the same input to multiple subword granularities in the target language and is trained in a multi-task learning fashion .
Our BMTL decoders outperform the singletask baseline models across all languages , for different input units , and different combinations of output segmentations , while having comparable model size .
We also use Multi-Engine Machine Translation to combine multiple decoders ' hypotheses as a post-processing step ; this also achieves improvements over combining single - task hypotheses , despite having significant fewer parameters .
With regards to how we can expand this work in the future , we are investigating three potential future directions for BMTL .
First , we are investigating how we can effectively encode source sentences using different input segmentations .
Second , we are exploring if weighing each loss function provided by each decoder can help the model to learn a better representation .
Third , we are exploring an online beamsearch strategy that uses the hypothesis of all decoders .
This technique will constitute a more elegant solution for joint decoding than MEMT .
8 t 2 A 9 o Q 9 l s J + 3 a z S b s b o Q S + g u 8 e F D E q z / J m / / G b Z u D t j 4 Y e L w 3 w 8 y 8 I B F c G 9 f 9 d g o b m 1 v b O 8 X d 0 t 7 + w e F R + f i k r e N U M W y x W M
8 t 2 A 9 o Q 9 l s J + 3 a z S b s b o Q S + g u 8 e F D E q z / J m / / G b Z u D t j 4 Y e L w 3 w 8 y 8 I B F c G 9 f 9 d g o b m 1 v b O 8 X d 0 t 7 + w e F R + f i k r e N U M W y x W M
1 < 1 l a t e x i t s h a 1 _ b a s e 6 4 = " l 9 e I m v Y c F O K p z E D j i / n 9 j P D e W b 8 = " > A A A B 6 H i c b V B N S 8 N A E J 3 U r 1 q / q h 6 9 L B b B U 0 l E q M e i F 4 8 t 2 A 9 o Q 9 l s J + 3 a z S b s b o Q S + g u 8 e F D E q z / J m / / G b Z u D t j 4 Y e L w 3 w 8 y 8 I B F c G 9 f 9 d g o b m 1 v b O 8 X d 0 t 7 + w e F R + f i k r e N U M W y
+ l q 0 F J 5 8 5 h T 9 w P n 8 A e p 2 M t Q = = < / l a t e x i t > < l a t e x i t s h a 1 _ b a s e 6 4 = " l 9 e I m v Y c F O K p z E D j i / n 9 j P D e W b 8 = " > A A A B 6 H i c b V B N S 8 N A E J 3 U r 1 q / q h 6 9 L B b B U 0 l E q M e i F 4 8 t 2 A 9 o Q 9 l s J + 3 a z S b s b o Q S + g u 8 e F D E q z / J m / / G b Z u D t j 4 Y e L w 3 w 8 y 8 I B F c G 9 f 9 d g o b m 1 v b O 8 X d 0 t 7 + w e F R + f i k r e N U M W y
+ l q 0 F J 5 8 5 h T 9 w P n 8 A e p 2 M t Q = = < / l a t e x i t > < l a t e x i t s h a 1 _ b a s e 6 4 = " l 9 e I m v Y c F O K p z E D j i / n 9 j P D e W b 8 = " > A A A B 6 H i c b V B N S 8 N A E J 3 U r 1 q / q h 6 9 L B b B U 0 l E q M e i F 4 8 t 2 A 9 o Q 9 l s J + 3 a z S b s b o Q S + g u 8 e F D E q z / J m / / G b Z u D t j 4 Y e L w 3 w 8 y 8 I B F c G 9 f 9 d g o b m 1 v b O 8 X d 0 t 7 + w e F R + f i k r e N U M W y
7 u c W M y 4 m f I Q 9 h 5 o n a M N i M e i M X T p n y O L U u K O J L d z f L w q e W D t N I n c z 4 T S 2 6 9 n c / C / r 5 R T f h o X U W U 6 o x f K j O F e M U j b f m g 2 l Q U F q 6 o A L I 9 2 s T I y 5 4 Y J c N 2 V X Q r C + 8 i a 0 r + u B X w + a P p T g H C 7 g C g K 4 g T t 4 g A a 0 Q A D C C 7 z B u / f k v X o f y 7 q 2 v F V v Z / B H 3 u c P a Q S L Y g = = < / l a t e x i t > < l a t e x i t s h a 1 _ b a s e 6 4 = "
1 e n T r 8 x + d P Z Y K e A 2 s u 7 I q v n U d L k = " > A A A B 6 H i c b V B N T 8 J A E J 3 i F + I X 6 t H L R m L i i b R e 9 E j 0 4 h E S C y T Q k O 0 y h Z X t t t n d m p C G X + D F g 8 Z 4 9 S d 5 8 9 + 4 Q A 8 K v m S S l / d m M j M v T A X X x n W / n d L G 5 t b 2 T n m 3 s r d / c H h U P T 5 p 6 y R T D H 2 W i E R 1 Q 6 p R c I m + 4 U Z g N 1 V I 4 1 B g J 5 z c z f 3 O E y r N E / l g p i k G M R 1 J H n F G j Z V a 3 q B a c + v u A m S d e A W p Q Y H m o P r V H y Y s i 1 E a J q j W P c 9 N T Z B T Z T g T O K v 0 M 4 0 p Z R M 6 w p 6 l k s a o g 3 x x 6 I x c W G V I o k T Z k o Y s 1 N 8 T O Y 2 1 n s a h 7 Y y p G e t V b y 7 + 5 / U y E 9 0 E O Z d p Z l C y 5 a I o E 8 Q k Z P 4 1 G X K F z I i p J Z Q p b m 8 l b E w V Z c Z m U 7 E h e K s vr 5 P 2 V d 1 z 6 1 7 L r T V u i z j K c A b n c A k e X E M D 7 q E J P j B A e I Z X e H M e n R f n 3 f l Y t p a c Y u Y U / s D 5 / A F 5 X Y y x < / l a t e x i t > < l a t e x i t s h a 1 _ b a s e 6 4 = " l 9 e I m v Y c F O K p z E D j i / n 9 j P D e W b 8 = " > A A A B 6 H i c b V B N S 8 N A E J 3 U r 1 q / q h 6 9 L B b B U 0 l E q M e i F 4 8 t 2 A 9 o Q 9 l s J + 3 a z S b s b o Q S + g u 8 e F D E q z / J m / / G b Z u D t j 4 Y e L w 3 w 8 y 8 I B F c G 9 f 9 d g o b m 1 v b O 8 X d 0 t 7 + w e F R + f i k r e N U M W yx W M S q G 1 C N g k t s G W 4 E d h O F N A o E d o L J 3 d z v P K H S P J Y P Z p q g H 9 G R 5 C F n 1 F i p 6 Q 3 K F b f q L k D W i Z e T C u R o D M p f / W H M 0 g i l Y Y J q 3 f P c x P g Z V Y Y z g b N S P 9 W Y U D a h I + x Z K m m E 2 s 8 W h 8 7 I h V W G J I y V L W n I Q v 0 9 k d F I 6 2 k U 2 M 6 I m r F e 9 e b i f 1 4 v N e G N n 3 G Z p A Y l W y 4 K U 0 F M T O Z f k y F X y I y Y W k K Z 4 v Z W w s Z U U W Z s N i U b g r f 6 8 j p p X 1 U 9 t + o 1 r y v 1 2 z y O I p z B O V y C B z W o w z 0 0 o A U M E J 7 h F d 6 c R + f F e X c+ l q 0 F J 5 8 5 h T 9 w P n 8 A e p 2 M t Q = = < / l a t e x i t > < l a t e x i t s h a 1 _ b a s e 6 4 = " l 9 e I m v Y c F O K p z E D j i / n 9 j P D e W b 8 = " > A A A B 6 H i c b V B N S 8 N A E J 3 U r 1 q / q h 6 9 L B b B U 0 l E q M e i F 4 8 t 2 A 9 o Q 9 l s J + 3 a z S b s b o Q S + g u 8 e F D E q z / J m / / G b Z u D t j 4 Y e L w 3 w 8 y 8 I B F c G 9 f 9 d g o b m 1 v b O 8 X d 0 t 7 + w e F R + f i k r e N U M W yx W M S q G 1 C N g k t s G W 4 E d h O F N A o E d o L J 3 d z v P K H S P J Y P Z p q g H 9 G R 5 C F n 1 F i p 6 Q 3 K F b f q L k D W i Z e T C u R o D M p f / W H M 0 g i l Y Y J q 3 f P c x P g Z V Y Y z g b N S P 9 W Y U D a h I + x Z K m m E 2 s 8 W h 8 7 I h V W G J I y V L W n I Q v 0 9 k d F I6 2 k U 2 M 6 I m r F e 9 e b i f 1 4 v N e G N n 3 G Z p A Y l W y 4 K U 0 F M T O Z f k y F X y I y Y W k K Z 4 v Z W w s Z U U W Z s N i U b g r f 6 8 j p p X 1 U 9 t + o 1 r y v 1 2 z y O I p z B O V y C B z W o w z 0 0 o A U M E J 7 h F d 6 c R + f F e X c + l q 0 F J 5 8 5 h T 9 w P n 8 A e p 2 M t Q = = < / l a t e x i t > < l a t e x i t s h a 1 _ b a s e 6 4 = " l 9 e I m v Y c F O K p z E D j i / n 9 j P D e W b 8 = " > A A A B 6 H i c b V B N S 8 N A E J 3 U r 1 q / q h 6 9 L B b B U 0 l E q M e i F 4 8 t 2 A 9 o Q 9 l s J + 3 a z S b s b o Q S + g u 8 e F D E q z / J m / / G b Z u D t j 4 Y e L w 3 w 8 y 8 I B F c G 9 f 9 d g o b m 1 v b O 8 X d 0 t 7 + w e F R + f i k r e N U M W y x W M S q G 1 C N g k t s G W 4 E d h O F N A o E d o L J 3 d z v P K H S P J Y P Z p q g H 9 G R 5 C F n 1 F i p 6 Q 3 K F b f q L k D W i Z e T C u R o D M p f / W H M 0 g i l Y Y J q 3 f P c x P g Z V Y Y z g b N S P 9 W Y U D a h I + x Z K m m E 2 s 8 W h 8 7 I h V W G J I y V L W n I Q v 0 9 k d F I 6 2 k U 2 M 6 I m r F e 9 e b i f 1 4 v N e G N n 3 G Z p A Y l W y 4 K U 0 F M T O Z f k y F X y I y Y W k K Z 4 v Z W w s Z U U W Z s N i U b g r f 6 8 j p p X 1 U 9 t + o 1 r y v 1 2 z y O I p z B O V y C B z W o w z 0 0 o A U M E J 7 h F d 6 c R + f F e X c + l q 0 F J 5 8 5 h T 9 w P n 8 A e p 2 M t Q = = < / l a t e x i t > < l a t e x i t s h a 1 _ b a s e 6 4 = " l 9 e I m v Y c F O K p z E D j i / n 9 j P D e W b 8 = " > A A A B 6 H i c b V B N S 8 N A E J 3 U r 1 q / q h 6 9 L B b B U 0 l E q M e i F 4 8 t 2 A 9 o Q 9 l s J + 3 a z S b s b o Q S + g u 8 e F D E q z / J m / / G b Z u D t j 4 Y e L w 3 w 8 y 8 I B F c G 9 f 9 d g o b m 1 v b O 8 X d 0 t 7 + w e F R + f i k r e N U M W y x WM S q G 1 C N g k t s G W 4 E d h O F N A o E d o L J 3 d z v P K H S P J Y P Z p q g H 9 G R 5 C F n 1 F i p 6 Q 3 K F b f q L k D W i Z e T C u R o D M p f / W H M 0 g i l Y Y J q 3 f P c x P g Z V Y Y z g b N S P 9 W Y U D a h I + x Z K m m E 2 s 8 W h 8 7 I h V W G J I y V L W n I Q v 0 9 k d F I 6 2 k U 2 M 6 I m r F e 9 e b i f 1 4 v N e G N n 3 G Z p A Y l W y 4 K U 0 F M T O Z f k y F X y I y Y W k K Z 4 v Z W w s Z U U W Z s N i U b g r f 6 8 j p p X 1 U 9 t + o 1 r y v 1 2 z y O I p z B O V y C B z W o w z 0 0 o A U M E J 7 h F d 6 c R + f F e X c+ l q 0 F J 5 8 5 h T 9 w P n 8 A e p 2 M t Q = = < / l a t e x i t > < l a t e x i t s h a 1 _ b a s e 6 4 = " l 9 e I m v Y c F O K p z E D j i / n 9 j P D e W b 8 = " > A A A B 6 H i c b V B N S 8 N A E J 3 U r 1 q / q h 6 9 L B b B U 0 l E q M e i F 4 8 t 2 A 9 o Q 9 l s J + 3 a z S b s b o Q S + g u 8 e F D E q z / J m / / G b Z u D t j 4 Y e L w 3 w 8 y 8 I B F c G 9 f 9 d g o b m 1 v b O 8 X d 0 t 7 + w e F R + f i k r e N U M W y x W M S q G 1 C N g k t s G W 4 E d h O F N A o E d o L J 3 d z v P K H S P J Y P Z p q g H 9 G R 5 C F n 1 F i p 6 Q 3 K F b f q L k D W i Z e T C u R o D M p f / W H M 0 g i l Y Y J q 3 f P c x P g Z V Y Y z g b N S P 9 W Y U D a h I + x Z K m m E 2 s 8 W h 8 7 I h V W G J I y V L W n I Q v 0 9 k d F I 6 2 k U 2 M 6 I m r F e 9 e b i f 1 4 v N e G N n 3 G Z p A Y l W y 4 K U 0 F M T O Z f k y F X y I y Y W k K Z 4 v Z W w s Z U U W Z s N i U b g r f 6 8 j p p X 1 U 9 t + o 1 r y v 1 2 z y O I p z B O V y C B z W o w z 0 0 o A U M E J 7 h F d 6 c R + f F e X c + l q 0 F J 5 8 5 h T 9 w P n 8 A e p 2 M t Q = = < / l a t e x i t > < l a t e x i t s h a 1 _ b a s e 6 4 = " l 9 e I m v Y c F O K p z E D j i / n 9 j P D e W b 8 = " > A A A B 6 H i c b V B N S 8 N A E J 3 U r 1 q / q h 6 9 L B b B U 0 l E q M e i F 4 8 t 2 A 9 o Q 9 l s J + 3 a z S b s b o Q S + g u 8 e F D E q z / J m / / G b Z u D t j 4 Y e L w 3 w 8 y 8 I B F c G 9 f 9 d g o b m 1 v b O 8 X d 0 t 7 + w e F R + f i k r e N U M W y x W M S q G 1 C N g k t s G W 4 E d h O F N A o E d o L J 3 d z v P K H S P J Y P Z p q g H 9 G R 5 C F n 1 F i p 6 Q 3 K F b f q L k D W i Z e T C u R o D M p f / W H M 0 g i l Y Y J q 3 f P c x P g Z V Y Y z g b N S P 9 W Y U D a h I + x Z K m m E 2 s 8 W h 8 7 I h V W G J I y V L W n I Q v 0 9 k d F I 6 2 k U 2 M 6 I m r F e 9 e b i f 1 4 v N e G N n 3 G Z p A Y l W y 4 K U 0 F M T O Z f k y F X y I y Y W k K Z 4 v Z W w s Z U U W Z s N i U b g r f 6 8 j p p X 1 U 9 t + o 1 r y v 1 2 z y O I p z B O V y C B z W o w z 0 0 o A U M E J 7 h F d 6 c R + f F e X c + l q 0 F J 5 8 5 h T 9 w P n 8 A e p 2 M t Q = = < / l a t e x i t >
Figure 1 : 1 Figure 1 : Our Block Multitask Learning ( BMTL )
Model learns to translate the same sentence in different subwordlevel units with multiple granularities at the same time .
Finally , a Multi-Engine Machine Translation ( MEMT ) system combines all of them .
( a ) BLEU scores from BPE300 decoder ( b) BLEU scores from BPE1 K decoder ( c ) BLEU scores from BPE10K decoder
Figure 2 : 2 Figure 2 : Number of iterations versus validation BLEU scores for decoders in our BMTL1 and Baseline1 models , on the IWSLT15 En- Fr dataset .
We compare the number of iterations to converge between each of the decoders in our BMTL1 model and the corresponding Baseline1 model
Table Corpus Model BMTL1 BPE300 BPE1K BPE10K BPE10K BPE16 K BPE32K BMTL2 En-Fr Baseline BMTL 35.6 36 35.1 35.6 36 35.7 35 36.5 36 36.1 34.8 36.5 En-Vi Baseline BMTL 26.4 27 27.1 27.7 26.3 27.6 27.6 27.8 27 27.5 27.3 27.6
Table 2 : 2 BLEU scores using MEMT .
We compare two systems .
First , BMTL1 with Baseline1 , that combines 300 , 1 K and 10 K systems in BMTL and independently - trained baselines respectively .
Second , BMTL2 with Baseline2 that combines 10k , 16 k and 32 K systems in BMTL and baselines respectively .
# param .
lists the number of trainable parameters in ( M ) illions .
For baseline MEMT , we report the sum of the parameters of the independently - trained baselines .
more memory intensive and slow than the baseline model ( i.e. , word - based NMT ) at test time .
Corpus Model BLEU # param . ( M ) En-Fr Baseline1 37.4 92.03 BMTL1 37.5 71.82 Baseline2 37.3 149.78 BMTL2 37.8 114.85 En-Vi Baseline1 28.8 92.03 BMTL1 29 71.82 Baseline2 28.5 149.78 BMTL2 29 114.85 En-Cs BMTL1 92.03 BMTL2 71.82
All of our baseline numbers are comparable to numbers on the same datasets in [ 17 ] .
