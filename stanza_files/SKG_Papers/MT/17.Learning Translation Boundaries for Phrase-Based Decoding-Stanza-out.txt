title
Learning Translation Boundaries for Phrase -Based Decoding
abstract
Constrained decoding is of great importance not only for speed but also for translation quality .
Previous efforts explore soft syntactic constraints which are based on constituent boundaries deduced from parse trees of the source language .
We present a new framework to establish soft constraints based on a more natural alternative : translation boundary rather than constituent boundary .
We propose simple classifiers to learn translation boundaries for any source sentences .
The classifiers are trained directly on word-aligned corpus without using any additional resources .
We report the accuracy of our translation boundary classifiers .
We show that using constraints based on translation boundaries predicted by our classifiers achieves significant improvements over the baseline on large-scale Chinese - to - English translation experiments .
The new constraints also significantly outperform constituent boundary based syntactic constrains .
Introduction
It has been known that phrase - based decoding ( phrase segmentation / translation / reordering ( Chiang , 2005 ) ) should be constrained to some extent not only for transferring the NP - hard problem ( Knight , 1999 ) into a tractable one in practice but also for improving translation quality .
For example , Xiong et al. ( 2008 ) find that translation quality can be significantly improved by either prohibiting reorderings around punctuation or restricting reorderings within a 15 - word window .
Recently , more linguistically motivated constraints are introduced to improve phrase - based decoding .
( Cherry , 2008 ) and ( Marton and Resnik , 2008 ) introduce syntactic constraints into the standard phrase - based decoding ( Koehn et al. , 2003 ) and hierarchical phrase - based decoding ( Chiang , 2005 ) respectively by using a counting feature which accumulates whenever hypotheses violate syntactic boundaries of source -side parse trees .
( Xiong et al. , 2009 ) further presents a bracketing model to include thousands of context-sensitive syntactic constraints .
All of these approaches achieve their improvements by guiding the phrase - based decoder to prefer translations which respect source -side parse trees .
One major problem with such constituent boundary based constraints is that syntactic structures of the source language do not necessarily reflect translation structures where the source and target language correspond to each other .
In this paper , we investigate building classifiers that directly address the problem of translation boundary , rather than extracting constituent boundary from sourceside parsers built for a different purpose .
A translation boundary is a position in the source sequence which begins or ends a translation zone 1 spanning multiple source words .
In a translation zone , the source phrase is translated as a unit .
Reorderings which cross translation zones are not desirable .
Inspired by ( Roark and Hollingshead , 2008 ) which introduces classifiers to decide if a word can begin / end a multi-word constituent , we build two discriminative classifiers to tag each word in the source sequence with a binary class label .
The first classifier decides if a word can begin a multi-sourceword translation zone ; the second classifier decides if a word can end a multi-source - word translation zone .
Given a partial translation covering source sequence ( i , j ) with start word c i and end word c j 2 , this translation can be penalized if the first classifier decides that the start word c i can not be a beginning translation boundary or the second classifier decides that the end word c j can not be an ending translation boundary .
In such a way , we can guide the decoder to boost hypotheses that respect translation boundaries and therefore the common translation structure shared by the source and target language , rather than the syntactic structure of the source language .
We report the accuracy of such classifiers by comparing their outputs with " gold " translation boundaries obtained from reference translations on the development set .
We integrate translation boundary based constraints into phrase - based decoding and display that they improve translation quality significantly in large-scale experiments .
Furthermore , we confirm that they also significantly outperform constituent boundary based syntactic constraints .
Beginning and Ending Translation Zones
To better understand the particular task that we address in this paper , we study the distribution of classes of translation boundaries in real-world data .
First , we introduce some notations .
Given a source sentence c 1 ...c n , we will say that a word c i ( 1 < i < n ) is in the class B y if there is a translation zone ? spanning c i ...c j for some j > i ; and c i ?
B n otherwise .
Similarly , we will say that a word c j is in the class E y if there is a translation zone spanning c i ... c j for some j > i ; and c j ?
E n otherwise .
Here , a translation zone ? is a pair of aligned source phrase and target phrase ? = ( c j i , e q p ) where ? must be consistent with the word alignment M ?( u , v ) ? M , i ? u ? j ? p ? v ? q
By this , we require that no words inside the source phrase c j i are aligned to words outside the target phrase e q p and that no words outside the source phrase are aligned to words inside the target phrase .
Item Count ( M ) P ( % )
This means , in other words , that the source phrase c j i is mapped as a unit onto the target phrase e q p .
When defining the B y and E y class , we also require that the source phrase c j i in the translation zone must contain multiple words ( j > i ) .
Our interest is the question of whether a sequence of consecutive source words can be translated as a unit ( i.e. whether there is a translation zone covering these source words ) .
For a single - word source phrase , if it can be translated separately , it is always translated as a unit in the context of phrase - based decoding .
Therefore this question does not exist .
Note that the first word c 1 and the last word c n are unambiguous in terms of whether they begin or end a translation zone .
The first word c 1 must begin a translation zone spanning the whole source sentence .
The last word c n must end a translation zone spanning the whole source sentence .
Therefore , our classifiers only need to predict the other n ?
2 words for a source sentence of length n.
Table 1 shows statistics of word classes from our training data which contain nearly 100M words in approximately 4 M sentences .
Among these words , only 22.7 M words can begin a translation zone which covers multiple source words .
41 M words can end a translation zone spanning multiple source words , which accounts for more than 42 % in all words .
We still have more than 33 M words , accounting for 34.3 % , which neither begin nor end a multi-source - word translation zone .
Apparently , translations that begin / end on words ?
B y / ?
E y are preferable to those which begin / end on other words .
Yet another interesting study is to compare translation boundaries with constituent boundaries deduced from source -side parse trees .
In doing so , we can know further how well constituent boundary based syntactic constraints can improve translation quality .
We pair the source sentences of our development set with each of the reference translations and include the created sentence pairs in our bilingual training corpus .
Then we obtain word alignments on the new corpus ( see Section 5.1 for the details of learning word alignments ) .
From the word alignments we obtain translation boundaries ( see details in the next section ) .
We parse the source sentences of our development set and obtain constituent boundaries from parse trees .
To make a clear comparison with our translation boundary classifiers ( see Section 3.3 ) , we treat constituent boundaries deduced from source - side parse trees as output from beginning / ending boundary classifiers : the constituent beginning boundary corresponds to B y ; the constituent ending boundary corresponds to E y .
We have four reference translations for each source sentence .
Therefore we have four translation boundary sets , each of which is produced from word alignments between source sentences and one reference translation set .
Each of the four translation boundary sets will be used as a gold standard .
We calculate classification accuracy for our constituent boundary deducer on each gold standard and average them finally .
Table 2 shows the accuracy results .
The average accuracies on the four gold standard sets are very low , especially for the B y / B n classification task .
In section 3.3 , we will show that our translation boundary classifiers achieve higher accuracy than that of constituent boundary deducer .
This suggests that pure constituent boundary based constraints are not the best choice to constrain phrase - based decoding .
Learning Translation Boundaries
In this section , we investigate building classifiers to predict translation boundaries .
First , we elabo-rate the acquisition of training instances from word alignments .
Second , we build two classifiers with simple features on the obtained training instances .
Finally , we evaluate our classifiers on the development set using the " gold " translation boundaries obtained from reference translations .
Obtaining Translation Boundaries from Word Alignments
We can easily obtain constituent boundaries from parse trees .
Similarly , if we have a tree covering both source and target sentence , we can easily get translation boundaries from this tree .
Fortunately , we can build such a tree directly from word alignments .
We use 's shift-reduce algorithm ( SRA ) to decompose word alignments into hierarchical trees .
Given an arbitrary word- level alignment as an input , SRA is able to output a tree representation of the word alignment ( a.k.a decomposition tree ) .
Each node of the tree is a translation zone as we defined in the Section 2 .
Therefore the first word on the source side of each multi-source - word node is a beginning translation boundary ( ?
B y ) ; the last word on the source side of each multi-source - word node is an ending translation boundary ( ? E y ) .
Figure 1a shows an example of many - to - many alignment , where the source language is Chinese and the target language is English .
Each word is indexed with their occurring position from left to right .
Figure 1 b is the tree representation of the word alignment after hierarchical analysis using SRA .
We use ( [ i , j ] , [ p , q ] ) to denote a tree node , where i , j and p , q are the beginning and ending index in the source and target language , respectively .
By checking nodes which cover multiple source words , we can easily decide that the source words { ? , ? , ?} are in the class B y and any other words are in the class B n if we want to train a B y / B n classifier with class labels { B y , B n }.
Similarly , the source words { ? , ? , ? , ?} are in the class E y and any other words are in the class E n when we train a E y /E n classifier with class labels { E y , E n } .
By using SRA on each word-aligned bilingual sentence , as described above , we can tag each source word with two sets of class labels : { B y , B n } and { E y , E n } .
The tagged source sentences will be used to train our two translation boundary classifiers .
? ? ? ? ? ?
The last five flights all failed due to accidents ? 1 2 3 4 5 6 7 1 2 3 4 5 6 7 8 9 ( [ 1 , 7 ] , [ 1 , 9 ] ) ( [ 6 , 7 ] , [ 6 , 9 ] ) ( [ 6 , 6 ] , [ 7 , 9 ] ) ( [ 7 , 7 ] , [ 6 , 6 ] ) ( [ 1 , 5 ] , [ 1 , 5 ] ) ( [ 1 , 4 ] , [ 1 , 4 ] ) ( [ 5 , 5 ] , [ 5 , 5 ] ) ( [ 1 , 3 ] , [ 1 , 3 ] ) ( [ 4 , 4 ] , [ 4 , 4 ] ) ( [ 1 , 1 ] , [ 1 , 2 ] ) ( [ 2 , 3 ] , [ 3 , 3 ] ) a ) b) Figure 1 : An example of many - to - many word alignment and its tree representation produced by 's shift-reduce algorithm .
Building Translation Boundary Classifiers
We We use features from surrounding words , including 2 before and 2 after the current word position ( c ?2 , c ?1 , c + 1 , c + 2 ) .
We also use class features to train models with Markov order 1 ( including class feature ? c ?1 ) , and Markov order 2 ( including class features ? c ?1 , ? c ?2 ) .
Evaluating Translation Boundary Classifiers
How well can we perform these binary classification tasks using the classifiers described above ?
Can we obtain better translation boundary predictions than extracting constituent boundary from sourceside parse trees ?
To investigate these questions , we evaluate our MEMM based classifiers .
We trained them on our 100M - word word - aligned corpus .
We ran the two trained classifiers on the development set separately to obtain the B y / B n words and E y /E n words .
Then we built our four gold standards using four reference translation sets as described in Sec- generate very different translation boundaries .
We can measure these differences in reference translations using the same evaluation metric ( classification accuracy ) .
We treat each reference translation set as a translation boundary classifier while the other three reference translation sets as gold standards .
We calculate the classification accuracy for the current reference translation set and finally average all four accuracies .
Table 4 presents the results .
Comparing Table 4 with Table 3 , we can see that the accuracy of our translation boundary classification approach is not that low when considering vast divergences of reference translations .
The question now becomes , how can classifier output be used to constrain phrase - based decoding , and what is the impact on the system performance of using such constraints .
Integrating Translation Boundaries into Decoding
By running the two trained classifiers on the source sentence separately , we obtain two classified word sets : B y / B n words , and E y /E n words .
We can prohibit any translations or reorderings spanning c i ...c j ( j > i ) where c i / ?
B y according to the first classifier or c j / ?
E y according to the second classifier .
In such a way , we integrate translation boundaries into phrase - based decoding as hard constraints , which , however , is at the risk of producing no translation covering the whole source sentence .
Alternatively , we introduce soft constraints based on translation boundary that our classifiers predict , similar to constituent boundary based soft constraints in ( Cherry , 2008 ) and ( Marton and Resnik , 2008 ) weight ?
v of this feature is tuned via minimal error rate training ( MERT ) ( Och , 2003 ) with other feature weights .
Unlike hard constraints , which simply prevent any hypotheses from violating translation boundaries , soft constraints allow violations of translation boundaries but with a penalty of exp ( ?
v C v ) where C v is the violation count .
By using soft constraints , we can enable the model to prefer hypotheses which are consistent with translation boundaries .
Experiment
Our baseline system is a phrase - based system using BTGs ( Wu , 1997 ) , which includes a contentdependent reordering model discriminatively trained using reordering examples ( Xiong et al. , 2006 ) .
We carried out various experiments to evaluate the impact of integrating translation boundary based soft constraints into decoding on the system performance on the Chinese- to - English translation task of the NIST MT -05 using large scale training data .
Experimental Setup
Our training corpora are listed in Table 5 .
The whole corpora consist of 96.9M Chinese words and 109.5 M English words in 3.8 M sentence pairs .
We ran GIZA ++ ( Och and Ney , 2000 ) on the parallel corpora in both directions and then applied the " grow-diag-final " refinement rule to obtain many - to -many word alignments .
From the word-aligned corpora , we extracted bilingual phrases and trained our translation model .
We used all corpora in Table 5 except for the United Nations corpus to train our MaxEnt based reordering model ( Xiong et al. , 2006 ) , which con-sist of 33.3 M Chinese words and 35.8 M English words .
We built a four-gram language model using the SRILM toolkit ( Stolcke , 2002 ) , which was trained on Xinhua section of the English Gigaword corpus ( 181.1 M words ) .
To train our translation boundary classifiers , we extract training instances from the whole wordaligned corpora , from which we obtain 96.9 M training instances for the B y / B n and E y /E n classifier .
We ran the off-the-shelf MaxEnt toolkit ( Zhang , 2004 ) to tune classifier feature weights with Gaussian prior set to 1 to avoid overfitting .
We used the NIST MT -03 evaluation test data as our development set ( 919 sentences in total , 27.1 words per sentence ) .
The NIST MT -05 test set includes 1082 sentences with an average of 27.4 words per sentence .
Both the reference corpus for the NIST MT -03 set and the reference corpus for the NIST MT -05 set contain 4 translations per source sentence .
To compare with constituent boundary based constraints , we parsed source sentences of both the development and test sets using a Chinese parser ( Xiong et al. , 2005 ) which was trained on the Penn Chinese Treebank with an F 1 - score of 79.4 % .
Our evaluation metric is case-insensitive BLEU -4 ( Papineni et al. , 2002 ) using the shortest reference sentence length for the brevity penalty .
Statistical significance in BLEU score differences was tested by paired bootstrap re-sampling ( Koehn , 2004 ) .
Using Translation Boundaries from Reference Translations
The most direct way to investigate the impact on the system performance of using translation boundaries is to integrate " right " translation boundaries into decoding which are directly obtained from reference translations .
For both the development set and test set , we have four reference translation sets , which are named ref1 , ref2 , ref3 and ref4 , respectively .
For the development set , we used translation boundaries obtained from ref1 .
Based on these boundaries , we built our translation boundary violation counting feature and tuned its feature weight with other features using MERT .
When we obtained the best feature weights ?s , we evaluated on the test set using translation boundaries produced from ref1 , ref2 , ref3 and ref4 of the test set respectively .
ing " right " translation boundaries to build soft constraints significantly improve the performance measured by BLEU score .
The best result comes from ref4 , which achieves an absolute increase of 1.16 BLEU points over the baseline .
We believe that the best result here only indicates the lower bound of potential improvement when using right translation boundaries .
If we have consistent translation boundaries on the development and test set ( for example , we have the same 4 translators build reference translations for both the development and test set ) , the performance improvement will be higher .
Using Automatically Learned Translation Boundaries
The success of using translation boundaries from reference translations inspires us to pursue translation boundaries predicted by our MEMM based classifiers .
We ran our MEMM1 ( Markov order 1 ) and MEMM2 ( Markov order 2 ) B y / B n and E y /E n classifiers on both the development and test set .
Based on translation boundaries output by MEMM1 and MEMM2 classifiers , we built our translation boundary violation feature and tuned it on the development set .
The evaluation results on the test set are shown in Table 7 . From Table 7 we observe that using soft constraints based on translation boundaries from both our MEMM 1 and MEMM 2 significantly outperform the baseline .
Impressively , when using outputs from MEMM 2 , we achieve an absolute improvement of almost 1 BLEU point over the baseline .
This result is also very close to the best result of using translation boundaries from reference translations .
To compare with constituent boundary based syntactic constraints , we also carried out experiments using two kinds of such constraints .
Condeducer which uses pure constituent boundary based syntactic constraint : any partial translations which cross any constituent boundaries will be penalized .
The other is the XP + from ( Marton and Resnik , 2008 ) which only penalizes hypotheses which violate the boundaries of a constituent with a label from { NP , VP , CP , IP , PP , ADVP , QP , LCP , DNP } .
The XP + is the best syntactic constraint among all constraints that Marton and Resnik ( 2008 ) use for Chinese- to - English translation .
Still in Table 7 , we find that both syntactic constraint Condeducer and XP + are better than the baseline .
But only XP + is able to obtain significant improvement .
Both our MEMM 1 and MEMM 2 outperform Condeducer .
MEMM 2 achieves significant improvement over XP + by approximately 0.5 BLEU points .
This comparison suggests that translation boundary is a better option than constituent boundary when we build constraints to restrict phrasebased decoding .
One Classifier vs .
Two Classifiers
Revisiting the classification task in this paper , we can also consider it as a sequence labeling task where the first source word of a translation zone is labeled " B " , the last source word of the translation zone is labeled " E " , and other words are labeled " O " .
To complete such a sequence labeling task , we built only one classifier which is still based on MEMM ( with Markov order 2 ) with the same features as described in Section 3.2 .
We built soft constraints based on the outputs of this classifier and evaluated them on the test set .
The case- insensitive BLEU score is 33.62 , which is lower than the performance of using two separate classifiers ( 34.04 ) .
We calculated the accuracy for class " B " by mapping " B " to B y and " E " and " O " to B n .
The result is 67.9 % .
Similarly , we obtained the accuracy of class " E " , which is as low as 48.6 % .
These two accuracies are much lower than those of using two separate classifiers , especially the accuracy of " E " .
This suggests that the B y and E y are not interrelated tightly .
It is better to learn them separately with two classifiers .
Another advantage of using two separate classifiers is that we can explore more constraints .
A word c k can be possibly labeled as B y by the first classifier and E y by the second classifier .
Therefore we can build soft constraints on span ( c i , c k ) ( c i ?
B y , c k ?
E y ) and span ( c k , c j ) ( c k ?
B y , c j ? E y ) .
This is impossible if we use only one classifier since each word can have only one class label .
We can build only one constraint on span ( c i , c k ) or span ( c k , c j ) .
Related Work Various approaches incorporate constraints into phrase - based decoding in a soft or hard manner .
Our introduction has already briefly mentioned ( Cherry , 2008 ) and ( Marton and Resnik , 2008 ) , which utilize source-side parse tree boundary violation counting feature to build soft constraints for phrase - based decoding , and ( Xiong et al. , 2009 ) , which calculates a score to indicate to what extent a source phrase can be translated as a unit using a bracketing model with richer syntactic features .
More previously , ( Chiang , 2005 ) rewards hypotheses whenever they exactly match constituent boundaries of parse trees on the source side .
In addition , hard linguistic constraints are also explored .
( Wu and Ng , 1995 ) employs syntactic bracketing information to constrain search in order to improve speed and accuracy .
( Collins et al. , 2005 ) and ( Wang et al. , 2007 ) use hard syntactic constraints to perform reorderings according to source -side parse trees .
( Xiong et al. , 2008 ) prohibit any swappings which violate punctuation based constraints .
Non-linguistic constraints are also widely used in phrase - based decoding .
The IBM and ITG constraints ( Zens et al. , 2004 ) are used to restrict reorderings in practical phrase - based systems .
( Berger et al. , 1996 ) introduces the concept of rift into a machine translation system , which is similar to our definition of translation boundary .
They also use a maximum entropy model to predict whether a source position is a rift based on features only from source sentences .
Our work differs from ( Berger et al. , 1996 ) 3 ) The last difference is how segment boundaries are integrated into a machine translation system .
Berger et al.
use predicted rifts to divide a long source sentence into a series of smaller segments , which are then translated sequentially in order to increase decoding speed ( Brown et al. , 1992 ; Berger et al. , 1996 ) .
This can be considered as a hard integration , which may undermine translation accuracy given wrongly predicted rifts .
We integrate predicted translation boundaries into phrase - based decoding in a soft manner , which improves translation accuracy in terms of BLEU score .
Conclusion and Future Work
In this paper , we have presented a simple approach to learn translation boundaries on source sentences .
The learned translation boundaries are used to constrain phrase - based decoding in a soft manner .
The whole approach has several properties .
?
First , it is based on a simple classification task that can achieve considerably high accuracy when taking translation divergences into account using simple models and features .
?
Second , the classifier output can be straightforwardly used to constrain phrase - based decoder .
?
Finally , we have empirically shown that , to build soft constraints for phrase - based decoding , translation boundary predicted by our classifier is a better choice than constituent boundary deduced from source -side parse tree .
Future work in this direction will involve trying different methods to define more informative translation boundaries , such as a boundary to begin / end a swapping .
We would also like to investigate new methods to incorporate automatically learned translation boundaries more efficiently into decoding in an attempt to further improve search in both speed and accuracy .
Table 1 : 1 Statistics on word classes from our bilingual training data .
All numbers are calculated on the source side .
P means the percentage .
Sentences 3.8 - Words 96.9 - Words ? B y 22.7 23.4 Words ?
E y 41.0 42.3 Words / ?
B y and / ? E y 33.2 34.3
