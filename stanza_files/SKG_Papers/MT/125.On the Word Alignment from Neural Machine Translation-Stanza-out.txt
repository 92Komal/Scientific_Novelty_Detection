title
On the Word Alignment from Neural Machine Translation *
abstract
Prior researches suggest that neural machine translation ( NMT ) captures word alignment through its attention mechanism , however , this paper finds attention may almost fail to capture word alignment for some NMT models .
This paper thereby proposes two methods to induce word alignment which are general and agnostic to specific NMT models .
Experiments show that both methods induce much better word alignment than attention .
This paper further visualizes the translation through the word alignment induced by NMT .
In particular , it analyzes the effect of alignment errors on translation errors at word level and its quantitative analysis over many testing examples consistently demonstrate that alignment errors are likely to lead to translation errors measured by different metrics .
Introduction
Machine translation aims at modeling the semantic equivalence between a pair of source and target sentences ( Koehn , 2009 ) , and word alignment tries to model the semantic equivalence between a pair of source and target words ( Och and Ney , 2003 ) .
As a sentence consists of words , word alignment is conceptually related to machine translation and such a relation can be traced back to the birth of statistical machine translation ( SMT ) ( Brown et al. , 1993 ) , where word alignment is the basis of SMT models and its accuracy is generally helpful to improve translation quality ( Koehn et al. , 2003 ; Liu et al. , 2005 ) .
In neural machine translation ( NMT ) , it is also important to study word alignment , because word alignment provides natural ways to understanding black - box NMT models and analyzing their translation errors ( Ding et al. , 2017 ) .
Prior researches *
Work done while X. Li interning at Tencent AI Lab .
L. Liu is the corresponding author .
observed that word alignment is captured by NMT through attention for recurrent neural network based NMT with a single attention layer ( Bahdanau et al. , 2014 ; Mi et al. , 2016 ; Li et al. , 2018 ) .
Unfortunately , we surprisingly find that attention may almost fail to capture word alignment for NMT models with multiple attentional layers such as TRANSFORMER ( Vaswani et al. , 2017 ) , as demonstrated in our experiments .
In this paper , we propose two methods to induce word alignment from general NMT models and answer a fundamental question that how much word alignment NMT models can learn ( ? 3 ) .
The first method explicitly builds a word alignment model between a pair of source and target word representations encoded by NMT models , and then it learns additional parameters for this word alignment model with the supervision from an external aligner similar to Mi et al . ( 2016 ) and .
The second method is more intuitive and flexible : it is parameter - free and thus does not need retraining and external aligner .
Its key idea is to measure the prediction difference of a target word if a source word is removed , inspired by Arras et al . ( 2016 ) and Zintgraf et al . ( 2017 ) .
Experiments on an advanced NMT model show that both methods achieve much better word alignment than the method by attention ( ? 4.1 ) .
In addition , our experiments demonstrate that NMT captures good word alignment for those words mostly contributed from source ( CFS ) , while their word alignment is much worse for those words mostly contributed from target ( CFT ) .
This finding offers a reason why advanced NMT models delivering excellent translation capture worse word alignment than statistical aligners in SMT , which was observed in prior researches yet without deep explanation ( Tu et al. , 2016 ; . Furthermore , we understand and interpret NMT from the viewpoint of word alignment induced from NMT ( ? 4.2 ) .
Unlike existing researches on interpreting NMT by accessing few examples as case study ( Ding et al. , 2017 ; Alvarez - Melis and Jaakkola , 2017 ) , we aim to provide quantitatively analysis for interpreting NMT by accessing many testing examples , which makes our findings more general .
To this end , we firstly compare the effects of both approaches to interpreting NMT and find the prediction difference is better for understanding NMT .
Consequently , we propose to quantitatively analyze the translation errors by using alignment from prediction difference .
Since it is far from trivial to measure the translation errors at the word level , we design experiments by using two metrics to detect translation errors .
Our empirical results consistently show that wrong alignment is more likely to induce the translation errors meanwhile right alignment favors to encourage the translation quality .
Our analysis further suggest that word alignment errors for CFS words are responsible for translation errors in some extent .
This paper makes the two -fold contributions : ?
It systematically studies word alignment from NMT and proposes two approaches to induce word alignment which are agnostic to specific NMT models .
?
It understands NMT from the viewpoint of word alignment and investigates the effect of alignment errors on translation errors via quantitative analysis over many testing examples .
Preliminaries
Neural Machine Translation Given a source sentence x = x 1 , ? ? ? , x |x| and a target sentence y = y 1 , ? ? ? , y |y | , NMT aims at maximizing the following conditional probabilities : 1 P ( y | x ) = |y | i=1 P ( y i | y < i , x ) = |y | i=1 P y i | s L i , ( 1 ) where y < i = y 1 , . . . , y i?1 denotes a prefix of y with length i ?
1 , and s L i is the final decoding state of y i .
Generally , the conditional distribution P y i | s L i is somehow modeled within an encoder-decoder framework .
In encoding stage , the source sentence x is encoded as a sequence of hidden vectors h by an encoder according to specific NMT models , such as a multi-layer encoder consisting of recurrent neural network ( RNN ) , convolutional neural network ( CNN ) , or self-attention layer .
In decoding stage , each decoding state in l th layer s l i is computed as follows : s l i = f s l?1 i , s l < i , c l i , s 0 i = y i , ( 2 ) where l ? { 1 , . . . , L} , y i is the word embedding of word y i , f is a general function dependent on a specific NMT model , c l i is a context vector in l th layer , computed from h and s l < i according to different NMT models .
As the dominant models , attentional NMT models define the context vector c l i as a weighted sum of h , where the weight ?
l i = g s l?1 i , s l < i , h is defined by a similarity function .
Due to the space limitation , we refer readers to Bahdanau et al . ( 2014 ) , Gehring et al. ( 2017 and Vaswani et al . ( 2017 ) for the details on the definitions of f and g.
Alignment by Attention Since the attention weight ?
l i , j measures the similarity between s l?1 i and h j , it has been widely used to evaluate the word alignment between y i and x j ( Bahdanau et al. , 2014 ; Ghader and Monz , 2017 ) .
Once an attentional NMT model has been trained , one can easily extract word alignment A from the attention weight ?
according to the style of maximum a posterior strategy ( MAP ) as follows : A i , j ( ? ) = ? ? ?
1 j = arg max j ? i , j 0 o/w , ( 3 ) where A i , j = 1 indicates y i aligns to x j .
For NMT models with multiple attentional heads attentional layers as in Vaswani et al . ( 2017 ) , we sum all attention weights with respect to all heads to a single ? before MAP in equation 3 .
Methods to Inducing Word Alignment Although attention might obtain some word alignment as described in previous section , it is unknown whether NMT models contain more word alignment information than that obtained by attention .
In addition , the method using attention is useful to induce word alignment for attentional NMT models , whereas it is useless for general NMT models .
In this section , in order to induce word alignment from general NMT models , we propose two different methods , which are agnostic to specific NMT models .
Alignment by Explicit Alignment Model Given a source sentence x , a target sentence y , following Liu et al . ( 2005 ) and Taskar et al . ( 2005 ) , we explicitly define a word alignment model as follows : P ( x j | y i ; W ) = exp ( ?
( x j , y i ; W ) ) m j = 1 exp ? x j , y i ; W , ( 4 ) where ? ( x j , y i ; W ) is a distance function parametrized by W .
Ideally , ? is able to include arbitrary features such as IBM model 1 similar to Liu et al . ( 2005 ) .
However , as our goal is not to achieve the best word alignment but to focus on that captured by an NMT model , we only consider these features completely learned in NMT .
Hence , we define the ?
( x j , y i ; W ) = ( x j h j ) W y i s L i , ( 5 ) where x j and y i are word embeddings of x j and y i learned in NMT , h j is the hidden unit of x j in the encoding network and s L i is the hidden unit of y j in the decoding network , denotes the concatenation of a pair of column vectors of dimension d , and W is a matrix of dimension 2d ? 2d .
The explicit word alignment model is trained by maximizing the objective function with respect to the parameter matrix W : max W ?j , i:A ref ij =1 log P ( x j | y i ; W ) , ( 6 ) where A ref ij is the reference alignment between x j and y i for a sentence pair x and y .
As the number of elements in W is up to one million ( i.e. , ( 2 ? 512 ) 2 ) , it is not feasible to train it using a small dataset with gold alignment .
Therefore , following Mi et al. ( 2016 ) and , we run statistical word aligner such as FAST ALIGN ( Dyer et al. , 2013 ) on a large corpus and then employ resulting word alignment as the silver alignment A ref for training .
Note that our goal is to quantify word alignment learned by an NMT model , and thus we only treat W as the parameter to be learned , which differs from the joint training all parameters including those from NMT models as in Mi et al . ( 2016 ) and .
After training , one obtains the optimized W and then easily infers word alignment for a test sentence pair x , y via the MAP strategy as defined in equation 3 by setting ?
i , j = P x j | y i ; W .
Note that if word embeddings and hidden units learned by NMT models capture enough information for word alignment , the above method can obtain excellent word alignment .
However , because the dataset for supervision in training definitely include some data intrinsic word alignment information , it is unclear how much word alignment is only from NMT models .
Therefore , we propose the other method which is parameter - free and only dependent on NMT models themselves .
Alignment by Prediction Difference
The intuition to this method is that if y i aligns to x j , the relevance between y i and x j should be much higher than that between y i and any other x k with k = j .
Therefore , the key to our method is that how to measure the relevance between y i and x j .
Sampling method Zintgraf et al . ( 2017 ) propose a principled method to measure the relevance between a pair of tokens in input and output .
It is estimated by measuring how the prediction of y i in the output changes if the input token x j is unknown .
Formally , the relevance between y i and x j for a given sentence pair x , y is defined as follows : R ( y i , x j ) = P ( y i | y < i , x ) ?
P y i | y < i , x \j , ( 7 ) with P y i | y < i , x \j = x P x | y < i , x ( j , ? ) P y i | y < i , x ( j , x ) ?E x?P ( x ) P y i | y < i , x ( j , x ) , ( 8 ) where x ( j , x ) denotes the sequence by replacing x j with x in x , particularly x ( j , ? ) denotes the sequence by removing x j from x , P ( y i | y < i , x ) is defined in equation 1 and P x | y < i , x ( j , ? ) is approximated by the empirical distribution P ( x ) , which can be considered as the 1 - gram language model for the source side of the training corpus .
Unlike a computer vision task in Zintgraf et al . ( 2017 ) , the size of source vocabulary in NMT is up to 30000 and thus summation over this large vocabulary is challenging in computational efficiency .
As a result , we only sample multiple words to approximate the expectation in equation 8 by Monte Carlo ( MC ) approach .
Deterministic method Inspired by the idea of dropout ( Srivastava et al. , 2014 ) , we measure the relevance by disabling the connection between x j and the encoder network in a deterministic way .
Formally , R ( y i , x j ) is directly defined via dropout effect on x j as follows : R ( y i , x j ) = P ( y i | y < i , x ) ?
P y i | y < i , x ( j,0 ) , ( 9 ) where x ( j,0 ) denotes the sequence by replacing x j with a word whose embedding is a zero vector .
In this way , the computation in equation 9 is much faster than the Monte Carlo sampling approach involving multiple samples .
It is worth mentioning that equation 9 resembles the Monte Carlo sampling approach with a single sample in calculation , but it is significantly better than MC with a single sample in alignment quality and is very close to MC approach with enough samples , as to be shown in our experiments .
Note that the relevance R(y i , x j ) ? [ ?1 , 1 ] , where R(y i , x j ) = 1 means i th target word is totally determined by the j th source word ; R(y i , x j ) = ?1 means i th target word and j th source word are mutual exclusive ; R(y i , x j ) = 0 means j th source word do not affect generating i th target word .
To obtain word alignment for a given sentence pair x , y , after collecting R(y i , x j ) one can easily infer word alignment via the MAP strategy as defined in equation 3 by setting ?
i , j = R(y i , x j ) .
Remark
The above R(y i , x j ) in equation 7 quantifies the relevance between a target word y i and a source word x j .
Similarly , one can quantify the relevance between y i and its history word y k as follows : R o ( y i , y k ) = P ( y i | y < i , x ) ?
P y i | y < i ( k,0 ) , x , ( 10 ) where R o indicates the relevance between two target words y i and y k with k < i , and P ( y i | y < i ( k,0 ) , x ) is obtained by disabling the connection between y k and the decoder network , similarly to P y i | y < i , x ( j,0 ) .
Unlike R(y i , x j ) capturing word alignment information , R o ( y i , y k ) is able to capture word allocation in a target sentence and it will be used to answer a fundamental question why NMT models yields better translation yet worse word alignment compared with SMT in section of experiments .
Experiments
In this section , we conduct extensive experiments on ZH?EN and DE ?EN translation tasks to evaluate different methods for word alignment induced from the NMT model and compare them with a statistical alignment model FAST ALIGN ( Dyer et al. , 2013 ) .
Then , we use the induced word alignment to understand translation errors both qualitatively and quantitatively .
The alignment performance is evaluated by alignment error rate ( AER ) ( Mihalcea and Pedersen , 2003 ; Koehn , 2009 ) .
The proposed methods are implemented on top of TRANS - FORMER ( Vaswani et al. , 2017 ) which is a state- ofthe - art NMT system .
We report AER on NIST05 test set and RWTH data , whose reference alignment was manually annotated by experts Ghader and Monz , 2017 ) .
More details on data and training these systems are described in Appendix A .
Inducing Word alignment from NMT Attention Since the bilingual corpus intrinsically includes word alignment in some extent , word alignment by attention should be better than the data intrinsic alignment if attention indeed captures alignment .
To obtain the data intrinsic word alignment , we calculate pointwise mutual information ( PMI ) from the bilingual corpus and then infer word alignment for each bilingual sentence by using the MAP strategy as in equation 3 .
2 It is astonishing that word alignment by attention is inconsistent for different layers of TRANS - FORMER , although attention in a single layer TRANSFORMER obtains decent word alignment .
Referring to Figure 1 , for models more than two layers , alignment captured by attention on middle layer ( s ) is reasonable , but that on low or high layer is obviously worse than PMI .
The possible reasons can be explained as follows .
The possible functionality of lower layers might be constructing gradually better contextual representation of the word at each position as suggested in recent contextualized embedding works ( Peters et al. , 2018 ; Devlin et al. , 2018 ; Radford et al. , 2019 ) .
So the AERs become better while more unambiguous representations of the corresponding word are formed .
However , for higher layers the representational redundancy is accumulated ( Voita et al. , 2019 ; Michel et al. , 2019 ) for phrases or other larger meaning spans in the input , so attention is not capturing word - to - word align but more complicated semantic correspondence .
Explicit Alignment Model ( EAM )
As shown in Table 1 , EAM outperforms alignment induced from attention by a large margin .
However , since EAM employs silver alignment annotations from FAST ALIGN for training the additional parameters , its final AER includes contributions from both the aligned data and the model .
To eliminate contribution from the data , we investigate the AERs over different pre-trained translation models with their EAMs trained on the same FAST ALIGN annotated data .
We find that a stronger ( higher BLEU ) translation model generally obtains better alignment ( lower AER ) .
As shown in Table 2 , TRANSFORMER -L6 generates much better alignment than TRANSFORMER - L1 , highly correlated with their translation performances .
This suggests that supervision is not enough to obtain good alignment and the hidden units learned by a translation model indeed implicitly capture alignment knowledge by learning translation .
In addition , EAM can be thought as a kind of agnostic probe ( Belinkov et al. , 2017 ; Hewitt and Manning , 2019 ) to investigate how much alignment are implicitly learned in the hidden representations .
Prediction Difference ( PD )
As shown in Table 1 , PD also delivers better word alignment than attention .
PD can be implemented by sampling method or deterministic method .
As shown in Table 3 , the alignment performance of sampling method is improving as growing of the sample size , because the accuracy of Monte Carlo approach is dependent on the number of samples .
And no matter what sample size is , the variance of AER is always ignorable .
The reason might be that the arg max operation in equation 3 eliminates the fluctuation of probability matrix .
Although using large sample size can achieve nice alignment performance , it is costly in computation .
Fortunately , the deterministic method , which employs a single zero embedding rather than embedding of random words , can also achieve nice alignment performance with the same computa- tional .
One possible reason is that using zero embedding in inference is exactly the same way as dropout in training , making the trained parameters perform well in inference .
In the rest of this paper , we employ the deterministic version as the default for PD in this paper .
Alignment on CFT words
It is well -known that NMT outperforms SMT a lot in translation , and thus it is natural to ask why NMT yields worse alignment than the aligner FAST ALIGN in SMT , as shown in Table 1 .
Because the probability of a target word typically employs the mixed contributions from both source and target sides , NMT may capture good alignment for the target words mostly contributed from source ( CFS , such as content words ) while bad alignment for the target words mostly contributed from target ( CFT , such as function words ) .
To this end , we divide the target words into two categories : for a given sentence pair x , y , CFS and CFT are formally defined as two sets containing the target word y i satisfies following conditions respectively , max x?x R(y i , x ) ? max y?y < i R o ( y i , y ) > , max y?y < i R o ( y i , y ) ? max x?x R(y i , x ) > , ( 11 ) where ? [ 0 , 1 ) is a probability margin between CFS and CFT words .
After dividing the target words into two categories of CFS and CFT words according to the criterion defined above , 3 we evaluate alignment performance for each category and the results are shown in Table 4 .
We find that NMT indeed captures better alignment for CFS words than the alignment for CFT words , and FAST ALIGN generates much better alignment than NMT for CFT words .
Therefore , this fact indicates that CFT words are the reason why NMT generate worse alignment than FAST ALIGN .
Confidence - binned AER
Since confidence can reflect translation quality to some extent , we also use the confidence of each target word ( the predictive probability ) during forced decoding to group the targets into ten bins and report the AER of them in Figure 2 .
We can find the AER generally decreases as the probability increases .
This also indicates that alignment analysis on real translation instead of ground truth may lead to more reliable conclusion since beam search always finds high confidence candidates .
Understanding NMT via PD Alignment
Which method is better for understanding ?
Previous experiments mainly consider the alignment for the reference , and show that EAM is better at aligning a reference word to source words than PD .
However , in order to better understand the translation process of a NMT model , it is helpful to analyze the alignment of real translations derived from the NMT model itself .
This is also in accordance with the confidence - binned observation previously .
The alignment of the real translation actually provides some insight on the causal relationship among source and target words .
To obtain AER on real decoding , we manually annotate word alignment of the real translations for 200 source sentences randomly selected from the ZH?EN test set .
As shown in Table 5 , PD yields better alignment for the real translation than EAM , and we even surprisingly find that its alignment performance is better than FAST ALIGN .
4
This quantitative finding demonstrates PD is better for understanding the real translation in general rather than only for some special case .
It is worth noting that EAM does not only deliver worse word alignment for real translations than PD , but also be dangerous to understand NMT through its word alignment .
The main reason is that EAM relies on an external aligned dataset with supervision from statistical word aligner FAST ALIGN , and thus the characteristic of its alignment result are similar to that of FAST ALIGN , leading to the understanding biased to FAST ALIGN .
In contrast , PD only relies on prediction from a neural model to define the relevance , it has been successfully used to understand and interpret a neural model ( Zintgraf et al. , 2017 ) .
Therefore , in the rest of this subsection , we try to understand NMT by using PD both qualitatively and quantitatively .
Analyze translation errors in forced decoding
We consider the forced decoding translation error as follows .
We fix the translation history as the prefix of the reference y < i at each timestep i and then check whether the 1 - best word ? i = arg max y P ( y|y < i , x ) is exactly y i .
If ?i = y i we say the NMT model makes an error decision at this timestep .
We give a case of this kind of error in Figure 3 ( a ) .
After visualizing the alignment of y i by PD , we find that its alignment in red color is not correct compared to the ground - truth alignment in green color .
As a result , the NMT model can not capture the sufficient context to accurately predict the reference word y i and thereby generates an incorrect word ' construction ' .
Besides the case study , we try to quantitatively interpret that alignment errors may lead to translation errors .
To this end , we divide all timesteps from the reference of the test dataset into two categories , i.e. one with right alignment and the other with wrong alignment .
Then we calculate the forced decoding translation error rates for each category , i.e. the ratio between the number of timesteps making error decisions in one category and the total number of timesteps , as depicted in Table 6 .
From the table , it is clear that wrong alignment is more likely to cause a translation error while correct alignment is likely to make a correct translation decision .
Particularly , compared with right alignment , when alignment is wrong , the forced decoding translation error rate of CFS words increases much more than CFT words ( ? ) .
This observation indicates word alignment errors of CFS words are mainly responsible for translation errors instead of CFT words .
For quantitative analysis , the same as the forced decoding , we split all target words into two parts , i.e. right alignment and wrong alignment , and then we evaluate the real decoding translation error rate for each of them via i | {y i } \ {? i }|/ i |{y i }|.
As shown in Table 7 , there is an obvious gap between the real decoding translation error of right alignment and wrong alignment , which shows alignment errors have adverse effect on translation quality .
For CFS and CFT words , Table 7 demonstrates that alignment errors cause decreasing of translation quality for both sets .
Same as forced decoding , the real decoding translation error are also mainly attributed to CFS words .
This suggests improving the ability of learning word alignment for CFS words is potential to improve translation quality for neural machine translation .
Interpret Translation via CFT Alignment
As the translation error has been shown related to the alignment error , the translation success can also be understood by word alignment .
Previous research ( Ding et al. , 2017 ; Alvarez -Melis and Jaakkola , 2017 ) have attempted to interpret the decision -making of translation by aligning target words to source words .
However , there is nonignorable amount of translated target words are mostly contributed from target side instead of source side .
As shown in Figure 4 ( a ) , as a functional word , ' a ' should not be aligned to any source word .
However , in Figure 4 ( b) PD incorrectly aligned ' a ' to ' h?ng h?i j ?a ' by only considering the contributions from the source side , and this leads to a misunderstanding for why ' a ' is translated .
Fortunately , according to equation 11 , PD is good at distinguishing where the contributions come from for both source and target sides .
As shown in Figure 4 ( c ) , considering alignment of words in CFS , 'a ' is superbly not aligned to any source word because it belongs to CFT and should be aligned to ' is ' , which explains why NMT correctly translates ' a' .
Although the ambiguous Chinese word 'h ? ' mostly means ' and ' , TRANSFORMER is able to translate it perfectly as a given name 'h ? ' as shown in Figure 4 ( c ) .
5
The main reason is that NMT captures the context of the surname ' zheng ' by PD over target side besides the context of 'h ? ' by PD over source side , thanks to its more powerful language model effect .
Related Work
In NMT , there are many notable researches which mention word alignment captured by attention in some extent .
For example , Bahdanau et al . ( 2014 ) is the first work to show word alignment examples by using attention in an NMT model .
Tu et al. ( 2016 ) quantitatively evaluate word alignment captured by attention and find that its quality is much worse than statistical word aligners .
Motivated by this finding , Chen et al . ( 2016 ) , Mi et al. ( 2016 ) and improve attention with the supervision from silver alignment results obtained by statistical aligners , in the hope that the improved attention leads to better word alignment and translation quality consequently .
More recently , there are also works ( Alkhouli et al. , 2018 ) that directly model the alignment and use it to sharpen the attention to bias translation .
Despite the close relation between word alignment and attention , Koehn and Knowles ( 2017 ) and Ghader and Monz ( 2017 ) discuss the differences between word alignment and attention in NMT .
Most of these works study word alignment for the same kind of NMT models with a single attention layer .
One of our contribution is that we propose modelagnostic methods to study word alignment in a general way which deliver better word alignment quality than attention method .
Moreover , for the first time , we further understand NMT through alignment and particularly quantify the effect of alignment errors on translation errors for NMT .
The prediction difference method in this paper actually provides an avenue to understand and interpret neural machine translation models .
Therefore , it is closely related to many works on visualizing and interpreting neural networks ( Lei et al. , 2016 ; Bach et al. , 2015 ; Zintgraf et al. , 2017 ) .
Indeed , our method is inherited from ( Zintgraf et al. , 2017 ) , and our advantage is that it is computationally efficient particularly for those tasks with a large vocabulary .
In sequence - to-sequence tasks , Ding et al . ( 2017 ) focus on model interpretability by modeling how influence propagates across hidden units in networks , which is often too restrictive and challenging to achieve as argued by Alvarez -Melis and Jaakkola ( 2017 ) .
And instead , Alvarez -Melis and Jaakkola ( 2017 ) concentrate on prediction interpretability with only oracle access to the model generating the prediction .
To achieve this effect , they propose a casual learning framework to measure the relevance between a pair of source and target words .
Our method belongs to the type of prediction interpretability similar to Alvarez -Melis and Jaakkola ( 2017 ) , but ours is a unified and parameter - free method rather than a pipeline and parameter - dependent one .
In addition , both Ding et al . ( 2017 ) and Alvarez -Melis and Jaakkola ( 2017 ) qualitatively demonstrate interpretability by showing some sentences , while we exhibit the interpretability by quantitatively analyzing all sentences in a test set .
Conclusions and Future Work
This paper systematically studies the word alignment from NMT .
It firstly reveals that attention may not capture word alignment for an NMT model with multiple attentional layers .
Therefore , it proposes two methods ( explicit model and prediction difference ) to acquire word alignment which are agnostic to specific NMT models .
Then it suggests prediction difference is better for understanding NMT and visualizes NMT from word alignment induced by prediction difference .
In particular , it quantitatively analyzes that alignment errors which are likely to lead to translation errors at word level measured by different metrics .
In the future , we believe more work on improving CFS alignment is potential to improve translation quality , and we will investigate on using source context and target history context in a more robust manner for better predicting CFS and CFT words .
Figure 1 : 1 Figure 1 : AER of attention at each layer on TRANSFORMER with different number of layers .
AER of PMI is shown as white .
Blue and red means AER is better and worse than PMI respectively .
Figure 2 : 2 Figure 2 : Confidence - binned AER on the two datasets .
Figure 3 : 3 Figure 3 : Two examples of showing the translation errors caused by word alignment errors both in forced decoding and real decoding on TRANSFORMER - L6 .
Red arrow means wrong alignment while Green arrow means the golden alignment .
red word means translation error .
' R ' denotes reference sentence and ' T ' denotes translation sentence .
* Results are measured on sampled 200 sentences of ZH?EN task , and golden alignment for real translation are human labeled ( Appendix D )
Figure 4 : 4 Figure 4 : An example of word alignment and translation produced by TRANSFORMER - L6 .
Red arrow means wrong alignment and blue arrow means the prediction is attributed to a target word .
The word in light font do not align to any source word , while red word means wrong translation .
Table 1 : 1 AER of the proposed methods .
Methods Tasks ZH?EN DE?EN FAST ALIGN 36.57 26.58 Attention mean 56.44 74.59 Attention best 45.22 53.98 EAM 38.88 39.25 PD 41.77 42.81 Models L1 L2 TRANSFORMER L3 L4 L5 L6 AER 54.50 47.94 40.47 38.40 38.80 38.88 BLEU 36.51 44.83 45.63 47.19 46.35 46.95 * Results are measured on TRANSFORMER -L6 .*
Results are measured on ZH?EN task .
Table 2 : 2 EAM on translation models with different number of layer .
Table 3 : 3 Comparison between sampling and deterministic methods for prediction difference .
Table 4 : 4 AER of CFS and CFT words .
Table 5 : 5 Alignment of Real Translation .
Table 6 : 6 Forced decoding translation error rate for CFS / CFT words with right / wrong alignment .
Analyze translation errors in real decoding Besides the forced decoding translation error , we care more about search - aware statistics in real de - coding .
Specifically , we identify words in the ref- erence which are recalled through the real trans - lation , and those unrecalled words are called real decoding translation errors defined as {y } \ { ?} , the difference between the two sets where {y } is the set of words in y .
As shown in the case in Fig- ure 3 ( b ) , the identified translation error ' faces ' is wrongly aligned by PD to 'b ?
xi? s ? g? ' , which may strongly correlate to the under translation of ' mi?n l?n ' at the source side .
Tasks Target Words Right Alignment Wrong Alignment ? ALL 31.72 40.73 9.01 ZH?EN CFS 31.03 41.44 10.41 CFT 34.67 39.92 5.25 ALL 23.84 40.09 16.25 DE?EN CFS 22.31 39.04 16.73 CFT 30.53 41.40 10.87 * Results are measured on TRANSFORMER -L6 .
Table 7 : 7 Real decoding translation error rate for CFS / CFT words with right / wrong alignment .
Throughout this paper , bold font such as x denotes a sequence while regular font such as x denotes an element which may be a scalar x , vector x or matrix X .
More details in Appendix B .
Without affecting main conclusions , = 0 in this experiment for covering all words in analysis .
Experiments with different margins are in Appendix C.
The numbers in Table5 are not comparable to those in Table 1 and Figure2 , because they employ different translations in the target side leading to different ground - truth alignments , which are crucial for evaluating alignment .
It is interesting that SMT ( MOSES ) incorrectly translates this word into ' and ' in our preliminary experiment .
