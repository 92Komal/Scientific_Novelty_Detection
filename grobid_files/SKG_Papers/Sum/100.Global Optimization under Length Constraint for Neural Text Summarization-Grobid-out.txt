title
Global Optimization under Length Constraint for Neural Text Summarization

abstract
We propose a global optimization method under length constraint (GOLC) for neural text summarization models. GOLC increases the probabilities of generating summaries that have high evaluation scores, ROUGE in this paper, within a desired length. We compared GOLC with two optimization methods, a maximum log-likelihood and a minimum risk training, on CNN/Daily Mail and a Japanese single document summarization data set of The Mainichi Shimbun Newspapers. The experimental results show that a state-ofthe-art neural summarization model optimized with GOLC generates fewer overlength summaries while maintaining the fastest processing speed; only 6.70% overlength summaries on CNN/Daily and 7.8% on long summary of Mainichi, compared to the approximately 20% to 50% on CNN/Daily Mail and 10% to 30% on Mainichi with the other optimization methods. We also demonstrate the importance of the generation of in-length summaries for post-editing with the dataset Mainich that is created with strict length constraints. The experimental results show approximately 30% to 40% improved post-editing time by use of inlength summaries.

Introduction Automatic text summarization aims at generating a short and coherent summary of a given text. In text summarization, while the generated summaries should contain the important content of the input text, their lengths should also be controlled, e.g., the summary should be as long as the width of target devices such as smart-phones and digital signage. Therefore, editors have to summarize a source text under a length constraint by reordering and paraphrasing. For summarization, both extractive and abstractive methods have been widely studied. Extractive methods are based on selection of sentences from source texts without using reordering or paraphrasing. In contrast, abstractive methods generate summaries as new sentences. Therefore, abstractive methods can rely on the reordering and paraphrasing required for summary and title generation. However, most abstractive summarization methods are not able to control the summary length. To this problem,  Kikuchi et al. (2016)  and  Liu et al. (2018)  proposed abstractive summarization models with a capability of summary length control. One is an LSTM based summarization model, and the other is a CNN based one. They proposed to enforce the desired length in the decoding of training and generation. Their models, however, leave much room for improvement, at least with regard to two aspects. One aspect is that the summarization performance is still worse than other state-of-the-art models. The other is that their models sometimes fail to control the output length. In this paper, we address these two issues by incorporating global training based on a minimum risk training (MRT) under the length constraint. MRT  (Och, 2003)  is used to optimize a model globally for an arbitrary evaluation metric. It was also applied for optimizing the neural summarization model for headline generation with respect to ROUGE  (Ayana et al., 2017) , which is based on an overlap of words with reference summaries  (Lin, 2004) . However, how to use MRT under a length constraint was an open problem; thus we propose a global optimization under length constraint (GOLC) for neural summarization models. We show that neural summarization models trained with GOLC can control the output length better than the existing methods. This is because our training procedure makes use of overlength summaries. While the probabilities of generating sum-maries that satisfy the length constraint increase, overlength summaries are penalized and hence the probabilities of generating such summaries decrease. We conducted experiments on CNN/Daily Mail and a Japanese single document summarization dataset of the Mainichi Shimbun Newspapers. Models trained with GOLC showed better ROUGE scores than those of maximum loglikelihood based methods while generating summaries satisfying the length constraint. In contrast to the approximately 20% and 50% of overlength summaries generated by the other state-ofthe-art models, our method only generated 6.70% of overlength summaries on CNN/Daily and 7.8% on long summary of Mainichi while improving ROUGE scores. We also demonstrate the importance of the generation of in-length summaries for post-editing. The experimental results of post-editing generated summaries showed that generated in-length summaries contributed to an approximately 30% to 40% improved post-editing time. 

 Related Work There are many models for text summarization such as rule-based models  (Dorr et al., 2003)  and statistical models  (Banko et al., 2000; Zajic et al., 2004; Filippova and Strube, 2008; Woodsend et al., 2010; Filippova and Altun, 2013) . Recently, abstractive summarization models based on neural encoder-decoders have been proposed  (Rush et al., 2015; Chopra et al., 2016; Zhou et al., 2017; Paulus et al., 2018) . There are mainly two research directions: model architectures and optimization methods. Pointer networks  (Vinyals and Le, 2015; Gulcehre et al., 2016; See et al., 2017)  and copy mechanisms  (Gu et al., 2016; Zeng et al., 2016)  have been proposed for overcoming the unknown word problem. Other methods for the improvement of abstractive summarization models include use of existing summaries as soft templates with a source text  and extraction of actual fact descriptions from a source text . Although summary length control of abstractive summarization has been studied, previous studies focus on incorporation of a length controlling method to neural abstractive summarization models  (Kikuchi et al., 2016; Fan et al., 2018; Liu et al., 2018; Fevry and Phang, 2018; Schumann, 2018) . In contrast, our research focuses on a global optimization method. Optimization methods for optimizing a model with respect to evaluation scores, such as reinforcement learning  (Ranzato et al., 2015; Paulus et al., 2018; Chen and Bansal, 2018; Wu and Hu, 2018)  and minimum risk training  (Ayana et al., 2017) , have been proposed for summarization models based on neural encoder-decoders. Our method is similar to that of  Ayana et al. (2017)  in terms of applying MRT to neural encoder-decoders. There are two differences between our method and Ayana et al.'s: (i) our method uses only the part of the summary generated by a model within the length constraint for calculating the ROUGE score and (ii) it penalizes summaries that exceed the length of the reference regardless of its ROUGE score. 

 Summary Length Controllable Models In this section, we describe two summarization models that are optimized by GOLC for generating summaries within length constraints. These two models are also optimized with maximum loglikelihood estimation (MLE) that is widely applied for training neural encoder-decoders of the original papers of the summarization models and a minimum risk training (MRT). 3.1 LSTM based Model (PG w/ LE)  Kikuchi et al. (2016)  proposed LenEmb (LE) that is a variant of LSTM that takes into account the remaining length of a summary in training and generation. The remaining length of a summary is initialized as the length of the reference summary in training and as the desired length in generation. For each time step in decoding, the length of a generated word is subtracted from the remaining length of a summary. We integrate LE into a pointer-generator network  (See et al., 2017) , which is a state-of-theart neural summarization model. A pointergenerator consists of a pointer network and an LSTM encoder-decoder. A pointer network can copy words of a source text into a summary even if they are out-of-vocabulary. Probability of generating a word is calculated based on linear interpolation between probability distribution of vocabulary, and attention distribution of source words. We replaced an LSTM decoder of a pointer-generator with LenEmb, which we call this model PG w/ LE.  Liu et al. (2018)  proposed CNN based encoderdecoders for controlling summary length. This model uses the variant of a CNN decoder that takes into account the desired length of a summary. In CNN based encoder-decoders, the representations of words are the concatenation of word embeddings and position embeddings  (Gehring et al., 2017) . This model is trained to generate <EOS>, which is the end of a sentence, when the number of generated words in a summary is the desired length. 

 CNN based Model (LC) We note that the length of a summary is the number of words in the summary in  Liu et al. (2018) , while the length of a summary is the number of characters in the summary in  Kikuchi et al. (2016) , 

 Conventional Optimization Methods In this section, we describe MLE, and MRT that are used for training summarization models. We denote a source sentence as x = ?x 1 , ..., x N ?, where x i (1 ? i ? N ) is a word in x and a summary as y = ?y 1 , ..., y M ?, where y j (1 ? j ? M ) is a word in y. 

 Maximum Log-likelihood Estimation MLE aims at maximizing log-likelihood on training data D: L M LE (?) = ? (x,y)?D log p ? (y|x), (1) where p ? (y|x) = ? M t=1 p(y t |y <t , x). For each time step in decoding, a model calculates the probability of generating a target word in a reference summary, then, the target word is used as the next input of a decoder. We see that a model never generates overlength summaries since words in a reference summary are used as inputs of a decoder. Thus, the way of decreasing the probability of generating overlength summaries is not trivial. 

 Minimum Risk Training In MRT, unlike MLE, the probability of a word at each step is calculated using previously generated words as in the test phase. MRT aims at optimizing a model for an evaluation metric by minimiz-  ing the expected loss on D: L M RT (?) = ? (x,y)?D ? y ? ? S(x) Q ? (y ? |x)?(y, y ? ), (2) where Q ? (y ? |x) ? p ? (y ? |x) ? . ?(y, y ? ) is a loss function of the negative ROUGE between a reference summary y and a summary to be evaluated y ? , ? is a smoothing factor and S(x) = S(x)?{y}  (Shen et al., 2016) . S(x) is a set of summaries that can be generated by a model for a given x. Including reference summaries into the set of sampled summaries can increase the probabilities of generating reference summaries, which will be analyzed in Section 6. From Equation (2), we see that the probability of generating a summary is weighted by its ROUGE score. Since MRT optimizes summarization models in terms of a ROUGE score, the length of summaries generated by models depends on the type of a ROUGE score, i.e., summary lengths will be long if we choose ROUGE recall as ?, while summary lengths will be short if we choose ROUGE precision as ?. By choosing the ROUGE F score as ?, the length of a generated summary will be balanced, though there is no relation with whether or not the summary is overlength. Therefore, output length controllable models lose the ability of generating summaries with a desired length. These models assume generating <EOS> when the remaining length of a summary is 0, or the length of a summary reaches the desired length by using words in a reference summary in MLE. 

 Global Optimization under Length Constraint Compared to conventional methods, the proposed method (GOLC) optimizes models under length constraint. To take into account the length constraint, we modify ? of the original MRT to ? that has an overlength penalty. We formalize loss function for optimization under length constraint as follows: L GOLC (?) = ? (x,y)?D ? y ? ? S(x) Q ? (y ? |x) ?(y, y ? ), (3) where Q ? (y ? |x) ? p ? (y ? |x) ? . ?(y, y ? ) is formal- ized as follows: ?(y, y ? ) = ?ROUGE(y, trim(y ? , c * (y))) + max(0, c * (y ? ) ? c * (y)), (4) where ROUGE calculates the ROUGE score between two texts. We used ROUGE-L recall as a score function. The first term in Equation (  4 ) decreases the loss when a part of a generated summary within the length constraint covers word n-grams of the reference summary. The part of a generated summary that exceeds the length constraint does not affect the calculation of the ROUGE score. The second term increases the loss if a generated summary is longer than the reference summary. 1 A difference between calculating the number of characters in an English summary and that in a Japanese one is whether or not the length of space between words is counted. 

 Analysis of GOLC In this section, we argue that GOLC is more suitable for training neural encoder-decoders under a length constraint by comparing our objective function with the existing ones. In addition, we analyze the contribution of reference summaries in MRT. L M RT (?) of Equation (  2 ) can be written as: L M RT (?) = ? (x,y)?D { ?Q ? (y|x)+ ? y ? ?S(x) Q ? (y ? |x)?(y, y ? ) } , (5) because ?(y, y) = ?1 for a reference summary y. From this equation, if negative ROUGE recall is used as the loss function, we observe that the probability of each reference summary, which has the best ROUGE score and readability, largely increases. However, the probability of generating overlength summaries may increase from decreasing L M RT (?) because a longer summary tends to result in a higher ROUGE recall score. In contrast, L GOLC (?) of Equation (  3 ) can take into account overlength penalties and can be rewritten with ?(y, y) = ?1 as: L GOLC (?) = ? (x,y)?D { ?Q ? (y|x) ? ? y ? ?S ? (x) Q ? (y ? |x) ?(y, y ? ) + ? y + ?S + (x) Q ? (y + |x) ?(y, y + ) } , (6) where S ? (x) = {y ? |y ? ? S(x) ? ?(y, y ? ) < 0} and S + (x) = {y ? |y ? ? S(x) ? ?(y, y ? ) ? 0}. Note that in the second term of the righthand side, the absolute value | ?(y, y ? )| is used. Since Q ? (y ? |x) ? 0 holds true for any y ? by definition and ?(y, y ? ) ? 0 also holds true for overlength summary y ? , we see the following for minimizing L GOLC (?). Each Q ? (y ? |x) for summaries shorter than the length constraint increases because ?(y, y ? ) < 0. In contrast, each Q ? (y + |x) for overlength summaries decreases because ?(y, y + ) > 0. As a result, the possibility of generating overlength summaries is reduced. Of course, the probability of each reference summary in L GOLC (?) also largely increases because ?(y, y) = ?1.  

 Experimental Settings We compare our optimization method GOLC with two different optimization methods, MLE and MRT by applying the optimization methods to LSTM and CNN-based summarization models on an English and a Japanese dataset. We implemented summarization models with Chainer  (Tokui et al., 2015)  and all summarization models were trained on NVIDIA Tesla P100. Note that the test data were randomly sampled from the 2017 data. The sizes of the training data and test data are 163,220 and 2,000. Half of the dataset is document-long summary pairs, and the rest of the dataset is document-short summary pairs. The vocabulary was created by collecting words that occur more than two times in the training data. Words that are not included in the vocabulary were replaced with the special token, <UNK>. Figure  2  shows summary length distributions on CNN/Daily and Mainichi. Compared to the length distribution of summaries in CNN/Daily, the one of long summaries in Mainichi has a low variance. Almost all long summaries are 50-54 characters in Mainichi while lengths of almost all summaries are 10 2 -10 3 in CNN/Daily. 

 Summarization Models to be Compared We compared a state-of-the-art model that is not capable of controlling summary length, and two length controllable models and simple baselines that extract the first part of source text. LEAD extracts the first part of source text. For CNN/Daily, we used reported scores of LEAD-3sent that extracts first three sentences of a source text  (See et al., 2017) . For long summaries and short summaries in Mainichi, we used the first 54 characters (LEAD-54chars) and 17 characters of a source text (LEAD-17chars). PG is an LSTM-based standard pointer-generator that does not have capability of summary length control. PG showed state-of-the-art performances on CNN/Daily. Therefore, we used PG in our evaluation. We trained two models of PG for short summaries and long summaries on Mainichi because this model cannot control summary length. PG w/ LE is an extension of the PG with length embeddings (LenEmb) proposed by  Kikuchi et al. (2016) . We set the dimension of remaining summary length embeddings to 100 and the number of length types to 401 (i.e., 0 to 400). If the remaining length of a summary is larger than 400, we kept using 400 as the input of LenEmb until the actual remaining length is less than 401. LC  (Liu et al., 2018 ) is a convolutional encoderdecoder-based summarizing model for controlling the summary length. In contrast to PG w/ LE, we use the number of the remaining words to be outputted instead of the number of characters by following the original settings. 

 Optimization Methods to be Compared MLE is the optimization method based on the maximum log-likelihood estimation of Equation (1). MRT optimizes models with respect to a ROUGE score of Equation (  2 ). GOLC is our method for globally optimizing length controllable models under a length constraint of Equation (3). Before applying MRT and GOLC to summarization models, they are trained with MLE. We used Adam (Kingma and Ba, 2014) (? = 0.0001, ? 1 = 0.9, ? 2 = 0.999, ? = 10 ?8 ) for updating the LenEmbs, and Nesterovs Accelerated Gradient  (Bengio et al., 2013)  for updating the LCs. Other hyperparameters of models and optimization methods used in our experiments are summarized in Table  1 . We halve the word embedding size, hidden state size, and the number of layers of LC from the original setting of  Liu et al. (2018) . This is because avoiding out-of-memory error on our GPU when applying MRT, and GOLC, and our objective of the experiments with LC is the evaluation of length control ability of each optimization method. 

 Evaluation Metrics ROUGE We used ROUGE F-score on CNN/Daily. When calculating ROUGE F-score, full-length summaries are used. We also used ROUGE recall on Mainichi with a length constraint, which is the length of a reference summary. Overlength summaries are truncated to the length constraint for evaluating ROUGE recall scores. We used pyrouge 3 , which is the same evaluation script used by  See et al. (2017) , scores on CNN/Daily. This is because the pyrouge does not support Japanese. Therefore, we used sumeval 4 with the MeCab on the ROUGE evaluation of the Mainichi dataset. Length controllability For evaluating the capability of summary length control, we use two metrics. The first one is the variance of a summary length c * (y i ) against the desired length l i  (Liu et al., 2018) : V ar * = 0.001 * 1 n n ? i=0 |l i ? c * (y i )| 2 . ( 7 ) The other is %over that is calculated by dividing the number of overlength summaries with the number of test data. Because of the difference of the length unit between LenEmb and LC, Var and %over of LenEmb and those of LC are not comparable. Since GOLC optimizes length controllable models, we compare models optimized by GOLC with models trained with other optimization methods. Average time of generation (avg. time) We evaluated average time of generation of summaries on CPU per new article. pointer-generator (PG) Sum. Model (Opt. Method) R-1 F R-2 F R-L F V ar b %over avg. time (sec.) LEAD-3sents  (See et al., 2017)   The length of a reference summary was used as a desired length for length controllable models. LC originally has capability of summary length control. Therefore, we only compare the differences obtained with optimization methods. The avg. time indicates a number for the average summary generation time (seconds). Human Evaluation We also evaluate postediting time of automatically generated summaries for human post-editing. 8 Experimental Results 

 ROUGE Table  2  shows ROUGE scores (F-scores of full length summaries), Var, and %over on CNN/Daily. PG w/ LE trained with GOLC shows better ROUGE scores and better %over than those of MLE. Although ROUGE scores of PG w/ LE trained with MRT showed better ROUGE scores than GOLC, %overs are higher than those of GOLC. From these results, we see that GOLC improves ability to generate summaries under length constraints while maintaining ROUGE scores. ROUGE scores of LCs are lower than those of pointer-generator  (See et al., 2017)  and PG of our implementation. This is because LC could not copy words of a source text into its target text. The difference between ROUGE scores and V ar w of LC and reported scores in  Liu et al. (2018)  is due to differences of hyperparameters between ours and the original paper. Table  3  shows ROUGE scores (recall of truncated summaries), Var, and %over on Mainichi. ROUGE scores of PG w/ LE are higher than those of PG. This is because PG w/ LE was able to trained with two times larger training data compared to PG. Since PG cannot control summary length, two models were trained for short sum-maries and for long summaries separately. Although ROUGE scores of neural summarization models are lower than those of LEAD-3sents on CNN/Daily, ROUGE scores of neural summarization models are higher than those of LEAD-54chars and LEAD-17chars. These results come from the difference between the writing rules of summaries and ones of news articles in Mainichi. For example, yomigana that indicates phonetic symbols of Japanese kanji characters sometimes follow person names and location names of kanji characters in a news article but not in a summary. Furthermore, noun phrases are often rewritten to shorter paraphrases. 

 Length Controllability We evaluated the length controllability of each optimization method. On CNN/Daily, we used the length of each summary as the length constraint. On Mainichi, for PG w/ LE, we used 17 for short summaries and 54 for long summaries as their length constraints. For LC, we used the number of words in a reference summary as the length constraint because no length constraints with respect to the number of words are given. We see that ROUGE scores of PG w/ LE trained with GOLC are higher than those of MLE on CNN/Daily and Mainichi. Furthermore, GOLC contributes to reduced generation of overlength summaries compared to other optimization methods on CNN/Daily and long summary on pointer-generator (PG) Sum. Model (Opt. Method  By training LC with GOLC, ROUGE scores degraded while %over was improved on Table  2 and  Table 3 . LC trained with GOLC sometimes generated much shorter summaries against length constraints. Thus, recall scores were lower and hence F-scores were also lower than those of other methods. ) R-1 R R-2 R R-L R V 

 Summarization Speed We evaluated generation time of models trained with different optimization methods on CNN/Daily and Mainichi. The rightmost columns of Table  2 and Table    3  show average time of summary generation with beamsearch of the beam width 5. We see that GOLC-based summarization is faster than the other methods. One of the reasons is models trained with GOLC usually generate summaries within length constraints. In contrast, the avg. times of the MRT-based models is slower than other methods because the models trained with MRT often generate longer summaries than those of other methods. We evaluated generation time of models trained with different optimization methods on CNN/Daily and Mainichi.  also show average time of generation with beamsearch of the beam width 5. Since models trained with GOLC usually generate summaries within length constraints, generation time of GOLC is faster than those of MRT. 

 Post-Edit Evaluation In order to demonstrate the importance of the generation of in-length summaries, we evaluate the post-editing time of generated summaries. We recruited 7 Japanese native speakers for this evaluation as editors. The editors are required to edit summaries generated by summarization models if they are overlength and have grammatical errors and factual errors. We randomly collected 10 overlength summaries and 10 in-length summaries from summaries generated by PG, PG w/LE (MLE), PG w/LE (MRT) and PG w/LE (GOLC) because our objective is to evaluate the importance of the generation of in-length summaries, not comparison of optimization methods. Table  4  shows the average time of post-editing. The experimental results show that overlength summaries require longer editing time. The reduction is approximately 39.4% for 17 chars and 29.1% for 54 chars. This result indicates that the generation of in-length summaries is important when we use generated summaries for assisting workers. Combined with the Table  3 and Table 4 , we estimate use of GOLC-based summarizer contributed to approximately 10% reduction of postediting time compared with MRT-based one. We used readability and informativeness for subjective evaluation of the articles of postediting: Readability (Read.) is evaluation of grammatical correctness of summaries. Informativeness (Info.) is evaluation of coverage of important parts of the original source text under the length constraint. We asked the editors to assign a five scale of 1 (bad) to 5 (good) to summaries of readability and informativeness. editing. Therefore, we see the post-editing results were reasonable. 

 Conclusion We proposed a global optimization method for neural text summarization under a length constraint. Our methods outperformed the conventional methods in terms of both ROUGE, while maintaining the ability to generate a summary within a length constraint. We also demonstrated the importance of the generation of summaries in a length constraint for real use. The post-edit evaluation with automatically generated summaries showed that in-length summaries contributed to approximately 30% to 40% improved post-editing time compared with use of the baselines. (a) Example of the original ?(y, y ? ). (b) Example of the proposed ?(y, y ? ). 
