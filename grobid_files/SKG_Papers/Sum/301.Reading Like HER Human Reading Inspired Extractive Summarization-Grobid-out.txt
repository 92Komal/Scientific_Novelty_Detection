title
Reading Like HER: Human Reading Inspired Extractive Summarization

abstract
In this work, we re-examine the problem of extractive text summarization for long documents. We observe that the process of extracting summarization of human can be divided into two stages: 1) a rough reading stage to look for sketched information, and 2) a subsequent careful reading stage to select key sentences to form the summary. By simulating such a two-stage process, we propose a novel approach for extractive summarization. We formulate the problem as a contextualbandit problem and solve it with policy gradient. We adopt a convolutional neural network to encode gist of paragraphs for rough reading, and a decision making policy with an adapted termination mechanism for careful reading. Experiments on the CNN and Daily-Mail datasets show that our proposed method can provide high-quality summaries with varied length, and significantly outperform the state-of-the-art extractive methods in terms of ROUGE metrics.

Introduction Automatic text summarization has wide popularity in NLP applications such as producing digests, headlines and reports. Among the supervised methods, two main types are usually explored, namely abstractive and extractive summarizations  (Nenkova et al., 2011) . Compared with abstractive approaches, extractive methods are more practical and applicable as they are faster, simpler and more reliable on grammar as well as semantic information  (Yao et al., 2018) . Recent studies  (Cheng and Lapata, 2016; Nallapati et al., 2017; Yasunaga et al., 2017; Feng et al., 2018)  consider extractive summarization as a sequence labeling task, where each sentence is individually processed and determined whether it should be extracted or not. Various neural networks are used to label each sentence and trained using cross-entropy loss to maximize the likelihood of the ground-truth labeled sequences, which may derive the mismatch between the cross-entropy objective function and the evaluation criterion. On the other hand, some reinforcement learning based methods  (Wu and Hu, 2018; Narayan et al., 2018; Yao et al., 2018)  directly optimize the evaluation metric by combining cross-entropy loss with rewards and train model with policy gradient reinforcement learning. Note that the rewards usually reflect the quality of extracted summary and measured by standard evaluation protocol. However, they still sequentially process text and tend to extract earlier sentences over later ones due to the sequential nature of selection  (Dong et al., 2018) . Although great efforts have been devoted to this field, most of the existing approaches neglect how human being reads and forms summaries. Human beings are very good at refining the main idea of a given text based on their reading cognitive process. Note that the reading habits of native speakers are varied and hard to modeled, so we adopt the three reading phases of second-language readers where there are potential behavior patterns. Such reading process of second-language readers generally includes pre-reading, reading and post-reading (Avery and  Graves, 1997; Saricoban, 2002; Toprak and Almac?oglu, 2009; Pressley and Afflerbach, 2012) . In the pre-reading stage, they roughly preview the whole text to form an initial cognition and extract general but coarse-grained information at the meantime. Based on such prior knowledge, the subsequent reading stage is a conscious process that focuses on target-specific purposes to search fine-grained details through repeated skimming and scanning. For post-reading, re-reading is performed to check whether there are

 N9 Step 1. Rough Reading !"S51.)Q<(5T)*+,-+.)*/01.,)2+.)4-5.6(7)"08 !"(E86+1- #)(E86+/( (a) (b) (c

 U Step 2. Careful Readingany missed details. The three-stage reading process makes it effective in capturing essential sentences of text as the extracted summarization. N9 U U #"V1@1<(<)1.-+)W5/-,) 3+/F) ?+=.1-1+.) Inspired by such human's reading cognitive process, in this paper, we re-examine the problem of extractive summarization and propose a new approach HER (Human-bEing-Reading inspired extractive summarization). We simplify the threestage reading process to two subsequent stages called rough reading and careful reading. In rough reading, coarse-grained information of the original context is identified to form a general cognition. A detailed case is shown in Figure  1 . In Figure  1  (a) and (b), after browsing on the whole article, the main idea is outlined and the text is roughly divided into three parts based on the gist of paragraphs at the meantime. Each part describes related but not the same contents. To implement the rough reading process, we use a hierarchical neural network to encode sentence vectors and derive a document representation as global feature for the main idea. Meanwhile, a convolutional neural network (CNN) is utilized to encode local features from different paragraphs. During careful reading, the model searches for specific but important details through re-readings to cover the content and extract essential finegrained information as the final summary. For instance, as shown in Figure  1  (c), after rough reading, two sentences close to the main idea "Boston Bruins won Stanley Cup" may be selected firstly. Then an earlier and more detailed sentence about "fans rioting" is appended to the summary by performing re-reading. It is a combination of people's reading and post-reading process. To accomplish this, we train a neural network to score each sentence. A multi-armed bandit policy with an adapted termination mechanism is then used to form the final summary. In our HER model, the whole process is formulated as a contextual bandit problem. We train a reinforcement learning agent to solve it using the policy gradient method  (Sutton et al., 2000) . At each step, the agent takes an action which is a tobe-selected sentence set, and then receives a reward based on the correlation between extractive summary and gold-standard reference summary. Our main contributions are as follows: ? We propose an extractive summarization method that simulates human being's reading cognitive process. We formulate it as a contextual bandit problem in which two stages including rough reading and careful reading are devised. ? We use a hierarchical neural network for rough reading which consists of a neural net to encode the whole document and another one to capture features in paragraphs. Then we use a contextual-bandit agent to flexibly select sentences during careful reading, with an adapted termination mechanism to select various but proper numbers of sentences. ? We conducted experiments on the CNN and DailyMail datasets and showed that our proposed model can outperform state-of-the-art methods and provide high-quality summaries. 

 The HER Model In this section, we introduce the overall framework of our model, HER. We formulate extractive summarization as a contextual bandit  (Langford and Zhang, 2007)  trained using policy gradient reinforcement learning. L K L K ? Policy Gradient General Net Rough Reading Document Careful Reading ? If Terminated ROUGE Reward S 1 S 1 S 2 S 2 S N ?1 S N ?1 S N S N D D S a1 S a1 Encoder ? L 2 L 2 L 1 L 1 Local Net Sentence Embeddings ? ? 1 ? 1 ? 2 ? 2 ? N ?1 ? N ?1 ? N ? N ? ? [0, 1] ? ? [0, 1] S a2 S a2 S at S at Decoder bandit policy ? Selected Sentences If Not Terminated G r1 G r1 G r2 G r2 ? Reference Summary Global Feature Local Features Sentence Affinities G rn G rn Figure 2: The overall framework of HER is formulated as a contextual bandit and can be divided into a two-stage process containing rough reading and careful reading. As illustrated in Figure  2 , the framework can be divided into two stages: rough reading and careful reading. During rough reading, a document with N sentences is encoded into sentence vectors {S 1 , S 2 , . . . , S N } as well as a set of features denoted as F , which includes one global feature S representing the whole documentary information and K local features {L 1 , L 2 , . . . , L K } depicting paragraphical contentsIn careful reading, sentence vectors are decoded into real-valued scores called sentence affinities {? 1 , ? 2 , . . . , ? N }, which can be considered as an estimation of sentence correlation to cover the context. Then a bandit policy is used to repeatedly choose unique sentence until the termination mechanism is triggered. We will detail the preliminaries in Sec. 2.1, the rough reading stage in Sec. 2.2, and the careful reading stage in Sec. 2.3. The training process is illustrated in Sec. 2.4. 

 Summarization as Contextual-Bandit Contextual-bandit  (Langford and Zhang, 2008; Li et al., 2010; Pan et al., 2019a)  is the multi-armed bandit  (Auer et al., 2002)  problem with featured contexts. At each step, the agent observes a context, selects an action based on the context, and then receives a reward. The agent's goal is to quickly find a decision making policy to maximize its return. In extractive summarization, the goal of the task is to extract an undetermined number of sentences from the original document as summary. We show that it can be formulated as a contextual bandit problem if we select the sentences sequentially. Specifically, for each document, the context includes its documentary representation learned through rough reading. At each step t = 1, 2, . . . , we define the action as the index of the next sentence to select. The agent keeps selecting sentences until it reaches the termination condition (detailed in Sec. 2.3.3). Finally, the selected sentences SUM = (S a 1 , . . . , S a M ) corresponding to the selected actions (a 1 , . . . , a M ) form an extractive summary. The agent will receive a reward R(SUM; G). Note that G is the manually-labeled gold-standard summary of the document D, and the reward R(SUM; G) measures the correlation between G and the predicted summary SUM. 

 Rough Reading In rough reading, we aim to form a general cognition on a given document which encodes the document into sentence embeddings as well as produces the feature set F including global and local features. Specifically, bidirectional LSTMs (BiL-STMs) on word-and sentence-level are first used to encode a document with N sentences into d s -dimentional sentence embeddings {S 1 , S 2 , . . . , S N }, S i ? R ds . Second, a global feature S ? R ds is computed as an average of all the sentence vectors. Third, we use a convolutional neural network to refine gist of different paragraphs and generate multiple local features on the sentence level, which is different from previous methods  (Kim, 2014; Narayan et al., 2017; Yao et al., 2018)  processing on the word level. In detail, a stacking of N sentence vectors is represented as, S 1:N = [S 1 , S 2 , ? ? ? , S N ] ? R N ?ds , (1) We apply 1-D convolutional neural networks on S 1:N followed with a max-over-time pooling so that a final document-level representation can be extracted. Specifically, we altogether used K convolutional nets with K different window sizes to summarize different gists of paragraphs. Finally, by stacking the outputs together, we get the final document-level representation for local features L 1:K ? R K?ds . 

 Careful Reading Now that we have the sentence vectors and document-level features given by rough reading, we can perform careful reading to select the sentences one by one to form the summary. 

 Sentence Decoder In order to extract high-quality summaries, we first compute the sentence affinities by a sentence decoder, which is observed effective in  Dong et al. (2018) . The sentence affinities are calculate by the following principles: (1) Salience (The sentences whose meanings are close to the central idea should be emphasized); (  2 ) Coverage (The sentences that match different paragraphical information should be encouraged); (3) Redundancy (The unselected sentences which are similar to already extracted ones should be inhibited). As we need to learn the relations between each sentence and the rest of the document, we update the sentence representations by, S t = S t ? S ? L 1:K , t = 1, . . . , N. (2) Then, we utilize a decoder Dec 1 to score the Salience and Coverage for each sentences, and a secondary score function Dec 2 to screen the sentences that might have Redundancy. Specifically, ? 1 = (? 11 , . . . , ? 1N ) = Dec 1 (S 1:N ), (3) ? 2 = Dec 2 (S 1:N ? (1 ? ? 1 )), (4) We implement Dec 1 and Dec 2 as multi-layered perceptrons. Finally, we average the two scores as the final sentence affinities. ? = (? 1 + ? 2 )/2. (5) 

 Bandit Policy The overall decision making process goes as follows. The agent selects one sentence at each step based on the contextual information provided by the rough reading and sentence affinities computed by the sentence decoder. It stops taking actions once the termination mechanism is triggered. After that, all the selected sentences are formed as a summary, and a final reward can be calculated by comparing to the labeled golden summary. As there is no intermediate reward before termination, the goal of the agent is to find a policy to maximize its expected long-term return. It is an intuitive choice to select sentences with the highest affinities as summary, which is similar to training data selection  (Song et al., 2012; . However, such an argmax policy is prone to only learn the easy patterns since it lacks exploration. We will show an example in Section 4.3. They should be explored to form the summary as well. Since the search space for summarization is extremely large, we must explicitly address the tradeoff between exploration and exploitation for fast learning, which is an active research area in reinforcement learning and applications  (Pan et al., 2019a,b) . In our work, we find the use of -greedy with stochastic policy works well enough to encourage exploration. Specifically, with a probability of 1 ? , the agent chooses the sentence following the current policy, i.e., to sample an index a t ? [1, N ] from the multinomial distribution with sentence affinities {? 1 , ? 2 , . . . , ? N } as probabilities. Otherwise, with a small probability of , the agent randomly picks one available sentence as an exploration. Note that such exploration is only used during training. 

 Termination Mechanism In HER, we propose a termination mechanism that is independent on future rewards to make our model flexible in extracting summary with various numbers of sentences. This mechanism is defined as follows Done ? Bernoulli(min( ? min ? max , 1 ? ? max )), (6) where ? max and ? min denotes the maximal and minimal value in ? for all the remained sentences, respectively. Thus Done = 1 terminates the sentence extraction when there is no key sentences left. With this mechanism, the agent will stop extraction with high probability as long as the differences among remaining affinities are small enough or the remaining sentence affinities are very low. 

 Training After the agent sequentially takes an action a t until terminated, we can derive an summary induced by a out of a document D. Then the agent would receive a reward R(SUM; G) where G is the goldstandard summary of D. R(SUM; G) is computed by the average of three variants of ROUGE  (Lin, 2004) . To balance precision and recall, we use Fscore here, R(SUM; G) = 1 3 (ROUGE-1 f (SUM; G) + ROUGE-2 f (SUM; G) + ROUGE-L f (SUM; G)). (7) We represent the whole extractive neural network as p ? (?|D) containing the encoder in rough reading and the decoder in careful reading. The goal of our model is to find parameters ? of p ? to produce high-quality summary and maximize the rewards (c.f. Eq. (  8 )). But we cannot obtain gradient to maximize Eq. (  8 ) with gradient ascent as it is discretely sampled. So we use the likelihood ratio gradient estimator, also known as REINFORCE  (Williams, 1992; Sutton et al., 2000) , to acquire the gradient by Eq. (  9 ). We use Q(D) in Eq. (  10 ) to construct p ? (a|D) following  Dong et al. (2018) , where z(D) = t ? t (D) and is the exploration probability of the -greedy denoted in Sec. 2.3.2. M is the number of extracted sentences this is determined jointly by the termination mechanism and the document context. Q(D) 1 M is adopted to present p ? (a|D) to avoid extracting fewer or more sentences when maximizing the objective function. Hence, ? logp ? (a|D) in Eq. (  9 ) can be easily computed. J(?) = E[R(SUM; G)] (8) ? J(?) = E[ ? logp ? (a|D)R(SUM; G)] (9) Q(D) = M j=1 ( N ? j + 1 + (1 ? )?a j (D) z(D) ? j?1 k=1 ?a k (D) ) (10) However, the exact document distribution is unknown and we cannot evaluate the expected value in Eq. (  9 ). So we use sampling to estimate it instead. Given a document-summary pair (D, G), our HER samples B summaries induced by a 1 , . . . , a B from p ? (?|D) and obtain all the gradients, then the average value is considered as the estimation. As sample-based gradient estimate may have high variance, we use a baseline for variance reduction. The gradient of the objective function is finally represented as, ? J(?) ? 1 B B b=1 ? logp ? (a b |D)(R(a b , G) ? r) (11) where we choose self-critical reinforcement learning to acquire the baseline r following Ranzato for time step t = 1, . . . , N do 7: Sample u ? U (0, 1) 8: if u < then 9: Uniformly sample at from A 10: else 11: at ? Categorical(?A) 12: Get termination flag by Eq.(  6 ) 13: Let M = t 14: if Done then 15: Break the inner loop 16: else 17: Update the action set A = A \{at} 18: Generate summary SUM b = (Sa 1 , . . . , Sa M ) 19:  l b = 1 M M t=1 log( N ?t+1 + (1? )?a t j ? j ? t?1 k=1 ?a k 

 Experiment Settings In this section we present our experimental setup for evaluating the performance of the proposed HER, including the datasets, evaluation protocol, baselines and implementation details. Datasets: We evaluate our models on three datasets: the CNN, the DailyMail and the combined CNN/DailyMail  (Hermann et al., 2015; Nallapati et al., 2016) . We also use the standard splits of  Hermann et al. (2015)  for training, validation, and test (90, 266/1, 220/1, 093 documents for  CNN and 196, 961/12, 148/10, 397  for Daily-Mail) with the same setting in  See et al. (2017) . Evaluation: We evaluate summarization quality using F 1 ROUGE  (Lin, 2004)  including unigram and bigram overlap (ROUGE-1 and ROUGE-2) to assess informativeness and the longest common subsequence (ROUGE-L) to assess fluency with the reference summaries. We obtain ROUGE scores using a faster python im-plementation 1 for training and evaluation, and the standard pyrouge package 2 for test following  Dong et al. (2018) . Baselines: We compare our proposed HER against four kinds of extractive methods: (1) Lead-3 model simply selects the first three sentences. (2) NN-SE  (Cheng and Lapata, 2016)  and Sum-maRuNNer  (Nallapati et al., 2017)  are sequence labeling task and trained with cross-entropy loss. (3) Refresh  (Narayan et al., 2018) , DQN  (Yao et al., 2018)  and RNES  (Wu and Hu, 2018 ) extract summary via reinforcement learning. (4) BAN-DITSUM  (Dong et al., 2018)  considers the extractive summarization as a contextual bandit but fails to simulate human reading recognition process. Implementation Details: We initialize word embeddings with 100-dimension Glove embeddings  (Pennington et al., 2014) . In rough reading, the encoder is hierarchical and each layer is a twostacked BiLSTM with a hidden size of 200. Therefore, sentence vectors and the document representation S have a dimension of 400. For the variant CNN, we adopt filter windows H in {1, 2, 3} with 100 feature maps each and generate K = 3 local representations for each document. In careful reading, we set = 0.1 for bandit policy. We also bound the minimum and maximum number of selected sentence to be 1 and 10 for termination mechanism. During training, we use the optimizer Adam (Kingma and Ba, 2014) with a learning rate of 10 ?5 , beta parameters as (0, 0.999) and a weight decay of 10 ?6 to maximize the objective function following  Dong et al. (2018) . We employ gradient clipping of 1 for regularization and sample B = 20 times for each document. We train our model within two epochs. Note that we choose the whole document as the final summary if the document length is less than 3 sentences as the local features cannot be obtained through the CNNbased network. 

 Experimental Results 

 Quantitative Analysis We first report the ROUGE metrics on the combined CNN/DailyMail test sets in Table  1  and the separate results in Table  2 . We can get several observations from these two tables. 1 https://github.com/pltrdy/rouge 2 Pyrouge is a Python package. We compute all ROUGE scores with parameters "-a -c 95 -m -n 4 -w 1. Firstly, our model generally performs the best and even surpasses 42 on ROUGE-1 score on the combined CNN/DailyMail dataset. It also shows better results on the separate datasets. We argue that global and local features from rough reading can help extract summaries by capturing deep contextual relations, and the designed structure in careful reading makes it more flexible in selecting sentence sets. Hence a two-stage framework based on the human's reading cognition is more appropriate for extractive summarization. Secondly, directly optimizing the evaluation metric by combining cross-entropy loss with rewards may improve the extractive results. RLbased methods, Refresh  (Narayan et al., 2018)  and RNES  (Wu and Hu, 2018) , perform better than the sequence labeling methods like SummaRuN-Ner  (Nallapati et al., 2017) . BANDITSUM  (Dong et al., 2018)  generally performs better than the other baselines, and it reports that framing the extractive summarization based on contextual bandit is more suitable than sequential labeling setting and also has more search space than other RLbased methods  (Narayan et al., 2018; Yao et al., 2018; Wu and Hu, 2018) . 

 Ablation Test Next, we conduct ablation test by removing the modules of the proposed HER step by step. Firstly, we replace the automatic termination mechanism with a fixed extracting strategy that always selects    3  and it proves the effectiveness of each proposed module. Firstly, HER constructed with an automatic termination mechanism is more flexible and reliable in extracting various numbers of sentences varying different documents. Secondly, HER use -greedy to select sentences in order to raise the exploration chances on discovering important but easily ignored information. Thirdly, general cognition from rough reading process is useful in extractive summarizarion. 

 A Closer Look To verify whether our proposed HER can simulate human beings' reading cognitive process, and whether such simulation are inherently helpful on extractive summarization, we conduct extensive evaluations and try to answer the following three questions. (1) Can CNN-based network extract local features of different paragraphs? In Figure  3 , we report the distribution of selected sentences' positions on our proposed model HER, BANDITSUM and HER w/o Local Net. We test each model at 10k, 50k, 100k training steps. It shows that all the three models can focus on different parts of the context to form summary at first and BANDITSUM performs the best after training 10k steps. However, with training steps growing, BANDITSUM and HER w/o Local begin to prefer earlier sentences. HER, on the other hand, can focus on various paragraphs and extract information from different parts of the texts with constant training. The contextual bandit (CB) based frameworks seems to be able to attend on various parts of the contexts to some degree in the beginning. However, with constant training, both BANDIT-SUM and HER w/o Local start to focus on earlier sentences due to the nature that sentences similar to the main idea usually lie on the head of the text. As our proposed HER is equipped with a variant CNN to extract local features, our model can focus on gist of paragraphs rather than only the first several sentences. It also encourages the exploration on extracting information from various positions more flexibly. (2) Can the proposed bandit policy discover low-score but easily ignored information? To answer this question, we demonstrate a detailed case on sentence selection in Figure  4 . We observe that although the fourth sentence has a high affinity, it should not be included in the summary since its meaning is close to the third sentence which has already been extracted. Instead, the 13th sentence is supposed to be selected though it has low affinity. Since our HER adopts the -greedy policy, it can explore such sentence and extract it out correctly. (3) Can HER extract varied but proper numbers of sentences? We answer this question by drawing the fre- (3) to compute sentence affinities without inhibiting redundant sentences. For each documentsummary pair, they are asked to rank the output of each system on three aspects, namely overall quality, coverage and non-redundancy. Notice that the best one will be marked rank 1 and so on, and two system would be ranked the same if their extracted summaries are identical. We report the average results in Table  4  and it shows that our HER is leading than BANDITSUM on overall quality and cov-   

 Related Work Extractive Text Summarization Researchers have developed many statistical methods for automatic extractive summarization. Traditional methods learn to score each sentence dependently  (Erkan and Radev, 2004; Mihalcea and Tarau, 2004; Wong et al., 2008) . Recently neural network based extractive methods  (Cheng and Lapata, 2016; Nallapati et al., 2017; Feng et al., 2018;  usually consider extractive summarization as sequence labeling tasks and aim to minimize the cross-entropy objective function.  Narayan et al. (2017)  utilizes side information to help sentence classifier while  Yasunaga et al. (2017)  computes the salience of each sentence for selection with graph convolutional networks. In addition, reinforcement learning based methods  (Wu and Hu, 2018; Narayan et al., 2018; Yao et al., 2018)  have been proposed to directly optimize the evaluation metric ROUGE by combining cross-entropy loss with rewards from policy gradient reinforcement learning.  Dong et al. (2018)  considered extractive summarization as a contextual bandit and it performs well especially when good summary sentences appear late in the source document. Recently,  Nallapati et al. (2017) ; Chen and Bansal (2018);  Hsu et al. (2018)  propose unified models and combine the advantages of both extractive and abstractive methods. Human Reading-inspired Strategy in NLP Recently, several pioneer researches began to study how to adapt human reading cognition process, usually including pre-reading, reading and post-reading  (Avery and Graves, 1997; Saricoban, 2002; Toprak and Almac?oglu, 2009; Pressley and Afflerbach, 2012) , into various NLP-related applications. For example,  solved document-based question answering and by simulating human being's reading strategy.  Luo et al. ( , 2019  utilized the prior knowledge of human reading to solve sub-tasks in sentiment analysis.  Song et al. (2017 Song et al. ( , 2018  enhanced word embeddings in a similar way.  applied it for abstractive summarization,  Zheng et al. (2019)  simulated human behavior for reading comprehension, and  Lei et al. (2019)  utilized human-like semantic cognition for aspectlevel sentiment classification. In this paper, we attempt to perform extractive summarization under the inspiration of human reading recognition. 

 Conclusion Inspired by the reading cognition of human beings, we propose HER, a two-stage method, to mimic how people extract summaries. The whole learning process is formulated as a contextual bandit trained with policy gradient reinforcement learning. In rough reading, two neural networks are taken to encode coarse-grained information. In careful reading, repeatedly reading are conducted to select fine-grained sentences as summary. Experiments on two real-world datasets demonstrate that our proposed model can significantly outperform the state-of-the-art extractive methods on summary quality, coverage and non-redundancy. Figure 1 : 1 Figure 1: An example of how human beings extract summary. The article is from CNN/DailyMail dataset. 
