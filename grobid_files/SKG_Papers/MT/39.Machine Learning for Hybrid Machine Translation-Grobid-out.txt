title
Machine Learning for Hybrid Machine Translation

abstract
We describe a substitution-based system for hybrid machine translation (MT) that has been extended with machine learning components controlling its phrase selection. The approach is based on a rule-based MT (RBMT) system which creates template translations. Based on the rule-based generation parse tree and target-to-target alignments, we identify the set of "interesting" translation candidates from one or more translation engines which could be substituted into our translation templates. The substitution process is either controlled by the output from a binary classifier trained on feature vectors from the different MT engines, or it is depending on weights for the decision factors, which have been tuned using MERT. We are able to observe improvements in terms of BLEU scores over a baseline version of the hybrid system.

Introduction In recent years, machine translation (MT) systems have achieved increasingly better translation quality. Still each paradigm has its own challenges: while statistical MT (SMT) systems suffer from a lack of grammatical structure, resulting in ungrammatical sentences, RBMT systems have to deal with a lack of lexical coverage. Hybrid architectures intend to combine the advantages of the individual paradigms to achieve an overall better translation.  and  Federmann and Hunsicker (2011)  have shown that using a substitutionbased approach can improve the translation quality of a baseline RBMT system. Our submission to WMT12 is a new, improved version following these approaches. The output of an RBMT engine serves as our translation backbone, and we substitute noun phrases by translations mined from other systems. 2 System Architecture Our hybrid MT system combines translation output from: a) the Lucy RBMT system, described in more detail in  (Alonso and Thurmair, 2003) ; b) the Linguatec RBMT system  (Aleksic and Thurmair, 2011) ; c) Moses  (Koehn et al., 2007) ; d) Joshua  (Li et al., 2009) . Lucy provides us with the translation skeleton, which is described in more detail in Section 2.2 while systems b)-d) are aligned to this translation template and mined for substitution candidates. We give more detailed information on these systems in Section 2.3. 

 Basic Approach We first identify "interesting" phrases inside the rule-based translation and then compute the most probable correspondences in the translation output from the other systems. For the resulting phrases, we apply a factored substitution method that decides whether the original RBMT phrase should be kept or rather be replaced by one of the candidate phrases. A schematic overview of our hybrid system and its main components is given in Figure  1 . In previous years, it turned out that the alignment of the candidate translations to the source contained too many errors. In this version of our system, we thus changed the alignment method that connects the other translations. Only the rule-based template is aligned to the source. As we make use of the Lucy RBMT analysis parse trees, this alignment is very good. The other translations are now connected to the rule-based template using a confusion network approach. This also reduces computational efforts, as we now can compute the substitution candidates directly from the template without detouring over the source. During system training and tuning, this new approach has resulted in a reduced number of erroneous alignment links. Additionally, we also changed our set of decision factors, increasing their total number. Whereas an older version of this system only used four factors, we now consider the following twelve factors: The language model was trained using the SRILM toolkit  (Stolcke, 2002) , on the EuroParl  (Koehn, 2005)  corpus, and lemmatised or part-of-speech tagged versions, respectively. We used the Tree-Tagger  (Schmid, 1994)  for lemmatisation as well as part-of-speech tagging. The substitution algorithm itself was also adapted. We investigated two machine learning approaches. In the previous version, the system used a handwritten decision tree to perform the substitution: 1. the first of the two new approaches consisted of machine learning this decision tree from annotated data; 2. the second approach was to assign a weight to each factor and using MERT tuning of these weights on a development set. Both approaches are described in more detail later in Section 2.4. 

 Rule-Based Translation Templates The Lucy RBMT system provides us with parse tree structures for each of the three phases of its transferbased translation approach: analysis, transfer and generation. Out of these structures, we can extract linguistic phrases which later represent the "slots" for substitution. Previous work has shown that these structures are of a good grammatical quality due to the grammar Lucy uses. 

 Substitution Candidate Translations Whereas in our previous work, we solely relied on candidates retrieved from SMT systems, this time we also included an additional RBMT system into the architecture. Knowing that statistical systems make similar errors, we hope to balance out this fact by exploiting also a system of a different paradigm, namely RBMT. To create the statistical translations, we used stateof-the-art SMT systems. Both our Moses and Joshua systems were trained on the EuroParl corpus and News Commentary 1 training data. We performed tuning on the "newstest2011" data set using MERT. We compile alignments between translations with the alignment module of MANY  (Barrault, 2010) . This module uses a modified version of TERp  (Snover et al., 2009)  and a set of different costs to create the best alignment between any two given sentences. In our case, each single candidate translation is aligned to the translation template that has been produced by the Lucy RBMT system. As we do not use the source in this alignment technique, we can use any translation system, regardless of whether this system provides us with a source-totarget alignment. In earlier versions of this system, we compiled the source-to-target alignments for the candidate translations using GIZA++  (Och and Ney, 2003) , but these alignments contained many errors. By using target-to-target alignments, we are able to reduce the amount of those errors which is, of course, preferred. 

 Substitution Approaches Using the parse tree structures provided by Lucy, we extract "interesting" phrases for substitution. This includes noun phrases of various complexity, then simple verb phrases consisting of only the main verb, and finally adjective phrases. Through the target-to-target alignments we identify and collect the set of potential substitution candidates. Phrase substitution can be performed using two methods. 

 Machine-Learned Decision Tree Previous work used hand-crafted rules. These are now replaced by a classifier which was trained on annotated data. Our training set D can formally be 1 Available at http://www.statmt.org/wmt12/ represented as D = {(x i , y i )|x i ? R p , y i ? {?1, 1}} n i=1 (1) where each x i represents the feature vector for some sentence i while the y i value contains the annotated class information. We use a binary classification scheme, simply defining 1 as "good" and ?1 as "bad" translations. In order to make use of machine (ML) learning methods such as decision trees  (Breiman et al., 1984) , Support Vector Machines  (Vapnik, 1995) , or the Perceptron  (Rosenblatt, 1958 ) algorithm, we have to prepare our training set with a sufficiently large amount of annotated training instances. To create the training data set, we computed the feature vectors and all possible substitution candidates for the WMT12 "newstest2011" development set. Human annotators were then given the task to assign to each candidate whether it was a "good" or a "bad" substitution. We used Appraise  for the annotation, and collected a set of 24,996 labeled training instances with the help of six human annotators. Table  1  gives an overview of the data sets characteristics. The decision tree learned from this data replaces the hand-crafted rules. 

 Weights Tuned with MERT Another approach we followed was to assign weights to the chosen decision factors and to use Minimal Error Rate Training to get the best weights. Using the twelve factors described in Section 2.1, we assign uniformly distributed weights and create n-best lists. Each n-best lists contains a total of n + 2 hypotheses, with n being the number of candidate systems. It contains the Lucy template translations, the hybrid translation using the best candidates as well as a hypothesis for each candidate system. In the latter translation, each potential candidate for substitution is selected and replaces the original sub phrase in the baseline. The n-best list is Translation Candidates Total "good" "bad" Count 24,996 10,666 14,330 sorted by the final score of the feature vectors making up each hypothesis. We used Z-MERT  (Zaidan, 2009)  to optimise the set of feature weights on the "newstest2011" development set. 

 Evaluation Using the "newstest2012" test set, we created baseline translations for the four MT systems used in our hybrid system. Then we performed three runs of our hybrid system: a) a baseline run, using the factors and uniformly distributed weights; b) a run using the weights trained on the development set; c) a run using the decision tree learned from annotated data. Table  2  shows the results for automatic metrics' scores. Besides BLEU  (Papineni et al., 2001) , we also report its case-sensitive variant, BLEU-cased, and TER  (Snover et al., 2006)  scores. Comparing the scores, we see that both advanced hybrid methods perform better than the original, baseline hybrid as well as the Lucy baseline system. The MERT approach performs slightly better than the decision tree. This proves that using machinelearning to adapt the substitution approach results in better translation quality. Other baseline systems, however, still outperform the hybrid systems. In part this is due to the fact that we are preserving the basic structure of the RBMT translation and do not reorder the new hybrid translation. To improve the hybrid approach further, there is more research required. 

 Conclusion and Outlook In this paper, we have described how machinelearning approaches can be used to improve the phrase substitution component of a hybrid machine translation system. We reported on two different approaches, the first using a binary classifier learned from annotated data, and the second using feature weights tuned with MERT. Both systems achieved improved automatic metrics' scores on the WMT12 "newstest2012" test set for the language pair English?German. Future work will have to investigate ways how to achieve a closer integration of the individual baseline translations. This might be done by also taking into account reordering of the linguistic phrases as shown in the tree structures. We will also need to examine the differences between the classifier and MERT approach, to see whether we can integrate them to improve the selection process even further. Also, we have to further evaluate the machine learning performance via, e.g., cross-validationbased tuning, to improve the prediction rate of the classifier model. We intend to explore other machine learning techniques such as SVMs as well. Figure 1 : 1 Figure 1: Schematic overview of the architecture of our substitution-based, hybrid MT system. 
