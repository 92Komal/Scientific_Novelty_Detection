title
Sentence Level Dialect Identification for Machine Translation System Selection

abstract
In this paper we study the use of sentencelevel dialect identification in optimizing machine translation system selection when translating mixed dialect input. We test our approach on Arabic, a prototypical diglossic language; and we optimize the combination of four different machine translation systems. Our best result improves over the best single MT system baseline by 1.0% BLEU and over a strong system selection baseline by 0.6% BLEU on a blind test set.

Introduction A language can be described as a set of dialects, among which one "standard variety" has a special representative status.  1  Despite being increasingly ubiquitous in informal written genres such as social media, most non-standard dialects are resource-poor compared to their standard variety. For statistical machine translation (MT), which relies on the existence of parallel data, translating from non-standard dialects is a challenge. In this paper we study the use of sentence-level dialect identification together with various linguistic features in optimizing the selection of outputs of four different MT systems on input text that includes a mix of dialects. We test our approach on Arabic, a prototypical diglossic language  (Ferguson, 1959)  where the standard form of the language, Modern Standard Arabic (MSA) and the regional dialects (DA) live side-by-side and are closely related. MSA is the language used in education, scripted speech and official settings while DA is the primarily spoken native vernacular. We consider two DAs: Egyptian and Levantine Arabic in addition to MSA. Our best system selection approach improves over our best baseline single MT system by 1.0% absolute BLEU point on a blind test set. 

 Related Work Arabic Dialect Machine Translation. Two approaches have emerged to alleviate the problem of DA-English parallel data scarcity: using MSA as a bridge language  (Sawaf, 2010; Salloum and Habash, 2011; Salloum and Habash, 2013; Sajjad et al., 2013) , and using crowd sourcing to acquire parallel data  (Zbib et al., 2012) .  Sawaf (2010)  and  Salloum and Habash (2013)  used hybrid solutions that combine rule-based algorithms and resources such as lexicons and morphological analyzers with statistical models to map DA to MSA before using MSA-to-English MT systems.  Zbib et al. (2012)  obtained a 1.5M word parallel corpus of DA-English using crowd sourcing. Applied on a DA test set, a system trained on their 1.5M word corpus outperformed a system that added 150M words of MSA-English data, as well as outperforming a system with oracle DA-to-MSA pivot. In this paper we use four MT systems that translate from DA to English in different ways. Similar to  Zbib et al. (2012) , we use DA-English, MSA-English and DA+MSA-English systems. Our DA-English data includes the 1.5M words created by  Zbib et al. (2012) . Our fourth MT system uses ELISSA, the DA-to-MSA MT tool by  Salloum and Habash (2013) , to produce an MSA pivot. Dialect Identification. There has been a number of efforts on dialect identification  (Biadsy et al., 2009; Zaidan and Callison-Burch, 2011; Akbacak et al., 2011; .  performed token-level dialect ID by casting the problem as a code-switching problem and treating MSA and Egyptian as two different languages. They later used features from their token-level system to train a classifier that performs sentence-level dialect ID . In this paper, we use AIDA, the system of , to provide a variety of dialect ID features to train classifiers that select, for a given sentence, the MT system that produces the best translation. 

 System Selection and Combination in Machine Translation. The most popular approach to MT system combination involves building confusion networks from the outputs of different MT systems and decoding them to generate new translations  (Rosti et al., 2007; Karakos et al., 2008; He et al., 2008; Xu et al., 2011) . Other researchers explored the idea of re-ranking the n-best output of MT systems using different types of syntactic models  (Och et al., 2004; Hasan et al., 2006; Ma and McKeown, 2013) . While most researchers use target language features in training their rerankers, others considered source language features  (Ma and McKeown, 2013) . Most MT system combination work uses MT systems employing different techniques to train on the same data. However, in this paper, we use the same MT algorithms for training, tuning, and testing, but vary the training data, specifically in terms of the degree of source language dialectness. Our approach runs a classifier trained only on source language features to decide which system should translate each sentence in the test set, which means that each sentence goes through one MT system only. Since we do not combine the output of the MT systems on the phrase level, we call our approach "system selection" to avoid confusion. 

 Machine Translation Experiments In this section, we present our MT experimental setup and the four baseline systems we built, and we evaluate their performance and the potential of their combination. In the next section we present and evaluate the system selection approach. MT Tools and Settings. We use the open-source Moses toolkit  (Koehn et al., 2007)  to build four Arabic-English phrase-based statistical machine translation systems (SMT). Our systems use a standard phrase-based architecture. The parallel corpora are word-aligned using GIZA++  (Och and Ney, 2003) . The language model for our systems is trained on English Gigaword  (Graff and Cieri, 2003) . We use SRILM Toolkit  (Stolcke, 2002)  to build a 5-gram language model with modified Kneser-Ney smoothing. Feature weights are tuned to maximize BLEU on tuning sets using Minimum Error Rate Training  (Och, 2003) . Results are presented in terms of BLEU  (Papineni et al., 2002) . All evaluation results are case insensitive. The English data is tokenized using simple punctuation-based rules. The MSA portion of the Arabic side is segmented according to the Arabic Treebank (ATB) tokenization scheme  (Maamouri et al., 2004; Sadat and Habash, 2006)  using the MADA+TOKAN morphological analyzer and tokenizer v3.1  (Roth et al., 2008) , while the DA portion is ATB-tokenized with MADA-ARZ . The Arabic text is also Alif/Ya normalized. For more details on processing Arabic, see  (Habash, 2010) . MT Train/Tune/Test Data. We have two parallel corpora. The first is a DA-English corpus of 5M tokenized words of Egyptian (?3.5M) and Levantine (?1.5M). This corpus is part of BOLT data. The second is an MSA-English corpus of 57M tokenized words obtained from several LDC corpora (10 times the size of the DA-English data). We work with eight standard MT test sets: three MSA sets from NIST MTEval with four references (MT06, MT08, and MT09), four Egyptian sets from LDC BOLT data with two references (EgyDevV1, EgyDevV2, EgyDevV3, and EgyTestV2), and one Levantine set from BBN  (Zbib et al., 2012)  with one reference which we split into LevDev and LevTest. We used MT08 and EgyDevV3 to tune SMT systems while we divided the remaining sets among classifier training data (5,562 sentences), dev (1,802 sentences) and blind test (1,804 sentences) sets to ensure each of these new sets has a variety of dialects and genres (weblog and newswire). MT Systems. We build four MT systems. (1) DA-Only. This system is trained on the DA-English data and tuned on EgyDevV3. (2) MSA-Only. This system is trained on the MSA-English data and tuned on MT08. (3) DA+MSA. This system is trained on the combination of both corpora (resulting in 62M tokenized 2 words on the Arabic side) and tuned on EgyDevV3. (4) MSA-Pivot. This MSA-pivoting system uses Salloum and Habash (2013)'s DA-MSA MT system followed by an Arabic-English SMT system which is trained on both corpora augmented with the DA-English where the DA side is preprocessed with the same DA-MSA MT system then tokenized with MADA-ARZ. The result is 67M tokenized words on the Arabic side. EgyDevV3 was similarly preprocessed with the DA-MSA MT system and MADA-ARZ and used for tuning the system parameters. Test sets are similarly preprocessed before decoding with the SMT system. Baseline MT System Results. We report the results of our dev set on the four MT systems we built in Table  1 . The MSA-Pivot system produces the best singleton result among all systems. All differences in BLEU scores between the four systems are statistically significant above the 95% level. Statistical significance is computed using paired bootstrap re-sampling  (Koehn, 2004) . Oracle System Selection. We also report in Table 1 an oracle system selection where we pick, for each sentence, the English translation that yields the best BLEU score. This oracle indicates that the upper bound for improvement achievable from system selection is 5.4% BLEU. Excluding different systems from the combination lowered the overall score between 0.9% and 1.8%, suggesting the systems are indeed complementary. 

 MT System Selection The approach we take in this paper benefits from the techniques and conclusions of previous papers in that we build different MT systems similar to those discussed above but instead of trying to find which one is the best, we try to leverage the use of all of them by automatically deciding what sentences should go to which system. Our hypothesis is that these systems complement each other in interesting ways where the combination of their selections could lead to better overall performance stipulating that our approach could benefit from the strengths while avoiding the weaknesses of each individual system. 

 Dialect ID Binary Classification For baseline system selection, we use the classification decision of 's sentence-level dialect identification system to decide on the target MT system. Since the decision is binary (DA or MSA) and we have four MT systems, we considered all possible configurations and determined empirically that the best configuration is to select MSA-Only for the MSA tag and MSA-Pivot for the DA tag. We do not report other configuration results due to space restrictions. 

 Feature-based Four-Class Classification For our main approach, we train a four-class classifier to predict the target MT system to select for each sentence using only source-language features. We experimented with different classifiers in the Weka Data Mining Tool  (Hall et al., 2009)  for training and testing our system selection approach. The best performing classifier was Naive Bayes (with Weka's default settings). Training Data Class Labels. We run the 5,562 sentences of the classification training data through our four MT systems and produce sentence-level BLEU scores (with length penalty). We pick the name of the MT system with the highest BLEU score as the class label for that sentence. When there is a tie in BLEU scores, we pick the system label that yields better overall BLEU scores from the systems tied. Training Data Source-Language Features. We use two sources of features extracted from untokenized sentences to train our four-class classifiers: basic and extended features. A. Basic Features These are the same set of features that were used by the dialect ID tool together with the class label generated by this tool. i. Token-Level Features. These features rely on language models, MSA and Egyptian morphological analyzers and a Highly Dialectal Egyptian lexicon to decide whether each word is MSA, Egyptian, Both, or Out of Vocabulary. ii. Perplexity Features. These are two features that measure the perplexity of a sentence against two language models: MSA and Egyptian. iii. Meta Features. Features that do not directly relate to the dialectalness of words in the given sentence but rather estimate how informal the sentence is and include: percentage of tokens, punctuation, and Latin words, number of tokens, average word length, whether the sentence has any words that have word-lengthening effects or not, whether the sentence has any diacritized words or not, whether the sentence has emoticons or not, whether the sentence has consecutive repeated punctuation or not, whether the sentence has a question mark or not, and whether the sentence has an exclamation mark or not. iv. The Dialect-Class Feature. We run the sentence through the Dialect ID binary classifier and we use the predicted class label (DA or MSA) as a feature in our system. Since the Dialect ID system was trained on a different data set, we think its decision may provide additional information to our classifiers. B. Extended Features We add features extracted from two sources. i. MSA-Pivoting Features. Salloum and Habash (2013) DA-MSA MT system produces intermediate files used for diagnosis or debugging purposes. We exploit one file in which the system identifies (or, "selects") dialectal words and phrases that need to be translated to MSA. We extract confidence indicating features. These features are: sentence length (in words), percentage of selected words and phrases, number of selected words, number of selected phrases, number of words morphologically selected as dialectal by a mainly Levantine morphological analyzer, number of words selected as dialectal by the tool's DA-MSA lexicons, number of OOV words against the MSA-Pivot system training data, number of words in the sentences that appeared less than 5 times in the training data, number of words in the sentences that appeared between 5 and 10 times in the training data, number of words in the sentences that appeared between 10 and 15 times in the training data, number of words that have spelling errors and corrected by this tool (e.g., word-lengthening), number of punctuation marks, and number of words that are written in Latin script. ii. MT Training Data Source-Side LM Perplexity Features. The second set of features uses perplexity against language models built from the source-side of the training data of each of the four baseline systems. These four features may tell the classifier which system is more suitable to translate a given sentence. 

 System Selection Evaluation Development Set. The first part of Table  2  repeats the best baseline system and the four-system oracle combination from Table  1  for convenience. The third row shows the result of running our system selection baseline that uses the Dialect ID binary decision on the Dev set sentences to decide on the target MT system. It improves over the best single system baseline (MSA-Pivot) by a statistically significant 0.5% BLEU. Crucially, we should note that this is a deterministic process. The second part of Table  2  shows the results of our four-class Naive Bayes classifiers trained on the classification training data we created. The first column shows the source of sentence level features employed. As mentioned earlier, we use the Basic features alone, the Extended features alone, and then their combination. The classifier that uses both feature sources simultaneously as feature vectors is our best performer. It improves over our best baseline single MT system by 1.3% BLEU and over the Dialect ID Binary Classification system selection baseline by 0.8% BLEU. Improvements are statistically significant.  5 Discussion and Error Analysis DA versus MSA Performance. In Table  4 , column All illustrates the results over the entire Dev set, while columns DA and MSA show system performance on the DA and MSA subsets of the Dev set, respectively. The best single baseline MT system for DA is MSA-Pivot has a large room for improvement given the oracle upper bound (4.8% BLEU absolute). However, our best system selection approach improves over MSA-Pivot by a small margin of 0.2% BLEU absolute only, albeit a statistically significant improvement. The MSA column oracle shows a smaller improvement of 2.1% BLEU absolute over the best single MSA-Only MT system. Furthermore, when translating MSA with our best system selection performer we get the same results as the best baseline MT system for MSA even though our system does not know the dialect of the sentences a priori. If we consider the breakdown of the performance in our best overall (33.9% BLEU) single baseline MT system (MSA-Pivot), we observe that the performance on MSA is about 3.6% absolute BLEU points below our best results; this suggests that most of the system selection gain over the best single baseline is on MSA selection. Manual Error Analysis. We performed manual error analysis on a Dev set sample of 250 sen-tences distributed among the different dialects and genres. Our best performing classifier selected the best system in 48% of the DA cases and 52% of the MSA cases. We did a detailed manual error analysis for the cases where the classifier failed to predict the best MT system. The sources of errors we found cover 89% of the cases. In 21% of the error cases, our classifier predicted a better translation than the one considered gold by BLEU due to BLEU bias, e.g., severe sentence-level length penalty due to an extra punctuation in a short sentence. Also, 3% of errors are due to bad references, e.g., a dialectal sentence in an MSA set that the human translators did not understand. A group of error sources resulted from MSA sentences classified correctly as MSA-Only; however, one of the other three systems produced better translations for two reasons. First, since the MSA training data is from an older time span than the DA data, 10% of errors are due to MSA sentences that use recent terminology (e.g., Egyptian revolution 2011: places, politicians, etc.) that appear in the DA training data. Also, web writing styles in MSA sentences such as blog style (e.g., rhetorical questions), blog punctuation marks (e.g., "..", "???!!"), and formal MSA forum greetings resulted in 23%, 16%, and 6% of the cases, respectively. Finally, in 10% of the cases our classifier is confused by a code-switched sentence, e.g., a dialectal proverb in an MSA sentence or a weak MSA literal translation of dialectal words and phrases. Some of these cases may be solved by adding more features to our classifier, e.g., blog style writing features, while others need a radical change to our technique such as word and phrase level dialect identification for MT system combination of code-switched sentences. 

 Conclusion and Future Work We presented a sentence-level classification approach for MT system selection for diglossic languages. We got a 1.0% BLEU improvement over the best baseline single MT system. In the future we plan to add more training data to see the effect on the accuracy of system selection. We plan to give different weights to different training examples based on the drop in BLEU score the example can cause if classified incorrectly. We also plan to explore confusion-network combination and reranking techniques based on target language features. Table 1 : 1 Results System Training Data (TD) BLEU Name DA-En MSA-En DA T -En TD Size 1. DA-Only 5M 5M 26.6 2. MSA-Only 57M 57M 32.7 3. DA+MSA 5M 57M 62M 33.6 4. MSA-Pivot 5M 57M 5M 67M 33.9 Oracle System Selection 39.3 from the baseline MT systems and their oracle system selection. The training data west used in different MT systems are also indicated. DA T (in the fourth column) is the DA part of the 5M word DA-En parallel data processed with the DA-MSA MT system. 
