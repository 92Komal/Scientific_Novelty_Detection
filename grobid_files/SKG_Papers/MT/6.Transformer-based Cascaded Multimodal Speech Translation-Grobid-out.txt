title
Transformer-based Cascaded Multimodal Speech Translation

abstract
This paper describes the cascaded multimodal speech translation systems developed by Imperial College London for the IWSLT 2019 evaluation campaign. The architecture consists of an automatic speech recognition (ASR) system followed by a Transformer-based multimodal machine translation (MMT) system. While the ASR component is identical across the experiments, the MMT model varies in terms of the way of integrating the visual context (simple conditioning vs. attention), the type of visual features exploited (pooled, convolutional, action categories) and the underlying architecture. For the latter, we explore both the canonical transformer [1] and its deliberation version [2] with additive and cascade variants which differ in how they integrate the textual attention. Upon conducting extensive experiments, we found that (i) the explored visual integration schemes often harm the translation performance for the transformer and additive deliberation, but considerably improve the cascade deliberation; (ii) the transformer and cascade deliberation integrate the visual modality better than the additive deliberation, as shown by the incongruence analysis.

Introduction The recently introduced How2 dataset  [3]  has stimulated research around multimodal language understanding through the availability of 300h instructional videos, English subtitles and their Portuguese translations. For example,  [4]  successfully demonstrates that semantically rich action-based visual features are helpful in the context of machine translation (MT), especially in the presence of input noise that manifests itself as missing source words. Therefore, we hypothesize that a speech-to-text translation (STT) system may also benefit from the visual context, especially in the traditional cascaded framework  [5, 6]  where noisy automatic transcripts are obtained from an automatic speech recognition system (ASR) and further translated into the target language using a machine translation (MT) component. The dataset enables the design of such multimodal STT systems, since we have access to a bilingual corpora as well as the corresponding audio-visual stream. Hence, in this paper, we propose a cascaded multimodal STT with two components: (i) an English ASR system trained on the How2 dataset and (ii) a transformer-based  [1]  visually grounded MMT system. MMT is a relatively new research topic which is interested in leveraging auxiliary modalities such as audio or vision in order to improve translation performance  [7] . MMT has proved effective in scenarios such as for disambiguation  [8]  or when the source sentences are corrupted  [9] . So far, MMT has mostly focused on integrating visual features into neural MT (NMT) systems using visual attention through convolutional feature maps  [10, 11]  or visual conditioning of encoder/decoder blocks through fully-connected features  [12, 13, 14, 15] . Inspired by previous research in MMT, we explore several multimodal integration schemes using action-level video features. Specifically, we experiment with visually conditioning the encoder output and adding visual attention to the decoder. We further extend the proposed schemes to the deliberation variant  [2]  of the canonical transformer in two ways: additive and cascade multimodal deliberation, which are distinct in their textual attention regimes. Overall, the results show that multimodality in general leads to performance degradation for the canonical transformer and the additive deliberation variant, but can result in substantial improvements for the cascade deliberation. Our incongruence analysis  [16]  reveals that the transformer and cascade deliberation are more sensitive to and therefore more reliant on visual features for translation, whereas the additive deliberation is much less impacted. We also observe that incongruence sensitivity and translation performance are not necessarily correlated. 

 Methods In this section, we briefly describe the proposed multimodal speech translation system and its components. 

 Automatic Speech Recognition The baseline ASR system that we use to obtain English transcripts is an attentive sequence-to-sequence architecture with a stacked encoder of 6 bidirectional LSTM layers  [17] . Each LSTM layer is followed by a tanh projection layer. The mid-dle two LSTM layers apply a temporal subsampling  [18]  by skipping every other input, reducing the length of the sequence X from T to T /4. All LSTM and projection layers have 320 hidden units. The forward-pass of the encoder produces the source encodings on top of which attention will be applied within the decoder. The hidden and cell states of all LSTM layers are initialized with 0. The decoder is a 2-layer stacked GRU  [19] , where the first GRU receives the previous hidden state of the second GRU in a transitional way. GRU layers, attention layer and embeddings have 320 hidden units. We share the input and output embeddings to reduce the number of parameters  [20] . At timestep t=0, the hidden state of the first GRU is initialized with the average-pooled source encoding states. 

 Deliberation-based NMT A human translator typically produces a translation draft first, and then refines it towards the final translation. The idea behind the deliberation networks  [21]  simulates this process by extending the conventional attentive encoderdecoder architecture  [22]  with a second pass refinement decoder. Specifically, the encoder first encodes a source sentence of length N into a sequence of hidden states H = {h 1 , h 2 , . . . , h N } on top of which the first pass decoder 1P applies the attention. The pre-softmax hidden states {? 1 , ?2 , . . . , ?M } produced by the decoder leads to a first pass translation {? 1 , ?2 , . . . , ?M }. The second pass decoder 2P intervenes at this point and generates a second translation by attending separately to both H and the concatenated state vectors {[? 1 ; ?1 ], [? 2 ; ?2 ], . . . , [? M ; ?M ]}. Two context vectors are produced as a result, and they are joint inputs with s t?1 (previous hidden state of 2P) and y t?1 (previous output of 2P) to 2P to yield s t and then y t . A transformer-based deliberation architecture is proposed by  [2] . It follows the same two-pass refinement process, with every second-pass decoder block attending to both the encoder output H and the first-pass pre-softmax hidden states ?. However, it differs from  [21]  in that the actual first-pass translation ? is not used for the second-pass attention. 

 Multimodality 

 Visual Features We experiment with three types of video features, namely average-pooled vector representations (AvgPool), convolutional layer outputs (Conv), and Ten-Hot action category embeddings (Emb). The AvgPool features are provided by the How2 dataset using the following approach: a video is segmented into smaller parts of 16 frames each, and the segments are fed to a 3D ResNeXt-101 CNN  [23] , trained to recognise 400 action classes  [24] . The 2048-D fullyconnected features are then averaged across the segments to obtain a single AvgPool feature vector for the overall video. In order to obtain the Conv features, 16 equi-distant frames are sampled from a video, and they are then used as input to an inflated 3D ResNet-50 CNN  [25]  fine-tuned on the Moments in Time action video dataset. The CNN hence takes in a video and classifies it into one of 339 categories. The Conv features, taken at the CONV 4 layer of the network, has a 7 ? 7 ? 2048 dimensionality. Higher-level semantic information can be more helpful than convolutional features. We apply the same CNN to a video as we do for Conv features, but this time the focus is on the softmax layer output: we process the embedding matrix to keep the 10 most probable category embeddings intact while zeroing out the remaining ones. We call this representation ten-hot action category embeddings (Emb). 

 Integration Approaches 

 Encoder with Additive Visual Conditioning (Enc-Cond) In this approach, inspired by  [8] , we add a projection of the visual features to each output of the vanilla transformer encoder (Enc-Van). This projection is strictly linear from the 2048-D AvgPool features to the 1024-D space in which the self attention hidden states reside, and the projection matrix is learned jointly with the translation model. 

 Decoder with Visual Attention (Dec-Attn) In order to accommodate attention to visual features at the decoder side and inspired by  [26] , we insert one layer of visual cross attention at a decoder block immediately before the fully-connected layer. We name the transformer decoder with such an extra layer as Trans-Dec-Attn, where this layer is immediately after the textual attention to the encoder output. Specifically, we experiment with attention to Conv, Emb and AvgPool features separately. The visual attention is distributed across the 49 video regions in Conv, the 339 action category word embeddings in Emb, or the 32 rows in AvgPool where we reshape the 2048-D AvgPool vector into a 32 ? 64 matrix. 

 Multimodal Transformers The vanilla text-only transformer (Trans-Baseline) is used as a baseline, and we design two variants: with additive visual conditioning (Trans-Cond) and with attention to visual features (Trans-Attn). A Trans-Cond features a Enc-Cond and a vanilla transformer decoder (Dec-Van), therefore utilising visual information only at the encoder side. In contrast, a Trans-Attn is configured with a Enc-Van and a Trans-Dec-Attn, exploiting visual cues only at the decoder. Figure  1  summarises the two approaches.  

 Multimodal Deliberation Our multimodal deliberation models differ from each other in two ways: whether to use additive (A)  [8]  or cascade (C) textual deliberation to integrate the textual attention to the original input and to the first pass, and whether to employ visual attention (Delib-Attn) or additive visual conditioning (Delib-Cond) to integrate the visual features into the textual MT model. Figures  2 and 3  show the configurations of our additive and cascade deliberation models, respectively, each also showing the connections necessary for Delib-Cond and Delib-Attn. 

 Additive (A) & Cascade (C) Textual Deliberation In an additive-deliberation second-pass decoder (A-Delib-2P) block, the first layer is still self-attention, whereas the second layer is the addition of two separate attention sub-layers. The first sub-layer attends to the encoder output in the same way Dec-Van does, while the attention of the second sub-layer is distributed across the concatenated first pass outputs and hidden states. The input to both sublayers is the output of the self-attention layer, and the outputs of the sub-layers are summed as the final output and then (with a residual connection) fed to the visual attention layer if the decoder is multimodal or to the fully connected layer otherwise. For the cascade version, the only difference is that, instead of two sub-layers, we have two separate, successive layers with the same functionalities. It is worth mentioning that we introduce the attention to the first pass only at the initial three decoder blocks out of the total six of the second pass decoder (Delib-2P), following  [8] . 

 Additive Visual Conditioning (Delib-Cond) & Visual Attention (Delib-Attn) Delib-Cond and Delib-Attn are simply applying Enc-Cond and Dec-Attn respectively to a deliberation model, therefore more details have been introduced in Section 2.3.2. For Delib-Cond, similar to in Trans-Cond, we add a projection of the visual features to the output of Enc-Van, and use Dec-Van as the first pass decoder and either additive or cascade deliberation as the Delib-2P. For Delib-Attn, in a similar vein as Trans-Attn, the encoder in this setting is simply Enc-Van and the first pass decoder is just Dec-Van, but this time Delib-2P is responsible for attending to the first pass output as well as the visual features. For both additive and cascade deliberation, a visual attention layer is inserted immediately before the fullyconnected layer, so that the penultimate layer of a decoder block now attends to visual information. 

 Experiments 

 Dataset We stick to the default training/validation/test splits and the pre-extracted speech features for the How2 dataset, as provided by the organizers. As for the pre-processing, we low-  ercase the sentences and then tokenise them using Moses  [27] . We then apply subword segmentation  [28]  by learning separate English and Portuguese models with 20,000 merge operations each. The English corpus used when training the subword model consists of both the ground-truth video subtitles and the noisy transcripts produced by the underlying ASR system. We do not share vocabularies between the source and target domains. Finally for the post-processing step, we merge the subword tokens, apply recasing and detokenisation. The recasing model is a standard Moses baseline trained again on the parallel How2 corpus. The baseline ASR system is trained on the How2 dataset as well. This system is then used to obtain noisy transcripts for the whole dataset, using beam-search with beam size of 10. The pre-processing pipeline for the ASR is different from the MT pipeline in the sense that the punctuations are removed and the subword segmentation is performed using Senten-cePiece  [29]  with a vocabulary size of 5,000. The test-set performance of this ASR is around 19% WER. 

 Training We train our transformer and deliberation models until convergence largely with transformer big hyperparameters: 16 attention heads, 1024-D hidden states and a dropout of 0.1. During inference, we apply beam-search with beam size of 10. For deliberation, we first train the underlying transformer model until convergence, and use its weights to initialise the encoder and the first pass decoder. After freezing those weights, we train Delib-2P until convergence. The reason for the partial freezing is that our preliminary experiments showed that it enabled better performance compared to updating the whole model. Following  [21] , we obtain 10-best samples from the first pass with beam-search for source augmentation during the training of Delib-2P. We train all the models on an Nvidia RTX 2080Ti with a batch size of 1024, a base learning rate of 0.02 with 8,000 warm-up steps for the Adam  [30]  optimiser, and a patience of 10 epochs for early stopping based on approx-BLEU (tensor2tensor) for the transformers and 3 epochs for the deliberation models. After the training finishes, we evaluate all the checkpoints on the validation set and compute the real BLEU  [31]  scores, based on which we select the best model for inference on the test set. The transformer and the deliberation models are based upon the tensor2tensor 1 library  [32]  (v1.3.0 RC1) as well as the vanilla transformerbased deliberation 2  [21]  and their multimodal variants 3  [8] . 

 Results & Analysis 

 Quantitative Results We report tokenised results obtained using the multeval toolkit  [33] . We focus on single system performance and thus, do not perform any ensembling or checkpoint averaging. For additive deliberation (A-Delib), the performance variation is considerably larger: Attn-AvgPool and Baseline take the lead with 37.6 BLEU, but the next best system (Attn-Conv) plunges to 37.2. The other two (Cond-AvgPool & Attn-Emb) also have noticeably worse results (36.0 and 37.0). Overall, however, A-Delib is still similar to the transformers in that the baseline generally yields higher-quality translations. Cascade deliberation, on the other hand, is different in that its text-only baseline is outperformed by most of its multimodal counterparts. Multimodality enables boosts as large as around 1 BLEU point in the cases of Attn-AvgPool and Attn-Emb, both of which achieve about 37.4 BLEU and are significantly different from the baseline. Another observation is that the deliberation models as a whole lead to worse performance than the canonical transformers, with BLEU deterioration ranging from 2.3 (across Attn-AvgPool variants) to 3.5 (across Cond-AvgPool systems), which defies the findings of  [8] . We leave this to future investigations. 

 Incongruence Analysis To further probe the effect of multimodality, we follow the incongruent decoding approach  [16] , where our multimodal models are fed with mismatched visual features. The general assumption is that a model will have learned to exploit visual information to help with its translation, if it shows substantial performance degradation when given wrong visual features. The results are reported in Table  2 . Overall, there are considerable parallels between the trans-  CO N D -AV GPO O L ? 0.5 ? ? 0.1 ? 0.6 ? AT T N -AV GPO O L ? 0.3 0 ? 0.1 AT T N -EM B ? 0.4 ? ? 0.1 ? 0.2 ? AT T N -CO N V ? 0.1 ? 0.2 ? 0.2 formers and the cascade deliberation models in terms of the incongruence effect, such as universal performance deterioration (ranging from 0. Therefore, the determination can be made that Trans and C-Delib models are considerably more sensitive to incorrect visual information than A-Delib, which means the former better utilise visual clues during translation. Interestingly, the extent of performance degradation caused by incongruence is not necessarily correlated with the congruent BLEU scores. For example, Trans-Attn-Conv is on par with Trans-Attn-Emb in congruent decoding (differing by around 0.1 BLEU), but the former suffers only a 0.1-BLEU loss with incongruence whereas the figure for the latter is 0.4, in addition to the fact that the latter becomes significantly different after incongruent decoding. This means that some multimodal models that are sensitive to incongruence likely complement visual attention with textual attention but without getting higher-quality translation as a result. The differences between the multimodal behaviour of additive and cascade deliberation also warrant more investigation, since the two types of deliberation are identical in their utilisation of visual features and only vary in their handling of the textual attention to the outputs of the encoder and the first pass decoder. 

 Conclusions We explored a series of transformers and deliberation based models to approach cascaded multimodal speech translation as our participation in the How2-based speech translation task of IWSLT 2019. We submitted the Trans-Attn-Conv system, which is a canonical transformer with visual atten-tion over the convolutional features, as our primary system with the remaining ones marked as contrastive ones. The primary system obtained a BLEU of 39.63 on the public IWSLT19 test set, whereas Trans-Baseline, the top contrastive system on the same set, achieved 39.85. Our main conclusions are as follows: (i) the visual modality causes varying levels of translation quality damage to the transformers and additive deliberation, but boosts cascade deliberation; (ii) the multimodal transformers and cascade deliberation show performance degradation due to incongruence, but additive deliberation is not as affected; (iii) there is no strict correlation between incongruence sensitivity and translation performance. Figure 1 : 1 Figure 1: Unimodal and multimodal transformers: Trans-Cond and the Trans-Attn extend the text-only Trans-Baseline with dashed green-and blue-arrow routes, respectively. Each multimodal model activates either the dashed green-arrow route for Trans-Cond or one of the three dashed blue-arrow routes (i.e. VideoSum, Action Category Embeddings or Convolutional Layer Output, as shown) for Trans-Attn. 

 Figure 2 : 2 Figure 2: Unimodal and multimodal additive deliberation: Delib-Cond and Delib-Attn extend the text-only Delib-Baseline with dashed green-and blue-arrow routes, respectively. Each multimodal model activates either the dashed greenarrow route for Delib-Cond or one of the three dashed blue-arrow routes (i.e. VideoSum, Action Category Embeddings or Convolutional Layer Output, as shown) for Delib-Attn. 

 Figure 3 : 3 Figure 3: Unimodal and multimodal cascade deliberation: Delib-Cond and Delib-Attn extend the text-only Delib-Baseline with dashed green-and blue-arrow routes, respectively. Each multimodal model activates either the dashed greenarrow route for Delib-Cond or one of the three dashed blue-arrow routes (i.e. VideoSum, Action Category Embeddings or Convolutional Layer Output, as shown) for Delib-Attn. 

 Table 1 : 1 BLEU scores for the test set: bold highlights our best results. ? indicates a system is significantly different from its text-only counterpart (p-value ? 0.05).The BLEU scores of the models are shown in Table1. Evident from the table is that the best models overall are Trans-Baseline and Trans-Attn-Conv with a BLEU score of 39.8, and the other multimodal transformers have slightly worse performance, showing score drops around 0.1. Also, none of the multimodal transformer systems are significantly different from the baseline, which is a sign of the limited extent to which visual features affect the output. SETUP TR A N S A-DE L I B C-DE L I B BA S E L I N E 39.8 37.6 36.4 CO N D -AV GPO O L 39.7 36.0  ? 36.2 AT T N -AV GPO O L 39.7 37.6 37.4  ? AT T N -EM B 39.7 37.0  ? 37.3  ? AT T N -CO N V 39.8 37.2 37.0 

 Table 2 : 2 Incongruent decoding results for the test set: BLEU changes are w.r.t the congruent counterparts from Table 1. ? marks incongruent decoding results that are significantly different (p-value ? 0.05) from congruent counterparts. SETUP TR A N S A-DE L I B C-DE L I B 

 1 to 0.6 BLEU) and more noticeable score changes (? 0.5 BLEU for Trans-Cond-AvgPool and ? 0.6 BLEU for C-Delib-Cond-AvgPool) in the Cond-AvgPool setting compared to the other scenarios. Additive deliberation, however, manifests a drastically different pattern, showing almost no incongruence effect for Attn-AvgPool, only a 0.2 BLEU decrease for Attn-Conv, and even a 0.1 BLEU boost for Attn-Emb and Cond-AvgPool. 

			 https://github.com/tensorflow/tensor2tensor 2 https://github.com/ustctf/delibnet 3 https://github.com/ImperialNLP/MMT-Delib
