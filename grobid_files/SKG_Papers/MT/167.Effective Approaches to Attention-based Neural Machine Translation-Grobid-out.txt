title
Effective Approaches to Attention-based Neural Machine Translation

abstract
An attentional mechanism has lately been used to improve neural machine translation (NMT) by selectively focusing on parts of the source sentence during translation. However, there has been little work exploring useful architectures for attention-based NMT. This paper examines two simple and effective classes of attentional mechanism: a global approach which always attends to all source words and a local one that only looks at a subset of source words at a time. We demonstrate the effectiveness of both approaches on the WMT translation tasks between English and German in both directions. With local attention, we achieve a significant gain of 5.0 BLEU points over non-attentional systems that already incorporate known techniques such as dropout. Our ensemble model using different attention architectures yields a new state-of-the-art result in the WMT'15 English to German translation task with 25.9 BLEU points, an improvement of 1.0 BLEU points over the existing best system backed by NMT and an n-gram reranker. 1

Introduction Neural Machine Translation (NMT) achieved state-of-the-art performances in large-scale translation tasks such as from English to French  (Luong et al., 2015)  and English to German  (Jean et al., 2015) . NMT is appealing since it requires minimal domain knowledge and is conceptually simple. The model by  Luong et al. (2015)  reads through all the source words until the end-of-sentence symbol <eos> is reached. It then starts emitting one target word at a time, as illustrated in Figure  1 . NMT 1 All our code and models are publicly available at http: //nlp.stanford.edu/projects/nmt. is often a large neural network that is trained in an end-to-end fashion and has the ability to generalize well to very long word sequences. This means the model does not have to explicitly store gigantic phrase tables and language models as in the case of standard MT; hence, NMT has a small memory footprint. Lastly, implementing NMT decoders is easy unlike the highly intricate decoders in standard MT  (Koehn et al., 2003) . In parallel, the concept of "attention" has gained popularity recently in training neural networks, allowing models to learn alignments between different modalities, e.g., between image objects and agent actions in the dynamic control problem  (Mnih et al., 2014) , between speech frames and text in the speech recognition task  (Chorowski et al., 2014) , or between visual features of a picture and its text description in the image caption generation task  (Xu et al., 2015) . In the context of NMT,  Bahdanau et al. (2015)  has successfully applied such attentional mechanism to jointly translate and align words. To the best of our knowledge, there has not been any other work exploring the use of attention-based architectures for NMT. In this work, we design, with simplicity and effectiveness in mind, two novel types of attention-based models: a global approach in which all source words are attended and a local one whereby only a subset of source words are considered at a time. The former approach resembles the model of  (Bahdanau et al., 2015)  but is simpler architecturally. The latter can be viewed as an interesting blend between the hard and soft attention models proposed in  (Xu et al., 2015) : it is computationally less expensive than the global model or the soft attention; at the same time, unlike the hard attention, the local attention is differentiable, making it easier to implement and train.  2  Besides, we also examine various alignment functions for our attention-based models. Experimentally, we demonstrate that both of our approaches are effective in the WMT translation tasks between English and German in both directions. Our attentional models yield a boost of up to 5.0 BLEU over non-attentional systems which already incorporate known techniques such as dropout. For English to German translation, we achieve new state-of-the-art (SOTA) results for both WMT'14 and WMT'15, outperforming previous SOTA systems, backed by NMT models and n-gram LM rerankers, by more than 1.0 BLEU. We conduct extensive analysis to evaluate our models in terms of learning, the ability to handle long sentences, choices of attentional architectures, alignment quality, and translation outputs. 

 Neural Machine Translation A neural machine translation system is a neural network that directly models the conditional probability p(y|x) of translating a source sentence, x 1 , . . . , x n , to a target sentence, y 1 , . . . , y m . 3 A basic form of NMT consists of two components: (a) an encoder which computes a representation s for each source sentence and (b) a decoder which generates one target word at a time and hence decomposes the conditional probability as: log p(y|x) = m j=1 log p (y j |y <j , s) (1) A natural choice to model such a decomposition in the decoder is to use a recurrent neural network (RNN) architecture, which most of the re-2 There is a recent work by  Gregor et al. (2015) , which is very similar to our local attention and applied to the image generation task. However, as we detail later, our model is much simpler and can achieve good performance for NMT. 3 All sentences are assumed to terminate with a special "end-of-sentence" token <eos>. cent NMT work such as  (Kalchbrenner and Blunsom, 2013; Sutskever et al., 2014; Bahdanau et al., 2015; Luong et al., 2015; Jean et al., 2015)  have in common. They, however, differ in terms of which RNN architectures are used for the decoder and how the encoder computes the source sentence representation s.  Kalchbrenner and Blunsom (2013)  used an RNN with the standard hidden unit for the decoder and a convolutional neural network for encoding the source sentence representation. On the other hand, both  Sutskever et al. (2014)  and  Luong et al. (2015)  stacked multiple layers of an RNN with a Long Short-Term Memory (LSTM) hidden unit for both the encoder and the decoder. ,  Bahdanau et al. (2015) , and  Jean et al. (2015)  all adopted a different version of the RNN with an LSTM-inspired hidden unit, the gated recurrent unit (GRU), for both components.  4  In more detail, one can parameterize the probability of decoding each word y j as: p (y j |y <j , s) = softmax (g (h j )) (2) with g being the transformation function that outputs a vocabulary-sized vector.  5  Here, h j is the RNN hidden unit, abstractly computed as: h j = f (h j?1 , s), (3) where f computes the current hidden state given the previous hidden state and can be either a vanilla RNN unit, a GRU, or an LSTM unit. In  (Kalchbrenner and Blunsom, 2013; Sutskever et al., 2014; Luong et al., 2015) , the source representation s is only used once to initialize the decoder hidden state. On the other hand, in  (Bahdanau et al., 2015; Jean et al., 2015)  and this work, s, in fact, implies a set of source hidden states which are consulted throughout the entire course of the translation process. Such an approach is referred to as an attention mechanism, which we will discuss next. In this work, following  (Sutskever et al., 2014; Luong et al., 2015) , we use the stacking LSTM architecture for our NMT systems, as illustrated in Figure  1 . We use the LSTM unit defined in . Our training objective is formulated as follows: J t = (x,y)?D ? log p(y|x) (4) with D being our parallel training corpus. 

 Attention-based Models Our various attention-based models are classifed into two broad categories, global and local. These classes differ in terms of whether the "attention" is placed on all source positions or on only a few source positions. We illustrate these two model types in Figure  2  and 3 respectively. Common to these two types of models is the fact that at each time step t in the decoding phase, both approaches first take as input the hidden state h t at the top layer of a stacking LSTM. The goal is then to derive a context vector c t that captures relevant source-side information to help predict the current target word y t . While these models differ in how the context vector c t is derived, they share the same subsequent steps. Specifically, given the target hidden state h t and the source-side context vector c t , we employ a simple concatenation layer to combine the information from both vectors to produce an attentional hidden state as follows: ht = tanh(W c [c t ; h t ]) (5) The attentional vector ht is then fed through the softmax layer to produce the predictive distribution formulated as: p(y t |y <t , x) = softmax(W s ht ) (6) We now detail how each model type computes the source-side context vector c t . 

 Global Attention The idea of a global attentional model is to consider all the hidden states of the encoder when deriving the context vector c t . In this model type, a variable-length alignment vector a t , whose size equals the number of time steps on the source side, is derived by comparing the current target hidden state h t with each source hidden state hs : a t (s) = align(h t , hs ) (7) = exp score(h t , hs ) s ? exp score(h t , hs ? ) Here, score is referred as a content-based function for which we consider three different alternatives: Besides, in our early attempts to build attentionbased models, we use a location-based function in which the alignment scores are computed from solely the target hidden state h t as follows: score(h t , hs ) = ? ? ? ? ? h ? t hs dot h ? t W a hs general W a [h t ; hs ] concat ( a t = softmax(W a h t ) location (9) Given the alignment vector as weights, the context vector c t is computed as the weighted average over all the source hidden states.  6  Comparison to  (Bahdanau et al., 2015)  -While our global attention approach is similar in spirit to the model proposed by  Bahdanau et al. (2015) , there are several key differences which reflect how we have both simplified and generalized from the original model. First, we simply use hidden states at the top LSTM layers in both the encoder and decoder as illustrated in Figure  2 .  Bahdanau et al. (2015) , on the other hand, use the concatenation of the forward and backward source hidden states in the bi-directional encoder and target hidden states in their non-stacking uni-directional decoder. Second, our computation path is simpler; we go from h t ? a t ? c t ? ht then make a prediction as detailed in Eq. (  5 ), Eq. (  6  goes through a deep-output and a maxout layer before making predictions. 7 Lastly,  Bahdanau et al. (2015)  only experimented with one alignment function, the concat product; whereas we show later that the other alternatives are better. 

 Local Attention The global attention has a drawback that it has to attend to all words on the source side for each target word, which is expensive and can potentially render it impractical to translate longer sequences, e.g., paragraphs or documents. To address this deficiency, we propose a local attentional mechanism that chooses to focus only on a small subset of the source positions per target word. This model takes inspiration from the tradeoff between the soft and hard attentional models proposed by  Xu et al. (2015)  to tackle the image caption generation task. In their work, soft attention refers to the global attention approach in which weights are placed "softly" over all patches in the source image. The hard attention, on the other hand, selects one patch of the image to attend to at a time. While less expensive at inference time, the hard attention model is non-differentiable and requires more complicated techniques such as variance reduction or reinforcement learning to train.  7  We will refer to this difference again in Section 3.3. Our local attention mechanism selectively focuses on a small window of context and is differentiable. This approach has an advantage of avoiding the expensive computation incurred in the soft attention and at the same time, is easier to train than the hard attention approach. In concrete details, the model first generates an aligned position p t for each target word at time t. The context vector c t is then derived as a weighted average over the set of source hidden states within the window [p t ?D, p t +D]; D is empirically selected.  8  Unlike the global approach, the local alignment vector a t is now fixed-dimensional, i.e., ? R 2D+1 . We consider two variants of the model as below. Monotonic alignment (local-m) -we simply set p t = t assuming that source and target sequences are roughly monotonically aligned. The alignment vector a t is defined according to Eq. (  7 ).  9  Predictive alignment (local-p) -instead of assuming monotonic alignments, our model predicts an aligned position as follows: p t = S ? sigmoid(v ? p tanh(W p h t )), (10) W p and v p are the model parameters which will be learned to predict positions. S is the source sentence length. As a result of sigmoid, p t ? [0, S]. To favor alignment points near p t , we place a Gaussian distribution centered around p t . Specifically, our alignment weights are now defined as: a t (s) = align(h t , hs ) exp ? (s ? p t ) 2 2? 2 (11) We use the same align function as in Eq. (  7 ) and the standard deviation is empirically set as ? = D 2 . It is important to note that p t is a real nummber; whereas s is an integer within the window centered at p t .  10  Comparison to  (Gregor et al., 2015)  -have proposed a selective attention mechanism, very similar to our local attention, for the image generation task. Their approach allows the model to select an image patch of varying location and zoom. We, instead, use the same "zoom" for all target positions, which greatly simplifies the formulation and still achieves good performance.  

 Input-feeding Approach In our proposed global and local approaches, the attentional decisions are made independently, which is suboptimal. Whereas, in standard MT, a coverage set is often maintained during the translation process to keep track of which source words have been translated. Likewise, in attentional NMTs, alignment decisions should be made jointly taking into account past alignment information. To address that, we propose an inputfeeding approach in which attentional vectors ht are concatenated with inputs at the next time steps as illustrated in Figure  4 .  11  The effects of having such connections are two-fold: (a) we hope to make the model fully aware of previous alignment choices and (b) we create a very deep network spanning both horizontally and vertically. Comparison to other work -  Bahdanau et al. (2015)  use context vectors, similar to our c t , in building subsequent hidden states, which can also achieve the "coverage" effect. However, there has not been any analysis of whether such connections are useful as done in this work. Also, our approach is more general; as illustrated in Figure  4 , it can be applied to general stacking recurrent architectures, including non-attentional models.  Xu et al. (2015)  propose a doubly attentional approach with an additional constraint added to the training objective to make sure the model pays equal attention to all parts of the image during the caption generation process. Such a constraint can  11  If n is the number of LSTM cells, the input size of the first LSTM layer is 2n; those of subsequent layers are n. also be useful to capture the coverage set effect in NMT that we mentioned earlier. However, we chose to use the input-feeding approach since it provides flexibility for the model to decide on any attentional constraints it deems suitable. 

 Experiments We evaluate the effectiveness of our models on the WMT translation tasks between English and German in both directions. newstest2013 (3000 sentences) is used as a development set to select our hyperparameters. Translation performances are reported in case-sensitive BLEU  (Papineni et al., 2002)  on newstest2014 (2737 sentences) and new-stest2015 (2169 sentences). Following  (Luong et al., 2015) , we report translation quality using two types of BLEU: (a) tokenized 12 BLEU to be comparable with existing NMT work and (b) NIST 13 BLEU to be comparable with WMT results. 

 Training Details All our models are trained on the WMT'14 training data consisting of 4.5M sentences pairs (116M English words, 110M German words). Similar to  (Jean et al., 2015) , we limit our vocabularies to be the top 50K most frequent words for both languages. Words not in these shortlisted vocabularies are converted into a universal token <unk>. When training our NMT systems, following  (Bahdanau et al., 2015; Jean et al., 2015) , we filter out sentence pairs whose lengths exceed 50 words and shuffle mini-batches as we proceed. Our stacking LSTM models have 4 layers, each with 1000 cells, and 1000-dimensional embeddings. We follow  (Sutskever et al., 2014; Luong et al., 2015)  in training NMT with similar settings: (a) our parameters are uniformly initialized in [?0.1, 0.1], (b) we train for 10 epochs using plain SGD, (c) a simple learning rate schedule is employed -we start with a learning rate of 1; after 5 epochs, we begin to halve the learning rate every epoch, (d) our mini-batch size is 128, and (e) the normalized gradient is rescaled whenever its norm exceeds 5. Additionally, we also use dropout for our LSTMs as suggested by . For dropout models, we train for 12 epochs and start halving the learning rate after 8 epochs. Our code is implemented in MATLAB. When 12 All texts are tokenized with tokenizer.perl and BLEU scores are computed with multi-bleu.perl. 13 With the mteval-v13a script as per WMT guideline. 

 System Ppl BLEU Winning WMT'14 system -phrase-based + large LM  (Buck et al., 2014)  20.7 Existing NMT systems RNNsearch  (Jean et al., 2015)  16.5 RNNsearch + unk replace  (Jean et al., 2015)  19.0 RNNsearch + unk replace + large vocab + ensemble 8 models  (Jean et al., 2015)  21 running on a single GPU device Tesla K40, we achieve a speed of 1K target words per second. It takes 7-10 days to completely train a model. 

 English-German Results We compare our NMT systems in the English-German task with various other systems. These include the winning system in WMT'14  (Buck et al., 2014) , a phrase-based system whose language models were trained on a huge monolingual text, the Common Crawl corpus. For end-to-end neural machine translation systems, to the best of our knowledge,  (Jean et al., 2015)  is the only work experimenting with this language pair and currently the SOTA system. We only present results for some of our attention models and will later analyze the rest in Section 5. As shown in Table  1 , we achieve progressive improvements when (a) reversing the source sentence, +1.3 BLEU, as proposed in  (Sutskever et al., 2014)  and (b) using dropout, +1.4 BLEU. On top of that, (c) the global attention approach gives a significant boost of +2.8 BLEU, making our model slightly better than the base attentional system of  Bahdanau et al. (2015)  (row RNNSearch). When (d) using the input-feeding approach, we seize another notable gain of +1.3 BLEU and outperform their system. The local attention model with predictive alignments (row local-p) proves to be even better, giving us a further improvement of +0.9 BLEU on top of the global attention model. It is interesting to observe the trend previously reported in  (Luong et al., 2015)  that perplexity strongly correlates with translation quality. In total, we achieve a significant gain of 5.0 BLEU points over the non-attentional baseline, which already includes known techniques such as source reversing and dropout. The unknown replacement technique proposed in  (Luong et al., 2015; Jean et al., 2015)  yields another nice gain of +1.9 BLEU, demonstrating that our attentional models do learn useful alignments for unknown works. Finally, by ensembling 8 different models of various settings, e.g., using different attention approaches, with and without dropout etc., we were able to achieve a new SOTA result of 23.0 BLEU, outperforming the existing best system  (Jean et al., 2015)  by +1.4 BLEU. 

 System BLEU SOTA -NMT + 5-gram rerank (MILA) 24.9 Our ensemble 8 models + unk replace 25.9 Table  3 : WMT'15 German-English resultsperformances of various systems (similar to Table  1 ). The base system already includes source reversing on which we add global attention, dropout, input feeding, and unk replacement. tablishes a new SOTA performance of 25.9 BLEU, outperforming the existing best system backed by NMT and a 5-gram LM reranker by +1.0 BLEU. 

 German-English Results We carry out a similar set of experiments for the WMT'15 translation task from German to English. While our systems have not yet matched the performance of the SOTA system, we nevertheless show the effectiveness of our approaches with large and progressive gains in terms of BLEU as illustrated in Table  3 . The attentional mechanism gives us +2.2 BLEU gain and on top of that, we obtain another boost of up to +1.0 BLEU from the input-feeding approach. Using a better alignment function, the content-based dot product one, together with dropout yields another gain of +2.7 BLEU. Lastly, when applying the unknown word replacement technique, we seize an additional +2.1 BLEU, demonstrating the usefulness of attention in aligning rare words. 

 Analysis We conduct extensive analysis to better understand our models in terms of learning, the ability to handle long sentences, choices of attentional architectures, and alignment quality. All models considered here are English-German NMT systems tested on newstest2014. 

 Learning curves We compare models built on top of one another as listed in Table  1 . It is pleasant to observe in proach and the local attention model also demonstrate their abilities in driving the test costs lower. The non-attentional model with dropout (the blue + curve) learns slower than other non-dropout models, but as time goes by, it becomes more robust in terms of minimizing test errors. 

 Effects of Translating Long Sentences We follow  (Bahdanau et al., 2015)   5.9 19 20.9 (+1.9) model can only obtain a small gain when performing unknown word replacement compared to using other alignment functions.  14  For content-based functions, our implementation of concat does not yield good performances and more analysis should be done to understand the reason.  15  It is interesting to observe that dot works well for the global attention and general is better for the local attention. Among the different models, the local attention model with predictive alignments (local-p) is best, both in terms of perplexities and BLEU. 

 Alignment Quality A by-product of attentional models are word alignments. While  (Bahdanau et al., 2015)  visualized alignments for some sample sentences and observed gains in translation quality as an indication of a working attention model, no work has assessed the alignments learned as a whole. In contrast, we set out to evaluate the alignment quality using the alignment error rate (AER) metric. Given the gold alignment data provided by RWTH for 508 English-German Europarl sentences, we "force" decode our attentional models to produce translations that match the references. We extract only one-to-one alignments by selecting the source word with the highest alignment  14  There is a subtle difference in how we retrieve alignments for the different alignment functions. At time step t in which we receive yt?1 as input and then compute ht, at, ct, and ht before predicting yt, the alignment vector at is used as alignment weights for (a) the predicted word yt in the location-based alignment functions and (b) the input word yt?1 in the content-based functions.  15  With concat, the perplexities achieved by different models are 6.7 (global), 7.1 (local-m), and 7.1 (local-p). weight per target word. Nevertheless, as shown in Table  6 , we were able to achieve AER scores comparable to the one-to-many alignments obtained by the Berkeley aligner  (Liang et al., 2006) .  16  We also found that the alignments produced by local attention models achieve lower AERs than those of the global one. The AER obtained by the ensemble, while good, is not better than the local-m AER, suggesting the well-known observation that AER and translation scores are not well correlated  (Fraser and Marcu, 2007) . Due to space constraint, we can only show alignment visualizations in the arXiv version of our paper. 17 

 Method 

 Sample Translations We show in Table  5  sample translations in both directions. It it appealing to observe the effect of attentional models in correctly translating names such as "Miranda Kerr" and "Roger Dow". Non-attentional models, while producing sensible names from a language model perspective, lack the direct connections from the source side to make correct translations. We also observed an interesting case in the second English-German example, which requires translating the doubly-negated phrase, "not incompatible". The attentional model correctly produces "nicht . . . unvereinbar"; whereas the non-attentional model generates "nicht vereinbar", meaning "not compatible".  18  The attentional model also demonstrates its superiority in translating long sentences as in the last example. 

 Conclusion In this paper, we propose two simple and effective attentional mechanisms for neural machine imposed on national economies through adherence to the common currency , has led many people to think Project Europe has gone too far . best Because of the strict austerity measures imposed by Berlin and the European Central Bank in connection with the straitjacket in which the respective national economy is forced to adhere to the common currency , many people believe that the European project has gone too far . base Because of the pressure imposed by the European Central Bank and the Federal Central Bank with the strict austerity imposed on the national economy in the face of the single currency , many people believe that the European project has gone too far . Table  5 : Sample translations -for each example, we show the source (src), the human translation (ref), the translation from our best model (best), and the translation of a non-attentional model (base). We italicize some correct translation segments and highlight a few wrong ones in bold. translation: the global approach which always looks at all source positions and the local one that only attends to a subset of source positions at a time. We test the effectiveness of our models in the WMT translation tasks between English and German in both directions. Our local attention yields large gains of up to 5.0 BLEU over non-attentional models that already incorporate known techniques such as dropout. For the English to German translation direction, our ensemble model has established new state-of-the-art results for both WMT'14 and WMT'15. We have compared various alignment functions and shed light on which functions are best for which attentional models. Our analysis shows that attention-based NMT models are superior to nonattentional ones in many cases, for example in translating names and handling long sentences. Figure 1 : 1 Figure 1: Neural machine translation -a stacking recurrent architecture for translating a source sequence A B C D into a target sequence X Y Z. Here, <eos> marks the end of a sentence. 
