title
Enriching Entity Translation Discovery using Selective Temporality

abstract
This paper studies named entity translation and proposes "selective temporality" as a new feature, as using temporal features may be harmful for translating "atemporal" entities. Our key contribution is building an automatic classifier to distinguish temporal and atemporal entities then align them in separate procedures to boost translation accuracy by 6.1%.

Introduction Named entity translation discovery aims at mapping entity names for people, locations, etc. in source language into their corresponding names in target language. As many new named entities appear every day in newspapers and web sites, their translations are non-trivial yet essential. Early efforts of named entity translation have focused on using phonetic feature (called PH) to estimate a phonetic similarity between two names  (Knight and Graehl, 1998; Li et al., 2004; Virga and Khudanpur, 2003) . In contrast, some approaches have focused on using context feature (called CX) which compares surrounding words of entities  (Fung and Yee, 1998; Diab and Finch, 2000; Laroche and Langlais, 2010) . Recently, holistic approaches combining such similarities have been studied  (Shao and Ng, 2004; You et al., 2010; Kim et al., 2011) .  (Shao and Ng, 2004 ) rank translation candidates using PH and CX independently and return results with the highest average rank.  (You et al., 2010)  compute initial translation scores using PH and iteratively update the scores using relationship feature (called R).  (Kim et al., 2011 ) boost You's approach by additionally leveraging CX. More recent approaches consider temporal feature (called T) of entities in two corpora  (Klementiev and Roth, 2006; Tao et al., 2006;     Kim et al., 2012) . T is computed using frequency vectors for entities and combined with PH  (Klementiev and Roth, 2006; Tao et al., 2006) . ) extend Tao's approach by iteratively updating overall similarities using R.  (Kim et al., 2012)  holistically combine all the features: PH, CX, T, and R. However, T used in previous approaches is a good feature only if temporal behaviors are "symmetric" across corpora. In contrast, Figure  1  illustrates asymmetry, by showing the frequencies of "Usain Bolt," a Jamaican sprinter, and "Hillary Clinton," an American politician, in comparable news articles during the year 2008. The former is mostly mentioned in the context of some temporal events, e.g., Beijing Olympics, while the latter is not. In such case, as Hillary Clinton is a famous female leader, she may be associated with other Chinese female leaders in Chinese corpus, while such association is rarely observed in English corpus, which causes asymmetry. That is, Hillary Clinton is "atemporal," as Figure  1 (b) shows, such that using such dissimilarity against deciding this pair as a correct translation would be harmful. In clear contrast, for Usain Bolt, similarity of temporal dis-tributions in Figure  1 (a) is a good feature for concluding this pair as a correct one. To overcome such problems, we propose a new notion of "selective temporality" (called this feature ST to distinguish from T) to automatically distinguish temporal and atemporal entities. Toward this goal, we design a classifier to distinguish temporal entities from atemporal entities, based on which we align temporal projections of entity graphs for the temporal ones and the entire entity graphs for the atemporal ones. We also propose a method to identify the optimal window size for temporal entities. We validate this "selective" use of temporal features boosts the accuracy by 6.1%. 

 Preliminaries Our approach follows a graph alignment framework proposed in  (You et al., 2010) . Our graph alignment framework consists of 4 steps. 

 Step 1: Graph Construction We first build a graph G = (V, E) from each language corpus, where V is a set of entities (nodes) and E is a set of co-occurrence relationships (unweighted edges) between entities. We consider entities occurring more than ? times as nodes and entity pairs co-occurring more than ? times as edges. To identify entities, we use a CRF-based named entity tagger  (Finkel et al., 2005)  and a Chinese word breaker  (Gao et al., 2003)  for English and Chinese corpora, respectively. 

 Step 2: Initialization Given two graphs G e = (V e , E e ) and G c = (V c , E c ), we initialize |V e |-by-|V c | initial similarity matrix R 0 using PH and CX for every pair (e, c) where e ? V e and c ? V c . For PH, we use a variant of Edit-Distance  (You et al., 2010)  between English entity and a romanized representation of Chinese entity called Pinyin. For CX, the context similarity is computed based on entity context which is defined as a set of words near to the entity (we ignore some words such as stop words and other entities). We compute similarity of the most frequent 20 words for each entity using a variant of Jaccard index. To integrate two similarity scores, we adopt an average as a composite function. We finally compute initial similarity scores for all pairs (e, c) where e ? V e and c ? V c , and build the initial similarity matrix R 0 . 

 Step 3: Reinforcement We reinforce R 0 by leveraging R and obtain a converged matrix R ? using the following model: R t+1 (i,j) = ?R 0 (i,j) + (1 ? ?) ? (u,v) k ?B t (i,j,?) R t (u,v) 2 k This model is a linear combination of (a) the initial similarity R 0 (i,j) of entity pair (i, j) ? V e ? V c and (b) the similarities R t (u,v) of their matched neighbors (u, v) ? V e ? V c where t indicates iteration, B t (i, j, ?) is an ordered set of the matched neighbors, and k is the rank of the matched neighbors. ? is the coefficient for balancing two terms. However, as we cannot assure the correctly matched neighbors (u, v), a chicken-and-egg dilemma, we take advantage of the current similarity R t to estimate the next similarity R t+1 . Algorithm 1 describes the process of matching the neighbors where N (i) and N (j) are the sets of neighbor nodes of i ? V e and j ? V c , respectively, and H is a priority queue sorting the matched pairs in non-increasing order of similarities. To guarantee that the neighbors are correctly matched, we use only the matches such that R t (u,v) ? ?. Algorithm 1 B t (i, j, ?) 1: M ? {}; H ? {} 2: ?u ? N (i), ?v ? N (j) H.push(u, v) such that R t (u,v) ? ? 3: while H is not empty do 4: (u, v) ? H.pop() 5: if neither u nor v are matched yet then 6: M ? M ? {(u, v)} 7: end if 8: end while 9: return M 

 Step 4: Extraction From R ? , we finally extract one-to-one matches by using simple greedy approach of three steps: (1) choosing the pair with the highest similarity score; (2) removing the corresponding row and column from R ? ; (3) repeating (1) and (2) until the matching score is not less than a threshold ?. 

 Entity Translation Discovery using Selective Temporality Overall Framework: We propose our framework by putting together two separate procedures for temporal and atemporal entities to compute the overall similarity matrix R We first build two temporal graphs from the corpora within every time window, optimized in Section 3.1. We then compute the reinforced matrix R ? s obtained from the window starting at the timestamp s. To keep the best match scores among all windows, we update R using the best similarity among ?s, R ? s . we then extract the candidate translation pairs M ours by running step 4. As there can exist atemporal entities in M ours , we classify them (Section 3.2). Specifically, we build two entire graphs and compute R ? . We then distinguish temporal entities from atemporal ones using our proposed metric for each matched pair (i, j) ? M ours and, if the pair is atemporal, R (i,j) is updated as the atemporal similarity R ? (i,j) . From the final matrix R, we extract the matched pairs by running step 4 with R once again. 

 Projecting Graph for Temporal Entities We first project graphs temporally to improve translation quality for temporal entities. As the optimal projection would differ across entities, we generate many projected graphs by shifting time window over all periods, and then identify the best window for each entity. The rest of this section describes how we set the right window size w. Though each entity may have its own optimal w, we find optimizing for each entity may negatively influence on considering relationships with entities of different window sizes. Thus, we instead find the optimal window size ? to maximize the global "symmetry" of the given two graphs. We now define "symmetry" with respect to the truth translation pair M . We note it is infeasible to assume we have M during translation, and will later relax to consider how M can be approximated. Given a set of graph pairs segmented by the shifted windows {(G (0,w) e , G (0,w) c ), ? ? ? , (G (s,s+w) e , G (s,s+w) c ), (G (s+?s,s+?s+w) e , G (s+?s,s+?s+w) c ), ? ? ? }, where s is the time-stamp, our goal is to find the window size ? maximizing the average symmetry S of graph pairs: ? = arg max ?w ( ? s S(G (s,s+w) e , G (s,s+w) c ; M ) N ) Given M , symmetry S can be defined for (1) node and (2) edge respectively. We first define the node symmetry S n as follows: We finally define the symmetry S as the weighted sum of S n and S e with parameter ? (empirically tuned to 0.8 in our experiment). 

 S(G e , G c ; M ) = ?S n (G e , G c ; M ) + (1 ? ?)S e (G e , G c ; M ) However, as it is infeasible to assume we have the truth translation pair M , we approximate M using intermediate translation results M ours computed at step 4. To insert only true positive pairs in M ours , we set threshold higher than the optimized value from the step 4. We found out that symmetry from M ours closely estimates that from M : S(G e , G c ; M ) ? S(G e , G c ; M ours ) Specifically, observe from Table  1  that, given a manually built ground-truth set M g ? M as described in Section 4.1, S(G e , G c ; M ours ) returns the best symmetry value in two weeks for person entities, which is expectedly the same as the result of S(G e , G c ; M g ). This suggests that we can use M ours for optimizing window size.  

 Building Classifier We then classify temporal/atemporal entities. As a first step, we observe their characteristics: Temporal entities have peaks in the frequency distribution of both corpora and these peaks are aligned, while such distribution of atemporal entities are more uniform and less aligned. Based on these observations, we identify the following criteria for temporal entities: (1) Their two distributions m in English corpus and n in Chinese corpus should have aligned peaks. (2) Frequencies at the peaks are the higher the better. For the first criterion, we first normalize the two vectors m and n since two corpora have different scales, i.e., different number of documents. We then calculate the inner product of the two vectors x = ? m, n?, such that this aggregated distribution x peaks, only if both m and n peak at the same time. For the second criterion, we have a spectrum of option from taking the frequencies at all peaks in one extreme, to taking only the maximum frequency in another extreme. A metric representing such a spectrum is p-norm, which represents sum when p = 1 and maximum when p = ?. We empirically tune the right balance to distinguish temporal and atemporal entities, which turns out to be p = 2.2. Overall, we define a metric d(m, n) which satisfies both criteria as follow:  d(m, n) = ( n ? i=1 ( mi ni ) p 

 Experimental Evaluation 

 Experimental Settings We obtained comparable corpora from English and Chinese Gigaword Corpora (LDC2009T13 and LDC2009T27) published by the Xinhua News Agency during the year 2008. From them, we extracted person entities and built two graphs, G e = (V e , E e ) and G c = (V c , E c ) by setting ? = 20 which was used in  (Kim et al., 2011) . Next, we built a ground truth translation pair set M g for person entities. We first selected 500 person names randomly from English corpus. We then hired a Chinese annotator to translate them into their Chinese names. Among them, only 201 person names were matched to our Chinese corpus. We used all such pairs to identify the best parameters and compute the evaluation measures. We implemented and compared the following approaches denoted as the naming convention of listing of the used features in a parenthesis (): ? (PH+R) in  (You et al., 2010) . ? (PH+CX+R) in  (Kim et al., 2011) . ? (PH+CX+R+T) in  (Kim et al., 2012) . ? (PH+CX+R+ST): This is our approach. We evaluated the effectiveness of our new approach using four measures: MRR, precision, recall, and F1-score, where MRR  (Voorhees, 2001)  is the average of the reciprocal ranks of the query results defined as follows: MRR = 1 |Q| ? (u,v)?Q 1 rank (u,v) , where Q is a set of ground-truth matched pairs (u, v) such that u ? V e and v ? V c , and rank (u,v) is the rank of R (u,v) among all R (u,w) 's such that w ? V c . We performed a 5-fold cross validation by dividing ground truth into five groups. We used four groups to training the parameters to maximize F1-scores, used the remaining group as a test-set using trained parameters, and computed average of five results. (bold numbers indicate the best performance for each metric.) 

 Experimental Results 

 Effect of window size We first validated the effectiveness of our approach for various window sizes (Table  2 ). Observe that it shows the best performance in two weeks for MRR and F1 measures. Interestingly, this result also corresponds to our optimization result ? of Table  1  in Section 3.1.  

 Overall performance Table  3  shows the results of four measures. Observe that (PH+CX+R+T) and (PH+CX+R+ST) outperform the others in all our settings. We can also observe the effect of selective temporality, which maximizes the symmetry between two graphs as shown in  outperforms (PH+CX+R+T) by 6.1%. These improvements were statistically significant according to the Student's t-test at P < 0.05 level. Figure  2  shows representative translation examples. All approaches found famous entities such as "Hu Jintao," a former leader of China, but (PH+CX+R) failed to find translation of lesser known entities, such as "Kim Yong Nam." Using temporal features help both (PH+CX+R+T) and (PH+CX+R+ST) identify the right translation, as Kim's temporal occurrence is strong and symmetric in both corpora. In contrast, (PH+CX+R+T) failed to find the translation of "Karzai", the president of Afghanistan, as it only appears weakly and transiently during a short period time, for which only (PH+CX+R+ST) applying varying sizes of window per entity is effective. 

 Conclusion This paper validated that considering temporality selectively is helpful for improving the translation quality. We developed a classifier to distinguish temporal/atemporal entities and our proposed method outperforms the state-of-the-art approach by 6.1%. Figure 1: Illustration on temporality al., 2006; Kim et al., 2012) . T is computed using frequency vectors for entities and combined with PH (Klementiev and Roth, 2006; Tao et al., 2006) .) extend Tao's approach by iteratively updating overall similarities using R. (Kim et al., 2012)  holistically combine all the features: PH, CX, T, and R.However, T used in previous approaches is a good feature only if temporal behaviors are "symmetric" across corpora. In contrast, Figure1illustrates asymmetry, by showing the frequencies of "Usain Bolt," a Jamaican sprinter, and "Hillary Clinton," an American politician, in comparable news articles during the year 2008. The former is mostly mentioned in the context of some temporal events, e.g., Beijing Olympics, while the latter is not. In such case, as Hillary Clinton is a famous female leader, she may be associated with other Chinese female leaders in Chinese corpus, while such association is rarely observed in English corpus, which causes asymmetry. That is, Hillary Clinton is "atemporal," as Figure1(b) shows, such that using such dissimilarity against deciding this pair as a correct translation would be harmful. In clear contrast, for Usain Bolt, similarity of temporal dis- 
