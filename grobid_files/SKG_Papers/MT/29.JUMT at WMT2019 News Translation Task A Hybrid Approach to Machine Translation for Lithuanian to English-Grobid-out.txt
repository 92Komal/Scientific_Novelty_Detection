title
JUMT at WMT2019 News Translation Task: A Hybrid approach to Machine Translation for Lithuanian to English

abstract
In the current work, we present a description of the system submitted to WMT 2019 News Translation Shared task. The system was created to translate news text from Lithuanian to English. To accomplish the given task, our system used a Word Embedding based Neural Machine Translation model to post edit the outputs generated by a Statistical Machine Translation model. The current paper documents the architecture of our model, descriptions of the various modules and the results produced using the same. Our system garnered a BLEU score of 17.6.

Introduction Machine Translation (MT) is automated translation of one natural language to another using a computer. Translation, itself, is a very tough task for both humans as well as a computer. It requires a thorough understanding of the syntax and semantics of both the languages under consideration. For producing good translations, a MT system needs good quality and sufficient amount of parallel corpus  (Mahata et al., 2016 (Mahata et al., , 2017 . In the modern context, MT systems can be categorized into Statistical Machine Translation (SMT) and Neural Machine Translation (NMT). SMT has had its share in making MT very popular among the masses. It includes creating statistical models, whose input parameters are derived from the analysis of bilingual text corpora, created by professional translators  (Weaver, 1955) . The state-of-art for SMT is Moses Toolkit 1 , created by  Koehn et al. (2007) , incorporates subcomponents like Language Model generation, Word Alignment and Phrase Table generation. Various works have been done in SMT  (Lopez, 2008; Koehn, 2009)  and it has shown good results for many language pairs. 1 http://www.statmt.org/moses/ On the other hand NMT , though relatively new, has shown considerable improvements in the translation results when compared to SMT  (Mahata et al., 2018b) . This includes better fluency of the output and better handling of the Out-of-Vocabulary problem. Unlike SMT, it doesnt depend on alignment and phrasal unit translations  (Kalchbrenner and Blunsom, 2013) . On the contrary, it uses an Encoder-Decoder approach incorporating Recurrent Neural Cells . As a result, when given sufficient amount of training data, it gives much more accurate results when compared to SMT  (Doherty et al., 2010; Vaswani et al., 2013; Liu et al., 2014) . For the given task 2 , we attempted to create a MT system that can translate sentences from Lithuanian to English. Since, using only SMT or NMT models leads to some or the other disadvantages, we tried to use both in a pipeline. This leads to an improvement of the results over the individual usage of either SMT or NMT. The main idea was to train a SMT model for translating Lithuanian language to English. Thereafter, a test set was translated using this model. Then, a word embedding based NMT model was trained to learn the mappings between the SMT output (in English) and the gold standard data (in English). The organizers provided the required parallel corpora, consisting of 9,62,022 sentence pairs, for training the translation model. Among this, 7,62,022 pairs was used to train the SMT system and 2,00,000 pairs were used to test the SMT system and then train the NMT system. The statistics of the parallel corpus is depicted in 1. The remainder of the paper is organized as follows. Section 2 will describe the methodology of creating the SMT and the NMT model and will in- clude the preprocessing steps, a brief summary of the encoder-decoder approach and the architecture of our system. This will be followed by the results and conclusion in Section 3 and 4, respectively. # 2 Methodology 

 SMT For designing the model we followed some standard preprocessing steps on 7,62,022 sentence pairs, which are discussed below. 

 Preprocessing The following steps were applied to preprocess and clean the data before using it for training our Statistical machine translation model. We used the NLTK toolkit 3 for performing the steps. ? Tokenization: Given a character sequence and a defined document unit, tokenization is the task of chopping it up into pieces, called tokens. In our case, these tokens were words, punctuation marks, numbers. NLTK supports tokenization of Lithuanian as well as English texts. ? Truecasing: This refers to the process of restoring case information to badly-cased or non-cased text  (Lita et al., 2003) . Truecasing helps in reducing data sparsity. ? Cleaning: Long sentences ( of tokens > 80) were removed. 

 Moses Moses is a statistical machine translation system that allows you to automatically train translation models for any language pair, when trained with a large collection of translated texts (parallel corpus). Once the model has been trained, an efficient search algorithm quickly finds the highest probability translation among the exponential number of choices. We trained Moses using 7,62,022 sentence pairs provided by WMT2019, with Lithuanian as the source language and English as the target language. For building the Language Model we used KenLM 4  (Heafield, 2011)  with 7-grams from the target corpus. The English monolingual corpus from WMT2019 was used to build the language model Training the Moses statistical MT system resulted in generation of Phrase Model and Translation Model that helps in translating between source-target language pairs. Moses scores the phrase in the phrase table with respect to a given source sentence and produces best scored phrases as output. 

 NMT Neural machine translation (NMT) is an approach to machine translation that uses neural networks to predict the likelihood of a sequence of words. The main functionality of NMT is based on the sequence to sequence (seq2seq) architecture, which is described in Section 2.2.1. 

 Sequence to Sequence Model Sequence to Sequence learning is a concept in neural networks, that helps it to learn sequences. Essentially, it takes as input a sequence of tokens (words in our case) X = {x 1 , x 2 , ..., x n } and tries to generate the target sequence as output Y = {y 1 , y 2 , ..., y m } where x i and y i are the input and target symbols respectively. Sequence to Sequence architecture consists of two parts, an Encoder and a Decoder. The encoder takes a variable length sequence as input and encodes it into a fixed length vector, which is supposed to summarize its meaning and taking into account its context as well. A Long Short Term Memory (LSTM) cell was used to achieve this. The uni-directional encoder reads the words of the Lithuanian texts, as a sequence from one end to the other (left to right in our case), h t = f enc (E x (x t ), h t-1 ) Here, E x is the input embedding lookup table (dictionary), f enc is the transfer function for the LSTM recurrent unit. The cell state h and context vector C is constructed and is passed on to the decoder. The decoder takes as input, the context vector C and the cell state h from the encoder, and computes the hidden state at time t as, s t = f dec (E y (y t-1 ), s t-1 , c t ) Subsequently, a parametric function out k returns the conditional probability using the next target symbol k. (y t = k | y < t, X) = 1 Z exp(out k (E y (y t ?1), s t , c t )) Z is the normalizing constant, j exp(out j (E y (y t ? 1), s t , c t )) The entire model can be trained end-to-end by minimizing the log likelihood which is defined as L = ? 1 N N n=1 T y n t=1 logp(y t = y t n , y ?t n , X n ) where N is the number of sentence pairs, and X n and y t n are the input sentence and the t-th target symbol in the n-th pair respectively. The input to the decoder was one hot tensor (embeddings at word level) of 2,00,000 English sentences while the target data was identical, but with an offset of one time-step ahead.  

 Architecture 

 Training For the training purpose, 7,62,202 , preprocessed, Lituanian-English sentence pairs were fed to Moses Toolkit. This created a SMT translation model with Lithuanian as the source language and English as the target language. Thereafter, we had 2,00,000 Lithuanian-English sentence pairs, from which the Lithuanian sentences were given as input to the SMT model and it gave 2,00,000 translated English sentences as output. Now, this 2,00,000 translated English sentences and the respective gold standard 2,00,000 sentences, from the Lithuanian-English sentence pair, were given as input to a word embedding based NMT model. As a result, this constituted our Hybrid model. 

 Testing For the testing purpose, 10k Lithuanian Sentences were fed to the Hybrid model, and the output, when checked using BLEU  (Papineni et al., 2002) , resulted in an accuracy of 21.6. The training and testing architecture is shown in Figure  1  3 Results WMT2019 provided us with a test set of Lithuanian sentences in .SGM format. This file was parsed and fed to our hybrid system. The output file was again converted to .SGM format and submitted to the organizers. Our system garnered a BLEU Score of 17.6, when it was scored using automated accuracy metrics. Other accuracy scores are mentioned in Table  2 .  

 Metric 

 Conclusion The paper presents the working of the translation system submitted to WMT 2019 News Translation shared task. We have used Word Embedding based NMT on top of SMT, for our proposed system. We have used a single LSTM layer as an encoder as well as a decoder. As a future prospect, we plan to use more LSTM layers in our model. We plan to create another model that incrementally trains both the SMT and NMT systems in a pipeline to improve the translation quality. Figure 1: Architecture 
