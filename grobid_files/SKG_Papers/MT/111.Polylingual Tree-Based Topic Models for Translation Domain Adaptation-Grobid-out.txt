title
Polylingual Tree-Based Topic Models for Translation Domain Adaptation

abstract
Topic models, an unsupervised technique for inferring translation domains improve machine translation quality. However, previous work uses only the source language and completely ignores the target language, which can disambiguate domains. We propose new polylingual tree-based topic models to extract domain knowledge that considers both source and target languages and derive three different inference schemes. We evaluate our model on a Chinese to English translation task and obtain up to 1.2 BLEU improvement over strong baselines.

Introduction Probabilistic topic models  (Blei and Lafferty, 2009) , exemplified by latent Dirichlet allocation  (Blei et al., 2003, LDA) , are one of the most popular statistical frameworks for navigating large unannotated document collections. Topic models discover-without any supervision-the primary themes presented in a dataset: the namesake topics. Topic models have two primary applications: to aid human exploration of corpora  (Chang et al., 2009)  or serve as a low-dimensional representation for downstream applications. We focus on the second application, which has been fruitful for computer vision  (Li Fei-Fei and Perona, 2005) , computational biology  (Perina et al., 2010) , and information retrieval  (Kataria et al., 2011) . In particular, we use topic models to aid statistical machine translation  (Koehn, 2009, SMT) . Modern machine translation systems use millions of examples of translations to learn translation rules. These systems work best when the training corpus has consistent genre, register, and topic. Systems that are robust to systematic variation in the training set are said to exhibit domain adaptation. ? indicates equal contributions. As we review in Section 2, topic models are a promising solution for automatically discovering domains in machine translation corpora. However, past work either relies solely on monolingual source-side models  (Eidelman et al., 2012; Hasler et al., 2012; Su et al., 2012) , or limited modeling of the target side  (Xiao et al., 2012) . In contrast, machine translation uses inherently multilingual data: an SMT system must translate a phrase or sentence from a source language to a different target language, so existing applications of topic models  (Eidelman et al., 2012)  are wilfully ignoring available information on the target side that could aid domain discovery. This is not for a lack of multilingual topic models. Topic models bridge the chasm between languages using document connections , dictionaries  (Boyd-Graber and Resnik, 2010) , and word alignments  (Zhao and Xing, 2006) . In Section 2, we review these models for discovering topics in multilingual datasets and discuss how they can improve SMT. However, no models combine multiple bridges between languages. In Section 3, we create a model-the polylingual tree-based topic models (ptLDA)-that uses information from both external dictionaries and document alignments simultaneously. In Section 4, we derive both MCMC and variational inference for this new topic model. In Section 5, we evaluate our model on the task of SMT using aligned datasets. We show that ptLDA offers better domain adaptation than other topic models for machine translation. Finally, in Section 6, we show how these topic models improve SMT with detailed examples. 

 Topic Models for Machine Translation Before considering past approaches using topic models to improve SMT, we briefly review lexical weighting and domain adaptation for SMT. 

 Statistical Machine Translation Statistical machine translation casts machine translation as a probabilistic process  (Koehn, 2009) . For a parallel corpus of aligned source and target sentences (F, E), a phrase f ? F is translated to a phrase ? ? E according to a distribution p w (?| f ). One popular method to estimate the probability p w (?| f ) is via lexical weighting features. 

 Lexical Weighting In phrase-based SMT, lexical weighting features estimate the phrase pair quality by combining lexical translation probabilities of words in a phrase  (Koehn et al., 2003) . Lexical conditional probabilities p(e|f ) are maximum likelihood estimates from relative lexical frequencies c(f, e)/ e c(f, e) , where c(f, e) is the count of observing lexical pair (f, e) in the training dataset. The phrase pair probabilities p w (?| f ) are the normalized product of lexical probabilities of the aligned word pairs within that phrase pair  (Koehn et al., 2003) . In Section 2.2, we create topic-specific lexical weighting features. Cross-Domain SMT A SMT system is usually trained on documents with the same genre (e.g., sports, business) from a similar style (e.g., newswire, blog-posts). These are called domains. Translations within one domain are better than translations across domains since they vary dramatically in their word choices and style. A correct translation in one domain may be inappropriate in another domain. For example, "?" in a newspaper usually means "underwater diving". On social media, it means a non-contributing "lurker". Domain Adaptation for SMT Training a SMT system using diverse data requires domain adaptation. Early efforts focus on building separate models  (Foster and Kuhn, 2007)  and adding features  (Matsoukas et al., 2009)  to model domain information.  Chiang et al. (2011)  combine these approaches by directly optimizing genre and collection features by computing separate translation tables for each domain. However, these approaches treat domains as hand-labeled, constant, and known a priori. This setup is at best expensive and at worst infeasible for large data. Topic models provide a solution where domains can be automatically induced from raw data: treat each topic as a domain. 1 

 Inducing Domains with Topic Models Topic models take the number of topics K and a collection of documents as input, where each document is a bag of words. They output two distributions: a distribution over topics for each document d; and a distribution over words for each topic. If each topic defines a SMT domain, the document's topic distribution is a soft domain assignment for that document. Given the soft domain assignments,  Eidelman et al. (2012)  extract lexical weighting features conditioned on the topics, optimizing feature weights using the Margin Infused Relaxed Algorithm  (Crammer et al., 2006, MIRA) . The topics come from source documents only and create topic-specific lexical weights from the per-document topic distribution p(k | d). The lexical probability conditioned on the topic is expected count e k (e, f ) of a word translation pair under topic k, ?k (e, f ) = d p(k|d)c d (e, f ), (1) where c d (?) is the number of occurrences of the word pair in document d. The lexical probability conditioned on topic k is the unsmoothed probability estimate of those expected counts p w (e|f ; k) = ?k (e,f ) e ?k (e,f ) , from which we can compute the phrase pair probabilities p w (?| f ; k) by multiplying the lexical probabilities and normalizing as in  Koehn et al. (2003) . For a test document d, the document topic distribution p(k | d) is inferred based on the topics learned from training data. The feature value of a phrase pair (?, f ) is f k (?| f ) = ? log p w (?| f ; k) ? p(k|d) , (3) a combination of the topic dependent lexical weight and the topic distribution of the document, from which we extract the phrase.  Eidelman et al. (2012)  compute the resulting model score by combining these features in a linear model with other standard SMT features and optimizing the weights. Conceptually, this approach is just reweighting examples. The probability of a topic given a document is never zero. Every translation observed in the training set will contribute to p k (e|f ); many of the expected counts, however, will be less than one. This obviates the explicit smoothing used in other domain adaptation systems  (Chiang et al., 2011) . We adopt this framework in its entirety. Our contribution are topics that capture multilingual information and thus better capture the domains in the parallel corpus. 

 Beyond Vanilla Topic Models Eidelman et al. (  2012 ) ignore a wealth of information that could improve topic models and help machine translation. Namely, they only use monolingual data from the source language, ignoring all target-language data and available lexical semantic resources between source and target languages. Different complement each other to reduce ambiguity. For example, "?" in a Chinese document can be either "hobbyhorse" in a children's topic, or "Trojan virus" in a technology topic. A short Chinese context obscures the true topic. However, these terms are unambiguous in English, revealing the true topic. While vanilla topic models (LDA) can only be applied to monolingual data, there are a number of topic models for parallel corpora:  Zhao and Xing (2006)  assume aligned word pairs share same topics;  connect different languages through comparable documents. These models take advantage of word or document alignment information and infer more robust topics from the aligned dataset. On the other hand, lexical information can induce topics from multilingual corpora. For instance, orthographic similarity connects words with the same meaning in related languages , and dictionaries are a more general source of information on which words share meaning  (Boyd-Graber and Resnik, 2010) . These two approaches are not mutually exclusive, however; they reveal different connections across languages. In the next section, we combine these two approaches into a polylingual tree-based topic model. 

 Polylingual Tree-based Topic Models In this section, we bring existing tree-based topic models  (Boyd-Graber et al., 2007, tLDA)  and polylingual topic models  (Mimno et al., 2009, pLDA)  together and create the polylingual treebased topic model (ptLDA) that incorporates both word-level correlations and document-level alignment information. Word-level Correlations Tree-based topic models incorporate the correlations between words by encouraging words that appear together in a concept to have similar probabilities given a topic. These concepts can come from WordNet  (Boyd-Graber and Resnik, 2010) , domain experts  (Andrzejewski et al., 2009) , or user constrains  (Hu et al., 2013) . When we gather concepts from bilingual resources, these concepts can connect different languages. For example, if a bilingual dictionary defines "?" as "computer", we combine these words in a concept. We organize the vocabulary in a tree structure based on these concepts (Figure  1 ): words in the same concept share a common parent node, and then that concept becomes one of many children of the root node. Words that are not in any conceptuncorrelated words-are directly connected to the root node. We call this structure the tree prior. When this tree serves as a prior for topic models, words in the same concept are correlated in topics. For example, if "?" has high probability in a topic, so will "computer", since they share the same parent node. With the tree priors, each topic is no longer a distribution over word types, instead, it is a distribution over paths, and each path is associated with a word type. The same word could appear in multiple paths, and each path represents a unique sense of this word. Document-level Alignments Lexical resources connect languages and help guide the topics. However, these resources are sometimes brittle and may not cover the whole vocabulary. Aligned document pairs provide a more corpus-specific, flexible association across languages. Polylingual topic models ) assume that the aligned documents in different languages share the same topic distribution and each language has a unique topic distribution over its word types. This level of connection between languages is flexible: instead of requiring the exact matching on words and sentences, only a coarse document alignment is necessary, as long as the documents discuss the same topics. 

 Combine Words and Documents We propose polylingual tree-based topic models (ptLDA), which connect information across different languages by incorporating both word correlation (as in tLDA) and document alignment information (as in pLDA). We initially assume a given tree structure, deferring the tree's provenance to the end of this section. Generative Process As in LDA, each word token is associated with a topic. However, tree-based topic models introduce an additional step of selecting a concept in a topic responsible for generating each word token. This is represented by a path y d,n through the topic's tree. The probability of a path in a topic depends on the transition probabilities in a topic. Each concept i in topic k has a distribution over its children nodes is governed by a Dirichlet prior: ? k,i ? Dir(? i ). Each path ends in a word (i.e., a leaf node) and the probability of a path is the product of all of the transitions between topics it traverses. Topics have correlations over words because the Dirichlet parameters can encode positive or negative correlations  (Andrzejewski et al., 2009) . With these correlated in topics in hand, the generation of documents are very similar to LDA. For every document d, we first sample a distribution over topics ? d from a Dirichlet prior Dir(?). For every token in the documents, we first sample a topic z dn from the multinomial distribution ? d , and then sample a path y dn along the tree according to the transition distributions specified by topic z dn . Because every path y dn leads to a word w dn in language l dn , we append the sampled word w dn to document d l dn . Aligned documents have words in both languages; monolingual documents only have words in a single language. The full generative process is: 1: for topic k ? 1, ? ? ? , K do 2: for each internal node n i do 3: draw a distribution ? ki ? Dir(? i ) 4: for document set d ? 1, ? ? ? , D do 5: draw a distribution ? d ? Dir(?) 6: for each word in documents d do 7: choose a topic z dn ? Mult(? d ) 8: sample a path y dn with probability (i,j)?y dn ? z dn ,i,j 9: y dn leads to word w dn in language l dn 10: append token w dn to document d l dn If we use a flat symmetric Dirichlet prior instead of the tree prior, we recover pLDA; and if all documents are monolingual (i.e., with distinct distributions over topics ?), we recover tLDA. ptLDA connects different languages on both the word level (using the word correlations) and the document level (using the document alignments). We compare these models' machine translation performance in Section 5. An example of constructing a prior tree from a bilingual dictionary: word pairs with the same meaning but in different languages are concepts; we create a common parent node to group words in a concept, and then connect to the root; uncorrelated words are connected to the root directly. Each topic uses this tree structure as a prior. Build Prior Tree Structures One remaining question is the source of the word-level connections across languages for the tree prior. We consider two resources to build trees that correlate words across languages. The first are a multilingual dictionaries (dict), which match words with the same meaning in different languages together. These relations between words are used as the concepts in the prior tree (Figure  1 ). In addition, we extract the word alignments from aligned sentences in a parallel corpus. The word pairs define concepts for the prior tree (align). We use both resources for our models (denoted as ptLDA-dict and ptLDA-align) in our experiments (Section 5) and show that they yield comparable performance in SMT. 

 Inference Inference of probabilistic models discovers the posterior distribution over latent variables. For a collection of D documents, each of which contains N d number of words, the latent variables of ptLDA are: transition distributions ? ki for every topic k and internal node i in the prior tree structure; multinomial distributions over topics ? d for every document d; topic assignments z dn and path y dn for the n th word w dn in document d. The joint distribution of polylingual tree-based topic models is p(w, z, y, ?, ?; ?, ?) = k i p(? ki |? i ) (4) ? d p(? d |?) ? d n p(z dn |? d ) ? d n p(y dn |z dn , ?)p(w dn |y dn ) . Exact inference is intractable, so we turn to ap-proximate posterior inference to discover the latent variables that best explain our data. Two widely used approximation approaches are Markov chain Monte Carlo  (Neal, 2000, MCMC)  and variational Bayesian inference  (Blei et al., 2003, VB) . Both frameworks produce good approximations of the posterior mode  (Asuncion et al., 2009) . In addition,  Mimno et al. (2012)  propose hybrid inference that takes advantage of parallelizable variational inference for global variables  (Wolfe et al., 2008)  while enjoying the sparse, efficient updates for local variables  (Neal, 1993) . In the rest of this section, we discuss all three methods in turn. We explore multiple inference schemes because while all of these methods optimize likelihood because they might give different results on the translation task. 

 Markov Chain Monte Carlo Inference We use a collapsed Gibbs sampler for tree-based topic models to sample the path y dn and topic assignment z dn for word w dn , p(z dn = k, y dn = s|?z dn , ?y dn , w; ?, ?) ? I [?(s) = w dn ] ? N k|d +? k (N k |d +?) ? i?j?s N i?j|k +? i?j j (N i?j |k +? i?j ) , where ?(s) represents the word that path s leads to, N k|d is the number of tokens assigned to topic k in document d and N i?j|k is the number of times edge i ? j in the tree assigned to topic k, excluding the topic assignment dn and its path y dn of current token w dn . In practice, we sample the latent variables using efficient sparse updates  (Yao et al., 2009; Hu and Boyd-Graber, 2012) . 

 Variational Bayesian Inference Variational Bayesian inference approximates the posterior distribution with a simplified variational distribution q over the latent variables: document topic proportions ?, transition probabilities ?, topic assignments z, and path assignments y. Variational distributions typically assume a mean-field distribution over these latent variables, removing all dependencies between the latent variables. We follow this assumption for the transition probabilities q(? | ?) and the document topic proportions q(? | ?); both are variational Dirichlet distributions. However, due to the tight coupling between the path and topic variables, we must model this joint distribution as one multinomial, q(z, y | ?). If word token w dn has K topics and S paths, it has a K * S length variational multinomial ? dnks , which represents the probability that the word takes path s in topic k. The complete variational distribution is q(?, ?, z, y|?, ?, ?) = d q(? d |? d )? (5) k i q(? ki |? ki ) ? d n q(z dn , y dn |? dn ). Our goal is to find the variational distribution q that is closest to the true posterior, as measured by the Kullback-Leibler (KL) divergence between the true posterior p and variational distribution q. This induces an "evidence lower bound" (ELBO, L) as a function of a variational distribution q: L = E q [log p(w, z, y, ?, ?)] ? E q [log q(?, ?, z, y)] = k i E q [log p(? ki |? i )] + d E q [log p(? d |?)] + d n E q [log p(z dn , y dn |? d , ?)p(w dn |y dn )] + H[q(?)] + H[q(?)] + H[q(z, y)], (6) where H[?] represents the entropy of a distribution. Optimizing L using coordinate descent provides the following updates: ? dnkt ? exp{?(? dk ) ? ?( k ? dk ) (7) + i?j?s ?(? k,i?j ) ? ?( j ? k,i?j ) }; ? dk = ? k + n s? ?1 (w dn ) ? dnkt ; (8) ? k,i?j = ? i?j (9) + d n s? (w dn ) ? dnkt I [i ? j ? s] ; where ? (w dn ) is the set of all paths that lead to word w dn in the tree, and t represents one particular path in this set. I [i ? j ? s] is the indicator of whether path s contains an edge from node i to j. 

 Hybrid Stochastic Inference Given the complementary strengths of MCMC and VB, and following hybrid inference proposed by  Mimno et al. (2012) , we also derive hybrid inference for ptLDA. The transition distributions ? are treated identically as in variational inference. We posit a variational Dirichlet distribution ? and choose the one that minimizes the KL divergence between the true posterior and the variational distribution. For topic z and path y, instead of variational updates, we use a Gibbs sampler within a document. We sample z dn and y dn conditioned on the topic and path assignments of all other document tokens, based on the variational expectation of ?, q(z dn = k, y dn = s|?z dn , ?y dn ; w) ? (10) (? + m =n I [z dm = k]) ? exp{E q [log p(y dn |z dn , ?)p(w dn |y dn )]}. This equation embodies how this is a hybrid algorithm: the first term resembles the Gibbs sampling term encoding how much a document prefers a topic, while the second term encodes the expectation under the variational distribution of how much a path is preferred by this topic, E q [log p(y dn |z dn , ?)p(w dn |y dn )] = I [?(y dn )=w dn ] ? i?j?y dn E q [log ? z dn ,i?j ]. For every document, we sweep over all its tokens and resample their topic z dn and path y dn conditioned on all the other tokens' topic and path assignments ?z dn and ?y dn . To avoid bias, we discard the first B burn-in sweeps and take the following M samples. We then use the empirical average of these samples update the global variational parameter q(?|?) based on how many times we sampled these paths ? k,i?j = 1 M d n s? ?1 (w dn ) I [i ? j ? s] ? I [z dn = k, y dn = s] + ? i?j . ( 11 ) For our experiments, we use the recommended settings B = 5 and M = 5 from  Mimno et al. (2012) . 

 Experiments We evaluate our new topic model, ptLDA, and existing topic models-LDA, pLDA, and tLDA-on their ability to induce domains for machine translation and the resulting performance of the translations on standard machine translation metrics. 

 Dataset and SMT Pipeline We use the NIST MT Chinese-English parallel corpus (NIST), excluding non-UN and non-HK Hansards portions as our training dataset. It contains 1.6M sentence pairs, with 40.4M Chinese tokens and 44.4M English tokens. We replicate the SMT pipeline of  Eidelman et al. (2012) : word segmentation  (Tseng et al., 2005) , align  (Och and Ney, 2003) , and symmetrize  (Koehn et al., 2003)  the data. We train a modified Kneser-Ney trigram language model on English  (Chen and Goodman, 1996) . We use CDEC  (Dyer et al., 2010)  for decoding, and MIRA  (Crammer et al., 2006)  for parameter training. To optimize SMT system, we tune the parameters on NIST MT06, and report results on three test sets: MT02, MT03 and MT05. 2 Topic Models Configuration We compare our polylingual tree-based topic model (ptLDA) against tree-based topic models (tLDA), polylingual topic models (pLDA) and vanilla topic models (LDA).  3  We also examine different inference algorithms-Gibbs sampling (gibbs), variational inference (variational) and hybrid approach (variationalhybrid)-on the effects of SMT performance. In all experiments, we set the per-document Dirichlet parameter ? = 0.01 and the number of topics to 10, as used in  Eidelman et al. (2012) . Resources for Prior Tree To build the tree for tLDA and ptLDA, we extract the word correlations from a Chinese-English bilingual dictionary  (Denisowski, 1997) .  4  We filter the dictionary using the NIST vocabulary, and keep entries mapping single Chinese and single English words. The prior tree has about 1000 word pairs (dict). We also extract the bidirectional word alignments between Chinese and English using GIZA++  (Och and Ney, 2003) . We then remove the word pairs appearing more than 50K times or fewer than 500 times and construct a second prior tree with about 2500 word pairs (align). We apply both trees to tLDA and ptLDA, denoted as tLDA-dict, tLDA-align, ptLDA-dict, and ptLDAalign. However, tLDA-align and ptLDA-align do worse than tLDA-dict and ptLDA-dict, so we omit tLDA-align in the results. 

 Domain Adaptation using Topic Models We examine the effectiveness of using topic models for domain adaptation on standard SMT evaluation metrics-BLEU  (Papineni et al., 2002)  and TER  (Snover et al., 2006) . We report the results on three different test sets (Figure  2 ), and all SMT results are averaged over five runs. We refer to the SMT model without domain adaptation as baseline.  5  LDA marginally improves machine translation (less than half a BLEU point).  : Machine translation performance for different models and inference algorithms against the baseline, on BLEU (top, higher the better) and TER (bottom, lower the better) scores. Our proposed ptLDA performs best. Results are averaged over 5 random runs. For model ptLDA-dict with different inference schemes, the BLEU improvement on three test sets is mostly significant with p = 0.01, except the results on MT03 using variational and variational-hybrid inferences. ?0.1 ?1 ?1.2 ?2.5 ?1.1 60.1 ?0.3 ?0.9 ?0.8 ?1.9 ?0.9 63.3 ?0.9 ?1.3 ?1.2 ?2.6 ?1.1 61.9 ?0.4 ?1 ?0.6 ?1.6 ?1.3 60.1 ?0.2 ?0.5 ?0.1 ?1 ?0.7 63.3 ?0.5 ?1 ?0.4 ?1.5 ?1.2 61.9 ?0.3 ?0.7 ?0.1 ?1.6 ?0.9 60.1 0 ?0.2 +0.2 ?1.1 ?0.5 63.3 ?0.4 ?0.7 ?0.1 ?1.6 ?0.8 56 Polylingual topic models pLDA and tree-based topic models tLDA-dict are consistently better than LDA, suggesting that incorporating additional bilingual knowledge improves topic models. These improvements are not redundant: our new ptLDA-dict model, which has aspects of both models yields the best performance among these approaches-up to a 1.2 BLEU point gain (higher is better), and -2.6 TER improvement (lower is better). The BLEU improvement is significant  (Koehn, 2004 ) at p = 0.01, 6 except on MT03 with variational and variationalhybrid inference. While ptLDA-align performs better than baseline SMT and LDA, it is worse than ptLDA-dict, possibly because of errors in the word alignments, making the tree priors less effective. Scalability While gibbs has better translation scores than variational and variational-hybrid, it is less scalable to larger datasets. With 1.6M NIST training sentences, gibbs takes nearly a week to run 1000 iterations. In contrast, the parallelized variational and variational-hybrid approaches, which we implement in MapReduce  (Dean and Ghemawat, 2004; Wolfe et al., 2008; Zhai et al., 2012) , take less than a day to converge. 

 Discussion In this section, we qualitatively analyze the translation results and investigate how ptLDA and its cousins improve SMT. We also discuss other approaches to improve unsupervised domain adaptation for SMT. 

 How do Topic Models Help SMT? We present two examples of how topic models can improve SMT. The first example shows both LDA and ptLDA improve the baseline. The second example shows how LDA introduce biases that mislead SMT and how ptLDA's bilingual constraints correct these mistakes. Figure  3  shows a sentence about a company (economy), ? (international), ? (system), (bank) ?(company), ? (service), ? (market), ? (technology), china, ? (industry), (product), market, company, technology, services, ? (system), year, industry, products, business, (economy), information, ?(manage), ? (invest), percent, ? (internet), companies, world, system, ?(information), ? (increase), (device), service, (service) introducing new technology gadgets where both LDA and ptLDA improve translations. The baseline translates "?" to "set" (red), and "?" to "with" (blue), which do not capture the reference meaning of a add-on device that works with compatible games. Both LDA and ptLDA assign this sentence to a business domain, which makes the translations probabilities shift toward correct translations: the probability of translating "?" to "compatible" and the probability of translating "? ?" to "kit" in the business domain are both significantly larger than without the domain knowledge; and the probabilities of translating "?" to "with" and the probability of translating "set" to "?" in the business domain decrease. The second example (Figure  4 ) illustrates how ptLDA offers further improvements over LDA. The source sentence discusses foreign affairs. The baseline correctly translates the word "?" to "affect". However, LDA-which only takes monolingual information from the source languageassigns this sentence to economic development. This misleads SMT to lower the probability for the correct translation "affect"; it chooses "impact" instead. In contrast, ptLDA-which incorporates bilingual constraints-successfully labels this sentence as foreign affairs and produces a softer, more nuanced translation that better matches the reference. The translation of "?" is very similar, except in this case, both the baseline and LDA produce the incorrect translation "the commitment of". This is possible because the probabilities of translating "?" to "promised to" and translat-ing "promised to" to "?" (the correct translation, in both directions) increase when conditioned on ptLDA's correct topic but decrease when conditioned on LDA's incorrect topic. 

 Other Approaches Other approaches have used topic models for machine translation.  Xiao et al. (2012)  present a topic similarity model based on LDA that produces a feature that weights grammar rules based on topic compatibility. They also model the source and target side of rules and compare the target similarity during decoding by projecting the target distribution into the source space.  Hasler et al. (2012)  use the source-side topic assignments from hidden topic Markov models  (Gruber et al., 2007, HTMM)  which models documents as a Markov chain and assign one topic to the whole sentence, instead of a mixture of topics.  Su et al. (2012)  also apply HTMM to monolingual data and apply the results to machine translation. To our knowledge, however, this is the first work to use multilingual topic models for domain adaptation in machine translation. 

 Improving Language Models Topic models capture document-level properties of language, but a critical component of machine translation systems is the language model, which provides local constraints and preferences. Domain adaptation for language models  (Bellegarda, 2004; Wood and Teh, 2009)  is an important avenue for improving machine translation. Models that simultaneously discover global document themes as well as local, contextual domain-specific informa- tion  (Wallach, 2006; Boyd-Graber and Blei, 2008)  may offer further improvements. 

 External Data The topic models presented here only require weak alignment between documents at the document level. Extending to larger datasets for learning topics is straightforward in principle. For example, ptLDA could learn domains from a much larger corpus like Wikipedia and then apply the extracted domains to machine translation data. However, this presents further challenges, as Wikipedia's domains are not representative of newswire machine translation datasets; a flexible hierarchical topic model  (Teh et al., 2006)  would better distinguish useful domains from extraneous ones. 

 Conclusion Topic models generate great interest, but their use in "real world" applications still lags; this is particularly true for multilingual topic models. As topic models become more integrated in commonplace applications, their adoption, understanding, and robustness will improve. This paper contributes to the deeper integration of topic models into critical applications by presenting a new multilingual topic model, ptLDA, comparing it with other multilingual topic models on a machine translation task, and showing that these topic models improve machine translation. ptLDA models both source and target data to induce domains from both dictionaries and alignments. Further improvement is possible by incorporating topic models deeper in the decoding process and adding domain knowledge to the language model. Figure1: An example of constructing a prior tree from a bilingual dictionary: word pairs with the same meaning but in different languages are concepts; we create a common parent node to group words in a concept, and then connect to the root; uncorrelated words are connected to the root directly. Each topic uses this tree structure as a prior. 
