title
Robust Neural Machine Translation for Clean and Noisy Speech Transcripts

abstract
Neural machine translation models have shown to achieve high quality when trained and fed with well structured and punctuated input texts. Unfortunately, the latter condition is not met in spoken language translation, where the input is generated by an automatic speech recognition (ASR) system. In this paper, we study how to adapt a strong NMT system to make it robust to typical ASR errors. As in our application scenarios transcripts might be post-edited by human experts, we propose adaptation strategies to train a single system that can translate either clean or noisy input with no supervision on the input type. Our experimental results on a public speech translation data set show that adapting a model on a significant amount of parallel data including ASR transcripts is beneficial with test data of the same type, but produces a small degradation when translating clean text. Adapting on both clean and noisy variants of the same data leads to the best results on both input types.

Introduction The recent quality improvements  [1, 2]  of neural machine translation (NMT)  [3, 4]  opened the way to commercial applications that can provide high-quality translations. The assumption is that the sentences to translate will be similar to the training data, usually characterized by properly-formed text in the two translation languages. Poor-quality sentences are usually considered "noise" and removed from the training set to improve the final quality  [5] . This practice is so common that a shared task has been devoted to it  [6] , which got attention from major industrial players in MT. Thus, the major weakness of NMT lies in coping with noisy input, which is an important feature of a real-world application such as speech translation. The degradation of translation quality with noisy input has been widely reported in literature. Belinkov and Bisk  [7]  showed that the translation quality rapidly drops with both natural and synthetic noise. Karpukhin et al.  [8]  have observed a correlation between recognition and translation quality in the context of speech translation. In both cases the degradation is mainly due to word errors, and following works have shown that inserting synthetic noise in the train- The first author carried out the work during an internship at Amazon. Most of the time, travellers worry about their luggage. Most of the time travellers worry about their luggage. ing data increases the robustness to the same kind of noise  [9, 10] . In practice, ASR transcripts are not only noisy in the choice of words, but also come without punctuation.  1  Thus, in order to feed MT systems with ASR output there are two main options: i) use a separate model that inserts punctuation (pre-processing)  [11] ; or ii) train the MT system on non-punctuated source data to resemble the test condition (implicit learning). The first option is exposed to error propagation, as punctuation inserted in the wrong position can alter completely the meaning of a sentence (see example in Table  1 . The second option has shown to increase systems robustness  [10]  when the input is provided without punctuation. The two approaches have shown to be equivalent in handling text lacking punctuation  [12] , probably because they both rely only on plain monolingual text to recover the missing punctuation. We consider here application scenarios (e.g. subtitling) where the same NMT system has to operate under both clean and noisy input conditions, namely post-edited or raw ASR outputs. We start from the hypothesis that word and punctuation errors compound and should be addressed separately for an increased robustness to errors. To verify our hypothesis we use a strong NMT model and fine-tune it on a recently released speech corpus 2  [13]  of TED Talks. Our findings are the following: implicit learning of punctuation helps to recover part of the errors in the source side, but training on ASR output is more beneficial. Training on clean and noisy data together leads to a system that can translate both clean and noisy data without supervision on the type of sentence and without degradation.  

 Robust NMT In this paper we are interested in building a single system to translate speech transcripts that can be either raw ASR outputs, or human post-editing of them. We define our problem in terms of domain adaptation, and use the method known as fine-tuning or continued training  [14, 15, 16] . A parent model is trained on large data from several domains and used to initialize  [17]  models for spoken language translation (TED talks) on two input conditions: clean, and noisy. The clean domain is characterized by correct transcriptions of talks with proper punctuation, while the noisy domain can contain machine-generated errors in words and punctuation. In-domain data can be given with or without punctuation (allowing implicit learning). In a multi-domain setting, i.e. translating both clean and noisy data with a single system, models can suffer from catastrophic forgetting  [18]  by degrading performance on less-recently observed domains. In this work we avoid catastrophic forgetting by fine-tuning the model on both domains simultaneously. 

 Experimental Setting We use as a parent model for fine-tuning a Transformer Big model  [19]  trained on public and proprietary data using label smoothed cross entropy  [20] , for about 16 million English-Italian sentence pairs. The model has layer size of 1024, hidden size of 4096 on feed forward layers, 16 heads in the multi-head attention, and 6 layers in both encoder and decoder. This model is then fine-tuned on the En?It portion of TED Talks in MuST-C. We keep the same training/validation/test set split as provided with the corpus (see Table  2 ). In all the experiments, we use Adam  [21]  with a fixed learning rate of 2 ? 10 ?4 , dropout of 0.3, label smoothing with a smoothing factor of 0.1. Training is performed on 8 Nvidia V100 GPUs, with batches of 2000 tokens per GPU. Gradients are accumulated for 16 batches in each GPU  [22] . All texts are tokenized and true-cased with scripts from the Moses toolkit  [23] , and then words are segmented with BPE  [24]  with 32K joint merge rules. While our main goal is to verify our hypotheses on a large data condition, thus the need to include proprietary data, for the sake of reproducibility we also provide results with systems only trained on TED Talks (small data condition). We transcribed automatically the entire TED Talks corpus with with a general purpose ASR service.  3  The resulting word error rates on the test set is 11.0%. The used ASR service provides transcribed text with predicted punctuation. In the experiments which assume noisy input without punctuation, we simply remove the predicted punctuation. All the results are evaluated in terms of BLEU score  [25]  using the multeval tool  [26] . 

 Experiments and Results At first, we evaluate the degradation due to ASR noise for systems trained on clean data. In Table  3  we show the BLEU scores of our baseline system, respectively, trained on large out-of-domain data (Base) and fine-tuned on clean TED Talks data (In-domain), with three types of input: manual transcripts (Clean), ASR transcripts with predicted punctuation (Noisy), and ASR transcripts with no punctuation (Noisy-np). As these models will hardly generate punctuation when it does not appear in the source text, we also report (in parentheses) BLEU scores computed w/o punctuation in both hypothesis and reference. Our results show that in-domain fine-tuning is beneficial in all scenarios, but more with clean input (+2.6 points) than with noisy input (+1.4 points). Translating noisy input results in a 26% relative drop in BLEU, which is apparently not due to punctuation errors (drop when evaluating w/o punctuation is 22%). Providing noisy input with no punctuation works even worse, probably due to the larger mismatch with the training/tuning conditions. Next, we evaluate systems fine-tuned on data similar to the Noisy test condition. The second part of Table  4  lists results of fine-tuning on noisy data, with and/or without punctuation. In all cases, BLEU scores on the noisy input improve from 1 to 2 point over the best systems tuned on Clean data only, reaching values above 28. However, scores on clean input degrade by 0.7 and 0.9 points (i.e. 34.2 and 34.0). If we adapt on both clean and noisy data, the score on the two input conditions reach a better balance. In particular, training on both Noisy-np and Clean data scores on the two input conditions 35.0 and 28.2, which results in the best overall working point on both conditions (together with Noisy+Clean). It is worth pointing out that this configuration obtains 33.2 points (not in the table) with the best possible noisy input, i.e. no errors and no punctuation, which is still 1.7 points below the score on Clean input. Finally, if we expose the system to all types of data (Noisy-np +Noisy+ Clean + Clean-np) we do not see any improvement over our top results, which means that Clean-np data do not provide additional information to Noisy-np. For the sake of replicability, we also trained our systems from scratch on the TED Talks data only. The results, listed in Table  5 , show the same trend as the results discussed so far. We did not evaluate *-np systems on input with punctuation as all the punctuation would represent out of vocabulary words. The main difference resides in the result on Clean input with the Noisy system (25.8 points), which is much worse than the result with the Noisy-np+Clean system (30.1 points), i.e. more than 4 points. This result suggests how training on noisy data can affect the model negatively if it is not balanced with clean data. 

 Manual Evaluation We carried out a manual evaluation  4  to assess the quality of Noisy-np + Clean against Clean, the reference baseline, under the Noisy input condition. We ran a head-to-head evaluation on the first 10 sentences of each test talk, for a total of 260 sentences, by asking annotators to blindly rank the two system outputs (ties were also permitted). We collected three judgments for each output, from 11 annotators, for a total of 780 scores. Inter-annotator agreement measured with Fleiss' kappa was 0.39. Results reported in Table  7  confirm with high confidence the differences observed with BLEU: output of system Noisy-np+Clean is preferred 10% time more often than output of system Clean, while almost 68% of the time the two outputs are considered comparable. From some manual inspection, we found that translations by the robust system that are unanimously ranked best show that error recovery most likely occurs on punctuation and non-content words like articles, prepositions and conjunctions (see  Tables 6) . In general, errors on content words that affect the meaning are not recovered. 

 Related works A recent study  [28]  proposed to tackle ASR errors as a domain adaptation problem in the context of dialog systems. Domain adaptation for NMT has been widely studied in recent years  [29] . In  [30] , fine-tuning was used to adapt NMT to multiple domains simultaneously, while in  [31]  adversarial adaptation is proposed for avoiding degradation in the original domain. Training on multiple domains simultaneously to prevent catastrophic forgetting is inspired by  [32] . They proposed an incremental learning scheme that trains the network with the data from previous tasks when a new task is learned, which we adapt to our multi-domain scenario. Punctuation insertion based on monolingual text has attracted research works for a long time  [33, 34, 35, 36]  and obtained recent improvements with deep networks  [37, 38, 39, 40, 41] . However, this approach, which is meant to make the output of ASR more readable for humans, cannot solve ambiguity due to missing punctuation. A more recent research line aims at using pauses and audio features to better predict punctuation  [42, 43, 44, 45, 46]  although it has been shown that the use of pauses is highly dependent on the speaker  [47] . In  [11] , it is shown that implicit learning of punctuation in MT systems is at least as good as inserting punctuation either in the input or output text, but they only studied the effect on correct input that has been deprived of punctuation, not on noisy input. On the other side,  [10]  studied how to improve the robustness to misrecognized words, but did not study the effect of MT systems that are only robust to punctuation errors. We close the gap by studying the combined effect of misrecognized errors and missing punctuation, besides studying the robustness to Clean when I 'm not fighting poverty , I 'm fighting fires as the assistant captain of a volunteer fire company . Noisy when I 'm not fighting poverty . I 'm fighting fires . is the assistant captain with volunteer fire company . Base NMT Quando non combatto la povert? . Combatto gli incendi . ? l'assistente capitano di una compagnia di pompieri volontaria . Robust NMT Quando non combatto la povert? , combatto gli incendi come assistente capitano di una compagnia di pompieri volontaria . 

 Clean that means we all share a common ancestor , an evolutionary grandmother , who lived around six million years ago. Noisy that means we all share a common ancestor -on evolutionary grandmother -who lived around six million years ago. Base NMT Ci? significa che tutti condividiamo un antenato comune -sulla nonna evolutiva che ha vissuto circa sei milioni di anni fa. Robust NMT Ci? significa che tutti condividiamo un antenato comune e una nonna evolutiva che ? vissuta circa sei milioni di anni fa. 

 Clean and we in the West couldn't understand how anybody would do this , how much this would restrict freedom of speech. Noisy -we in the West . I couldn 't understand how anybody would do --how much this would restrict freedom of speech. Base NMT -Noi occidentali . Non riuscivo a capire come chiunque avrebbe fatto --quanto questo avrebbe limitato la libert? di parola. Robust NMT -In Occidente non riuscivo a capire come chiunque avrebbe fatto -, quanto questo avrebbe limitato la libert? di parola. Table  6 : Examples of punctuation and substitution errors ("as ? is", "of a ? with", "an ? on") that are successfully recovered by the Robust NMT system. Notice that not all errors (underlined) are recovered. In the second example, Robust NMT introduces a spurious conjunction "e" ("and") in place of the missing comma, while in the third example, Robust NMT is not able to recover the deleted words "and" and "this" at the begin and in the middle of the sentence, respectively. noisy data affects the translation quality on clean input. 

 ASR w ties 

 Conclusion We have studied the robustness to input errors of NMT systems for speech translation with a fine-tuning approach. We have observed that a system trained to learn implicitly the target punctuation can recover part of the quality degradation due to ASR errors up to 1 BLEU point. Fine-tuning on noisy input can instead improve by more than 2 BLEU points. A system tuned on ASR errors does not obtain a further improvement by more data for implicit punctuation learning. Finally, when fine-tuning on clean and noisy data, the system becomes robust to noisy input and keeps high performance on clean input. Table 1 : 1 Example of sentence in which the meaning is changed by a punctuation mark. 
