title
Wikification of Concept Mentions within Spoken Dialogues Using Domain Constraints from Wikipedia

abstract
While most previous work on Wikification has focused on written texts, this paper presents a Wikification approach for spoken dialogues. A set of analyzers are proposed to learn dialogue-specific properties along with domain knowledge of conversations from Wikipedia. Then, the analyzed properties are used as constraints for generating candidates, and the candidates are ranked to find the appropriate links. The experimental results show that our proposed approach can significantly improve the performances of the task in human-human dialogues.

Introduction Linking mentions in natural language to the relevant concepts in knowledge-bases plays a key role in better understanding the meanings of expressions as well as further populating knowledge-bases with less human effort. Especially, Wikipedia has been widely used as a major target resource for linking. Most previous work on this Wikipedia-based linking task called Wikification  (Mihalcea and Csomai, 2007)  has focused on resolving ambiguities and variabilities of the expressions in written texts including newswire collections  (McNamee and Dang, 2009; Ji et al., 2010;  or microblog posts  (Genc et al., 2011; Cassidy et al., 2012; Guo et al., 2013; Huang et al., 2014) . But writing and reading are not the only ways for exchange of information, since many communications between people in real life are performed through spoken dialogues also. Thus, we could expect to improve the understanding capabilities of applications based on Wikification and broaden the coverage of the contents in knowledge-bases, if Wikification is successfully performed also for human-human spoken conversations. In this work, we focus on the following differences between spoken dialogues and written texts as sources for Wikification. Firstly, at least two speakers are engaged in a dialogue session, while the texts in newswire or microblogs are mostly written by a single author. Thus, the viewpoint of each speaker should be considered separately or jointly depending on the situation. Secondly, the correspondence between mentions and concepts in spoken dialogues tends to be dependent not only on the contexts explicitly mentioned in a given dialogue, but also on other information inferred by speakers based on their background knowledge. The other difference is that spoken utterances are more likely to be informal and noisy than written sentences, which makes expressions more ambiguous and variable. To solve these issues, we propose a three step approach for Wikification on spoken dialogues. At the first step, a set of classifiers are used for analyzing the dialogue-specific aspects of a given mention. According to the analyzed results, the criteria in selecting concept candidates is determined, and then a ranking is performed on the filtered candidates to identify the concept that is the most relevant to the mention. While many researchers have worked on linking named-entities  (Bunescu and Pasca, 2006; Cucerzan, 2007; McNamee and Dang, 2009;  or other types of concept mentions  (Mihalcea and Csomai, 2007; Milne and Witten, 2008; Ferragina and Scaiella, 2010; Ratinov et al., 2011; Mendes et al., 2011; Cheng and Roth, 2013)  to the relevant articles in Wikipedia, all the noun phrases including not only named entities or base noun phrases, but also complex or recursive noun phrases in a dialogue are considered as instances to be linked in this work. For the concept candidates, we divide every article into sub-sections and consider each section as a unit along with article-level concepts.  

 Candidate Ranking Output Concept f(mi) Step 1 Step 2 Step 3 Figure 1: Overall architecture of three-step approach for Wikification on spoken dialogues 2 Method 

 Mention Analysis The first step in our proposed approach (Figure  1 ) is analyzing the following four types of binary properties of a given mention: linking validity (LV ), in-dialogue reference (ID), domain relevance (DR), and speaker relatedness (SR). Linking validity of the mention is determined by the decision whether it is matched with any Wikipedia concept or not. Since only the mentions assigned with positive validity values are proceeded to the further processes, this classification can be considered as a joint task for target mention identification and NIL detection. Another type of analysis focuses on the references between the mention and the linking history. If the mention is matched with one in the set of concepts for the previous mentions in the same session, it has a positive value for the in-dialogue reference property. The other two types of properties are defined for indicating the relevances of the mention to the contents that are specific to the target domain or the profiles of each speaker in the conversation. For these analyses, the whole Wikipedia collection is partitioned into subsets according to the domain or speaker-relevances. In this work, the concepts in these subsets are automatically collected with no manual effort by utilizing the domain knowledge also from Wikipedia. First, we retrieve the 'List' or 'Index' pages in Wikipedia that are re- lated to the topic or the profile of a speaker. Then, all the articles listed on these seed pages are collected and considered as the related concepts in the corresponding sets. Since every property has a positive or a negative value as a result, each analysis can be considered as a binary classification problem. In this work, we train support vector machines (SVM)  (Cortes and Vapnik, 1995)  from the dialogues annotated with the corresponding labels as shown in Figure  2  based on the features listed in Table  1 . 

 Candidate Generation After analyzing the above property values of a given mention, a set of concepts to be disambiguated are selected from Wikipedia. These candidates are retrieved from a Lucene 1 index on the whole Wikipedia collection with the fields of article title, section title, redirection, category, and body texts. Each query to the search engine is prepared with the combination of the mention phrase and its analyzed properties as constraints for filtering. If the value for in-dialogue reference is positive, the searching is restricted to the set of concepts linked with the previous mentions in the same session. Similarly, the domain relevance and speaker relatedness values provide the filtering condition within the corresponding subsets introduced in Section 2.1. One practical issue on this candidate generation step is how to combine the multiple constraints when we have more than one positive properties for a given mention. The simplest way is taking the intersection of the corresponding constraints. However, we should consider the fact that the properties assigned automatically can be erroneous, since none of the analyzer is perfect. For the noisy cases, the intersection-based filtering could be risky, because the errors are also jointly accumulated. To circumvent the impact of errors from the previous step, we also try to use the union of the constraints and compare it with the intersection case later in Section 3. 

 Candidate Ranking In this work, linking a given mention to its most relevant concept is determined by ranking SVM  (Joachims, 2002)  which is a pairwise ranking algorithm learned from the ranked lists. For each pair of a mention m in the training data and its candidate concept c, the ranking score s(m, c) is assigned as follows: s(m, c) = ? ? ? ? ? ? ? ? ? ? ? 4 if c is the exactly same as f (m), 3 if c is the parent article of f (m), 2 if c belongs to the same article but different section of f (m), 1 otherwise. where f (m) is the annotation of m in the training dataset. The list of candidates assigned with their scores provides the relative orders for a given mention, and it can be converted into a set of   

 Evaluation 3.1 Data To demonstrate the effectiveness of our approach to Wikification on spoken dialogues, we performed experiments on a dialogue corpus which consists of 35 sessions collected from humanhuman conversations in English about tourism in Singapore between actual tour guides in Singapore and tourists from the Philippines. All the recorded dialogues with the total length of 21 hours were manually transcribed, then the 31,034 utterance were pre-processed by Stanford CoreNLP toolkit 2 . Each noun phrase in the constituent trees provided by the parser is considered as an instance for Wikification and manually annotated with the corresponding concept in Wikipedia. 34,949 mentions have been linked to the concepts in Wikipedia. As a pool for candidate generation, we built a Lucene index based on Wikipedia database dump as of January 2015 which has 4,797,927 articles and 25,577,464 sections in total. From this collection, 11,128 and 27,186 articles have been considered as Singapore-related and Philippines-related concepts, respectively, for the filtering based on domain and speaker relevances.  

 Features 

 Mention Analysis Based on the annotated dialogues, we built four mention analyzers for LV , ID, SR G , and SR T , where SR G is for the guides and SR T is for the tourists in the conversations. In this work, only the information where each speaker is from was considered as a profile to analyze the speaker-related properties. Since all the guides participated in the data collection are from Singapore and the main topic of the conversations is also about Singapore, we omitted DR which should have the same results as SR G in the experiments. For each analyzer, we trained the SVM models using SVM light 3 with the features in Table  1 . All the evaluations were performed in five-fold cross validation to the manual annotations with precision, recall, and F-measure. Table  3  compares the performances of the seven combinations of feature sets for each analyzer. Based on these results, we selected the model that achieved the best performance for each analyzer to process the mentions for the further steps. 

 Candidate Generation For each mention in the corpus, we prepared four sets of candidates with different filtering constraints. While the first baseline set was retrieved with no filtering, the others were generated according to the procedure described in Section 2.2. When more than one positive values were provided from mention analyzers, intersection and union operators were applied for combining multiple constraints. In the last set, the property values manually annotated in the training data were  

 Candidate Ranking For each set of candidates, we trained a ranking function using SVM rank4 with the features in Table 2. Both training and testing the ranking models were performed also based on five-fold cross validation with the same divisions as the former evaluation. After getting the ranking results, we took the top-ranked candidate for each list and considered it as a result of Wikification for the corresponding mention. Table  4  compares the final performances of Wikification obtained by ranking on the candidates generated with different sets of constraints. Both approaches, intersection and union, outperformed the baseline by 12.60 and 13.50 in Fmeasure, respectively. While the intersection strategy contributed to produce more precise outputs than the others even including the case with manual filtering, the other proposed approach with union achieved more gain in recall with slightly better F-measure than the former one. 

 Conclusions This paper presented a Wikification approach for spoken dialogues. In this approach, a set of dialogue-specific properties were analyzed for generating concept candidates. Then, supervised ranking was performed on these candidates to identify the relevant concepts. Experimental results show that the proposed constraints help to improve the performances of the task on spoken dialogues. spoke that mention WM word n-grams within the surface of m WT word n-grams within the title of c EMT whether the surface of m is same as the title of c EMR whether the surface of m is same as one of redirections to c MIT whether the surface of m is a sub-string of the title of c TIM whether the title of c is a sub-string of the m's surface form MIR whether the surface of m is a sub-string of a redirected title to c RIM whether a re-directed title to c is a sub-string of the m's surface form PMT similarity score based on edit distance between the surface of m and the title of c PMR maximum similarity score between the surface of m and the redirected titles to c OC whether c previously occurred in the full dialogue history OCw whether c occurred within w previous turns with w ? {1, 3, 5, 10} 

 Guide: In the morning I suggest to you to go to Botanical Garden. That is actually one of my favourite places here. LV ID DR SRG SRT LV ID DR SRG SRT + - - - - + - + + - LV ID DR SRG SRT + - - - + Tourist: LV ID DR SRG SRT LV ID DR SRG SRT + + - - + + - - - + Guide: If so, you might like this place also. LV ID DR SRG SRT + + + + - Figure 2: Examples of annotations for mention analysis: SR G and SR T denote guide and tourist relatedness, respectively. Tourist: Oh, we also have Botanical Garden. 

 Table 1 : 1 List of features for training the models for mention analysis Level Name Description Mention SP the speaker who spoke that mention WM word n-grams within the mention LM lemma n-grams within the mention PM POS n-grams within the mention NE named entities within the mention NP base noun phrases within the men- tion Utterance BW the words before the mention AW the words after the mention BL the lemmas before the mention AL the lemmas after the mention BP the POS tags before the mention AP the POS tags after the mention IU whether the mention previously oc- curs in the same utterance Dialogue EO whether the phrase is previously mentioned in the dialogue history EOS whether the phrase is previously mentioned by the same speaker in the history Wikipedia IW whether the phrase is a title of an entry in Wikipedia IWD whether the phrase is a title of an entry in the set of domain-relevant concepts IWS k whether the phrase is a title of an entry in the set of k-th speaker- relevant concepts 

 Table 2 : 2 List of features for training the ranking SVM model pairwise constraints which are trained by ranking SVM with the features in Table 2. 

			 http://lucene.apache.org/ 

			 http://nlp.stanford.edu/software/corenlp.shtml 

			 http://www.cs.cornell.edu/people/tj/svm light/svm rank.html
