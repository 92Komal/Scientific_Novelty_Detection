title
A Variational Approach to Weakly Supervised Document-Level Multi-Aspect Sentiment Classification

abstract
In this paper, we propose a variational approach to weakly supervised document-level multi-aspect sentiment classification. Instead of using user-generated ratings or annotations provided by domain experts, we use targetopinion word pairs as "supervision." These word pairs can be extracted by using dependency parsers and simple rules. Our objective is to predict an opinion word given a target word while our ultimate goal is to learn a sentiment polarity classifier to predict the sentiment polarity of each aspect given a document. By introducing a latent variable, i.e., the sentiment polarity, to the objective function, we can inject the sentiment polarity classifier to the objective via the variational lower bound. We can learn a sentiment polarity classifier by optimizing the lower bound. We show that our method can outperform weakly supervised baselines on TripAdvisor and BeerAdvocate datasets and can be comparable to the state-of-the-art supervised method with hundreds of labels per aspect.

Introduction Document-level multi-aspect sentiment classification (DMSC) aims to predict the sentiment polarity of each aspect given a document which consists of several sentences describing one or more aspects  (Wang et al., 2010 (Wang et al., , 2011 Yin et al., 2017) . Solving the DMSC task is useful for providing both recommendations for users and suggestions for business owners on customer review platforms. Aspect based sentiment classification  (Tang et al., 2016a,b; Wang et al., 2016b; Chen et al., 2017; Ma et al., 2017;  was usually done by supervised learning, where aspectlevel annotations should be provided. Aspect-level annotations are not easy to obtain. Even when the platform provides the function to rate for different aspects, users are less likely to submit all of them. For example, about 37% of the aspect ratings are missing on TripAdvisor. If we can solve DMSC task without using aspect-level annotations, it can save human effort to annotate data or collect usergenerated annotations on the platform. Existing weakly supervised approaches  (Wang et al., 2010 (Wang et al., , 2011  use overall polarities instead of aspect polarities as "supervision." Compared with the polarity of each aspect, it is relatively easy to obtain overall polarities. Specifically, they minimize the square loss between the overall polarity and the weighted sum of all aspect polarities. However, when users only care about a particular rare aspect, e.g., childcare services, these approaches cannot estimate parameters of the rare aspect incrementally. They have to re-collect documents which mentioned this rare aspect and estimate parameters of all aspects based on the new corpus. In addition, these approaches assume the document is a bag-of-words, which neglects the order of the words and fails to capture the similarity between words. In this paper, we propose to use target-opinion word pairs as "supervision." Target-opinion word pairs can be helpful with our ultimate goal which is to learn a classifier to predict the sentiment polarity of each aspect given a document. For example, in a document "The bedroom is very spacious," if we can extract the target-opinion pair "bedroom-spacious," the sentiment polarity of the aspect room is likely to be positive. Hence, we propose to achieve the polarity classification goal by accomplishing another relevant objective: to predict an opinion word given a target word. We can decompose the opinion word prediction objective into two sub-tasks. The first sub-task is to predict the sentiment polarity based on a document. For example, given a document "The bedroom is very spacious," it predicts the sentiment polarity of the aspect room to be positive. The sec-ond sub-task is to predict the opinion word given a target word and a sentiment polarity predicted by the first sub-task. For example, knowing the fact that the sentiment polarity of the aspect room is positive, it predicts the opinion word associated with the target word "room" to be "spacious." By introducing a latent variable, i.e., the sentiment polarity of an aspect, to the opinion word prediction objective, we can inject the polarity classification goal (the first sub-task) into the objective via the variational lower bound which also incorporates the second sub-task. In this sense, our training objective is only based on the target-opinion word pairs which can be extracted by using dependency parsers and some manually designed rules. We consider our approach as weakly supervised learning because there is no direct supervision from polarity of each aspect. In other words, our model includes two classifiers: a sentiment polarity classifier and an opinion word classifier. In the sentiment polarity classifier, it predicts the sentiment polarity given a document. In the opinion word classifier, it predicts an opinion word based on a target word and a sentiment polarity. Compared with previous approaches  (Wang et al., 2010 (Wang et al., , 2011 , our approach can get rid of the assumption that the overall polarity should be observed and it is a weighted sum of all aspect polarities. Moreover, our approach can estimate parameters of a new aspect incrementally. In addition, our sentiment polarity classifier can be more flexible to capture dependencies among words beyond the bag-of-words representation if we use a deep neural network architecture to extract features to represent a document. We conducted experiments on two datasets, TripAdvisor  (Wang et al., 2010)  and  BeerAdvocate (McAuley et al., 2012) , to illustrate the effectiveness of our approach. Our contributions are summarized as follows, ? We propose to solve DMSC task in a nearly unsupervised way. ? We propose to learn a classifier by injecting it into another relevant objective via the variational lower bound. This framework is flexible to incorporate different kinds of document representations and relevant objectives. ? We show promising results on two real datasets and we can produce comparable results to the supervised method with hundreds of labels per aspect. Code and data for this paper are available on https://github.com/HKUST-KnowComp/ VWS-DMSC. 

 VWS-DMSC Approach In this section, we describe our variational approach to weakly supervised DMSC (VWS-DMSC). In the next section, we present how we obtain target-opinion word pairs by using a rulebased extraction approach. 

 Overview Our model consists of a sentiment polarity classifier and an opinion word classifier. Our task is document-level multi-aspect sentiment classification. For each aspect, we train a sentiment polarity classifier and an opinion word classifier. The input of the sentiment polarity classifier of each aspect is the same, i.e., a representation of a document. The target-opinion word pairs used in opinion word classifiers are different for different aspects. Figure  1  shows the relation between two classifiers (on the aspect price). The input x of the sentiment polarity classifier is a representation of a document, e.g., bag-of-words or a representation learned by recurrent neural networks. The sentiment polarity classifier takes x as input and produces a distribution of sentiment polarity R a of an aspect a, denoted as q(R a |x). If R a only has two possible values, i.e., positive and negative, then outputs of the classifier are q(positive|x) and q(negative|x) respectively. The opinion word classifier takes a target word ("price") and a possible value of the sentiment polarity r a as input, and estimates p("good"|r a , "price"). Our train-ing objective is to maximize the log-likelihood of an opinion word given a target word, e.g., p("good"|"price"). The likelihood is estimated based on the sentiment polarity classifier and the opinion word classifier. 

 Sentiment Polarity Classifier The sentiment polarity classifier aims to estimate a distribution of sentiment polarity q(R a |x), where R a is a discrete random variable representing the sentiment polarity and x is a feature representation of a document. We use a simple Softmax classifier here. We denote r a as a possible value of the random variable R a , representing a possible sentiment polarity. The model estimates the probability of class r a as q(R a = r a |x) = exp w T ra x r a exp w T r a x , (1) where w ra is a vector associated with sentiment class r a for aspect a. 

 Document Representation The representation of a document x can be different using different feature extraction approaches. Traditional document representations of sentiment classification would be bag-of-words, n-gram, or averaged word embeddings. Recently, end-to-end recurrent neural network based models demonstrate a powerful capacity to extract features of a document. The state-of-the-art model in DMSC task is  (Yin et al., 2017) . We use it as the document representation in our model. 

 Opinion Word Classifier The opinion word classifier aims to estimate the probability of an opinion word w o given a target word w t and a sentiment polarity r a : p(w o |r a , w t ) = exp ?(w o , w t , r a ) w o exp ?(w o , w t , r a ) , (2) where ? is a scoring function related to opinion word w o , target word w t , and sentiment polarity r a . Here we use the dot product as the scoring function: ?(w o , w t , r a ) = I (w t , w o ) ? P, w t ? K a ?c T ra w o , (3) where w o is the word embedding of opinion word w o , c ra is a vector associated with r a , P is the set of pairs extracted from the document, K a is the set of target words associated with aspect a, and I(?) is an indicator function where I(true) = 1 and I(f alse) = 0. Given a target word w t and a sentiment polarity r a , we aim to maximize the probability of opinion words highly related to them. For example, opinion word "good" is usually related to target word "price" for aspect value with sentiment polarity positive, and opinion word "terrible" is usually related to target word "traffic" for aspect location with sentiment polarity negative. 

 Training Objective The objective function is to maximize the loglikelihood of an opinion word w o given a target word w t . As we mentioned before, the objective function can be decomposed into two sub-tasks. The first one corresponds to the sentiment polarity classifier. The second one corresponds to the opinion word classifier. After introducing a latent variable, i.e., the sentiment polarity, to the objective function, we can derive a variational lower bound of the log-likelihood which can incorporate two classifiers: L = log p(w o |w t ) = log ra p(w o , r a |w t ) = log ra q(r a |x) p(w o , r a |w t ) q(r a |x) ? ra q(r a |x) log p(w o , r a |w t ) q(r a |x) = E q(Ra|x) log p(w o |r a , w t )p(r a |w t ) + H(q(R a |x)) = E q(Ra|x) log p(w o |r a , w t )p(r a ) + H(q(R a |x)) , (4) where H(?) refers to the Shannon entropy. By applying Jensen's inequality, the log-likelihood is lower-bounded by Eq. (  4 ). The equality holds if and only if the KL-divergence of two distributions, q(R a |x) and p(R a |w t , w o ), equals to zero. Maximizing the variational lower bound is equivalent to minimizing the KL-divergence. Hence, we can learn a sentiment polarity classifier which can produce a similar distribution to the true posterior p(R a |w t , w o ). Compared with p(R a |w t , w o ), q(R a |x) is more flexible since it can take any kind of feature representations as input. We assume that a target word w t and a sentiment polarity r a are independent since the polarity assignment is not influenced by the target word. We also assume that the sentiment polarity R a follows a uniform distribution, which means p(r a ) is a constant. We remove it in Eq. (  4 ) to get a new objective function as follows: E q(Ra|x) [log p(w o |r a , w t )] + H(q(R a |x)) . (5) 

 Approximation The partition function of Eq. (  2 ) requires the summation over all opinion words in the vocabulary. However, the size of opinion word vocabulary is large, so we use the negative sampling technique  (Mikolov et al., 2013)  to approximate Eq. (  2 ). Specifically, we substitute log p(w o |r a , w t ) in the objective (5) with the following objective function: log ? ?(w o , w t , r a ) + w o ?N log ? ?(w o , w t , r a ) , (6) where w o is a negative sample of opinion words in the vocabulary, N is the set of negative samples and ? is the sigmoid function. Then our final objective function is rewritten as: E q(Ra|x) log ? ?(w o , w t , r a ) + w o ?N log ? ? ?(w o , w t , r a ) + ?H(q(R a |x)) , ( 7 ) where ? is a hyper-parameter which can adjust the expectation and entropy terms into the same scale  (Marcheggiani and Titov, 2016) . 

 Target Opinion Word Pairs Extraction Target-opinion word pairs extraction is a well studied problem  (Hu and Liu, 2004; Popescu and Etzioni, 2005; Bloom et al., 2007; Qiu et al., 2011) . We designed five rules to extract potential target-opinion word pairs. Our method relies on Stanford Dependency Parser  (Chen and Manning, 2014) . We describe our rules as follows. Rule 1: We extract pairs satisfying the grammatical relation amod (adjectival modifier) (De  Marneffe and Manning, 2008) . For example, in phrase "very good price," we extract "price" and "good" as a target-opinion pair. Rule head word is an adjective and the tail word is a noun. For example, in a sentence "The room is small," we can extract "room" and "small" as a target-opinion pair. Rule 3: Some verbs are also opinion words and they are informative. We extract pairs satisfying the grammatical relation dobj (direct object) when the head word is one of the following four words: "like", "dislike", "love", and "hate". For example, in the sentence "I like the smell," we can extract "smell" and "like" as a target-opinion pair. Rule 4: We extract pairs satisfying the grammatical relation xcomp (open clausal complement), and the head word is one of the following word: "seem","look", "feel", "smell", and "taste". For example, in the sentence "This beer tastes spicy," we can extract "taste" and "spicy" as a target-opinion pair. Rule 5: If the sentence contains some adjectives that can implicitly indicate aspects, we manually assign them to the corresponding aspects. According to  (Lakkaraju et al., 2014) , some adjectives serve both as target words and opinion words. For example, in the sentence "very tasty, and drinkable," the previous rules fail to extract any pair. But we know it contains a target-opinion pair, i.e., "taste-tasty." Most of these adjectives have the same root form with the aspects they indicated, e.g., "clean" (cleanliness), and "overpriced" (price). This kind of adjective can be extracted first and then we can obtain more similar adjectives using word similarities. For example, given "tasty," we could get "flavorful" by retrieving similar words. Table  1  shows the statistics of the rule-based extraction on our two datasets. The first four rules can be applied to any dataset while the last one is domain dependent which requires human effort to identify these special adjectives. In practice, rule 5 can be removed to save human effort. The effect of removing rule 5 is shown in experiments. After extracting potential target-opinion word pairs, we need to assign them to different aspects as supervision signals. We select some seed words to describe each aspect, and then calculate similarities between the extracted target (or opinion) word and seed words, and assign the pair to the aspect where one of its seed words has the highest similarity. The similarity we used is the cosine similarity between two word embeddings trained by word2vec  (Mikolov et al., 2013) . For example, suppose seed words {"room", "bed"} and {"business", "Internet"} are used to describe the aspect room and business respectively, and the candidate pair "pillow -soft" will be assigned to the aspect room if the similarity between "pillow" and "bed" is highest among all combinations. 

 Experiment In this section, we report average sentiment classification accuracies over all aspects on binary DMSC task. 

 Datasets We evaluate our model on TripAdvisor  (Wang et al., 2010)  and  BeerAdvocate (McAuley et al., 2012; Lei et al., 2016; Yin et al., 2017)  datasets, which contain seven aspects (value, room, location, cleanliness, check in/front desk, service, and business) and four aspects (feel, look, and taste) respectively. We run the same preprocessing steps as  (Yin et al., 2017) . Both datasets are split into train/development/test sets with proportions 8:1:1. All methods can use development set to tune their hyper-parameters. Ratings of TripAdvisor and BeerAdvocate datasets are on scales of 1 to 5 and 0 to 5 respectively. But in BeerAdvocate, 0 star is rare, so we treat the scale as 1 to 5. We convert original scales to binary scales as follows: 1 and 2 stars are treated as negative, 3 is ignored, and 4 and 5 stars are treated as positive. In BeerAdvocate, most reviews have positive polarities, so to avoid the unbalanced issue, we perform data selection according to overall polarities. After data selection, the number of reviews with negative overall polarities and that with positive overall polarities are equal. 

 Compared Methods To demonstrate the effectiveness of our method, we compare our model with following baselines: Majority uses the majority of sentiment polarities in training sets as predictions. Lexicon means using an opinion lexicon to assign sentiment polarity to an aspect  (Read and Carroll, 2009; Pablos et al., 2015) . We combine two popular opinion lexicons used by  Hu and Liu (2004)  and  Wilson et al. (2005)  to get a new one. If an opinion word from extracted pairs is in positive (negative) lexicon, it votes for positive (negative). When the opinion word is with a negation word, its polarity will be flipped. Then, the polarity of an aspect is determined by using majority voting among all opinion words associated with the aspect. When the number of positive and negative words is equal, we adopt two different ways to resolve it. For Lexicon-R, it randomly assigns a polarity. For Lexicon-O, it uses the overall polarity as the prediction. Since overall polarities can also be missing, for both Lexicon-R and Lexicon-O, we randomly assign a polarity in uncertain cases and report both mean and std based on five trials of random assignments. Assign-O means directly using the overall polarity of a review in the development/test sets as the prediction for each aspect. LRR assumes the overall polarity is a weighted sum of the polarity of each aspect  (Wang et al., 2010) . LRR can be regarded as the only existing weakly supervised baseline where both algorithm and source code are available. BoW-DMSC-A is a simple softmax classifier using all annotated training data where the input is a bag-of-words feature vector of a document. N-DMSC-A is the state-of-the-art neural network based model  (Yin et al., 2017)  (N-DMSC) in DMSC task using all annotated training data, which serves an upper bound to our method. N-DMSC-O is to use overall polarities as "supervision" to train an N-DMSC and apply it to the classification task of each aspect at the test time. N-DMSC-{50,100,200,500,1000} is the N-DMSC algorithm using partial data. In order to see our method is comparable to supervised methods using how many labeled data, we use {50, 100, 200, 500, 1000} annotations of each aspect to train N-DMSC and compare them to our method. In addition to annotated data for training, there are extra 20% annotated data for validation. Since the sampled labeled data may vary for different trials, we perform five trials of random sampling and report both mean and std of the results. 

 Dataset For our method, denoted as VWS-DMSC, the document representation we used is obtained from N-DMSC  (Yin et al., 2017) . They proposed a novel hierarchical iterative attention model in which documents and pseudo aspect related questions are interleaved at both word and sentencelevel to learn an aspect-aware document representation. The pseudo aspect related questions are represented by aspect related keywords. In order to benefit from their aspect-aware representation scheme, we train an N-DMSC to extract the document representation using only overall polarities. In the iterative attention module, we use the pseudo aspect related keywords of all aspects released by  Yin et al. (2017) . One can also use document-to-document autoencoders  (Li et al., 2015)  to generate the document representation. In this way, our method can get rid of using overall polarities to generate the document representation. Hence, unlike LRR, it is not necessary for our method to use overall polarities. Here, to have a fair comparison with LRR, we use the overall polarities to generate document representation. For our method, we do not know which state is positive and which one is negative at training time, so the Hungarian algorithm  (Kuhn, 1955)  is used to resolve the assignment problem at the test time. 

 Results and Analysis We show all results in Table  2 , which consists of three blocks, namely, unsupervised, weakly supervised, and supervised methods. For unsupervised methods, our method can outperform majority on both datasets consistently. But other weakly supervised methods cannot outperform majority on BeerAdvocate dataset, which shows these baselines cannot handle unbalanced data well since BeerAdvocate is more unbalanced than TripAdvisor. Our method outperforms Lexicon-R and Lexicon-O, which shows that predicting an opinion word based on a target word may be a better way to use target-opinion pairs, compared with performing a lexicon lookup using opinion words from extract pairs. Good performance of Lexicon-O and Assign-O demonstrates the usefulness of overall polarities in development/test sets. N-DMSC-O trained with the overall polarities cannot outperform Assign-O since N-DMSC-O can only see overall polarities in training set while Assign-O can see overall polarities for both development and test sets and does not involve learning and generalization. For weakly supervised methods, LRR is the only open-source baseline in the literature on weakly supervised DMSC, and our method outperforms LRR by 6% and 16% on TripAdvisor and BeerAdvocate datasets. N-DMSC-O can also be considered as a weakly supervised method be- cause it only uses overall polarities as "supervision," and we still outperform it significantly. It is interesting that LRR is worse than N-DMSC-O. We guess that assuming that the overall polarity is a weighted sum of all aspect polarities may not be a good strategy to train each aspect's polarity or the document representation learned by N-DMSC is better than the bag-of-words representation. For supervised block methods, BoW-DMSC-A and N-DMSC-A are both supervised methods using all annotated data, which can be seen as the upper bound of our algorithm. N-DMSC-A outperforms BoW-DMSC-A, which shows that the document representation based on neural network is better than the bag-of-words representation. Hence, we use the neural networks based document representation as input of the sentiment polarity classifier. Our results are comparable to N-DMSC-200 on TripAdvisor and N-DMSC-100 on BeerAdvocate. 

 Ablation Study To evaluate effects of extracted rules, we performed an ablation study. We run our algorithm VWS-DMS with each rule kept or removed over two datasets. If no pairs extracted for one aspect in training set, the accuracy of this aspect will be 0.5, which is a random guess. From the Table  3  we can see that, the rule R1 is the most effective rule for both datasets. Rules R3/R4/R5 are less effective on their own. However, as a whole, they can still improve the overall performance. When considering removing each of rules, we found that our algorithm is quite robust, which indicates miss- ing one of the rules may not hurt the performance much. Hence, if human labor is a major concern, rule 5 can be discarded. We found that sometimes removing one rule may even result in better accuracy (e.g., "-R3" for BeerAdvocate dataset). This means this rule may introduce some noises into the objective function. However, "-R3" can result in worse accuracy for TripAdvisor, which means it is still complementary to the other rules for this dataset. 

 Parameter Sensitivity We also conduct parameter sensitivity analysis of our approach. The parameter ? in Equation (  7 ) adjusts the expectation and entropy terms on the same scale. We test ? = {0, 0.01, 0.1, 1} for both of the datasets. As we can see from Figure  2 , ? = 0.1 is a good choice for both datasets. 

 Implementation Details We implemented our models using TensorFlow  (Abadi et al., 2016) . For N-DMSC and LRR, we used code released by  Yin et al. (2017)  and  Wang et al. (2010)  respectively and followed their preprocessing steps and optimal settings. Parameters are updated by using ADADELTA (Zeiler, 2012), an adaptive learning rate method. To avoid overfitting, we impose weight decay and drop out on both classifiers. The regularization coefficient and drop out rate are set to 10 ?3 and 0.3 respectively. The number of negative samples and ? in our model are set to 10 and 0.1 respectively. For each document and each aspect, multiple target-opinion pairs are extracted. The opinion word classifier associated with an aspect will predict five target-opinion pairs at a time. These five target-opinion pairs are selected with bias. The probability of a pair being selected is proportional to the frequency of the opinion word to the power of ?0.25. In this way, opinion words with low frequency are more likely to be selected compared to the uniform sampling. In order to initialize both classifiers better, the word embeddings are retrofitted  (Faruqui et al., 2015)  using PPDB  (Ganitkevitch et al., 2013)  semantic lexicons. 

 Related Work In this section, we review the related work on document-level multi-aspect sentiment classification, target-opinion word pairs extraction, and variational methods. Document-level Multi-Aspect Sentiment Classification.  Wang et al. (2010)  proposed a LRR model to solve this problem. LRR assumes the overall polarity is a weighted sum of all aspect polarities which are represented by word frequency features. LRR needs to use aspect keywords to perform sentence segmentation to generate the representation of each aspect. To address the limitation of using aspect keywords, LARAM  (Wang et al., 2011)  assumes that the text content describing a particular aspect is generated by sampling words from a topic model corresponding to the latent aspect. Both LRR and LARAM can only access to overall polarities in the training data, but not gold standards of aspect polarities.  Meng et al. (2018)  proposed a weakly supervised text classification method which can take label surface names, class-related keywords, or a few labeled documents as supervision.  Ramesh et al. (2015)  developed a weakly supervised joint model to identify aspects and the corresponding sentiment polarities in online courses. They treat aspect (sentiment) related seed words as weak supervision. In the DMSC task which is a fine-grained text classification task, the label surface names or keywords for some aspects would be very similar. Given that the inputs are the same and the supervisions are similar, weakly supervised models cannot distinguish them. So we do not consider them as our baselines.  Yin et al. (2017)  modeled this problem as a machine comprehension problem under a multi-task learning framework. It also needs aspect keywords to generate aspect-aware document representations. Moreover, it can access gold standards of aspect polarities and achieved state-of-the-art performance on this task. Hence, it can serve as an upper bound. Some sentence-level aspect based sentiment classification methods  (Wang et al., 2016b ) can be directly applied to the DMSC task, because they can solve aspect category sentiment classification task. For example, given a sentence "the restaurant is expensive," the aspect category sentiment classification task aims to classify the polarity of the aspect category "price" to be negative. The aspect categories are predefined which are the same as the DMSC task. Some of them  (Tang et al., 2016a,b; Chen et al., 2017; Ma et al., 2017)  cannot because they are originally designed for aspect term sentiment classification task. For example, given a sentence "I loved their fajitas," the aspect term sentiment classification task aims to classify the polarity of the aspect term "fajitas" to be positive. The aspect terms appearing in the sentence should be provided as inputs. Target Opinion Word Pairs Extraction. There are two kinds of methods, namely, rule based methods and learning based methods to solve this task. Rule based methods extract target-opinion word pairs by mining the dependency tree paths between target words and opinion words. Learning based methods treat this task as a sequence labeling problem, mapping each word to one of the following categories: target, opinion, and other.  (Hu and Liu, 2004 ) is one of earliest rule based methods to extract target-opinion pairs. An opinion word is restricted to be an adjective. Target words are extracted first, and then an opinion word is linked to its nearest target word to form a pair.  Popescu and Etzioni (2005)  and  Bloom et al. (2007)  manually designed dependency tree path templates to extract target-opinion pairs. If the path between a target word candidate and an opinion word candidate belongs to the set of path templates, the pair will be extracted.  Qiu et al. (2011)  identified dependency paths that link opinion words and targets via a bootstrapping process. This method only needs an initial opinion lexicon to start the bootstrapping process.  Zhuang et al. (2006)  adopted a supervised learning algorithm to learn valid dependency tree path templates, but it requires target-opinion pairs annotations. Learning based methods require lots of targetopinion pairs annotations. They trained conditional random fields (CRF)  (Lafferty et al., 2001)  based models  (Jakob and Gurevych, 2010; Yang and Cardie, 2012; Wang et al., 2016a)  or deep neural networks  (Liu et al., 2015; Li and Lam, 2017)  to predict the label (target, opinion or other) of each word.  Jakob and Gurevych (2010)  and  Li et al. (2012)  extracted target-opinion pairs without using using any labeled data in the domain of interest, but it needs lots of labeled data in another related domain. In this paper, we only use very simple rules to extract target-opinion pairs to validate the effectiveness of our approach. If better pairs can be extracted, we can further improve our results. Variational Methods. Variational autoencoders  (Kingma and Welling, 2014; Rezende et al., 2014)  (VAEs) use a neural network to parameterize a probability distribution. VAEs consists of an encoder which parameterizes posterior probabilities and a decoder which parameterizes the reconstruction likelihood given a latent variable. VAEs inspire many interesting works  (Titov and Khoddam, 2015; Marcheggiani and Titov, 2016; ?uster et al., 2016; Chen et al., 2018)  which are slightly different from VAEs. Their encoders produce a discrete distribution while the encoder in VAEs yields a continuous latent variable.  Titov and Khoddam (2015)  aimed to solve semantic role labeling problem. The encoder is essentially a semantic role labeling model which predicts roles given a rich set of syntactic and lexical features. The decoder reconstructs argument fillers given predicted roles.  Marcheggiani and Titov (2016)  aimed to solve unsupervised open domain relation discovery. The encoder is a feature-rich relation extractor, which predicts a semantic relation between two entities. The decoder reconstructs entities relying on the predicted relation.  ?uster et al. (2016)  tried to learn multi-sense word embeddings. The encoder uses bilingual context to choose a sense for a given word. The decoder predicts context words based on the chosen sense and the given word.  aimed to solve knowledge graph powered question answering. Three neural networks are used to parameterize probabilities of a topic entity given a query and an answer, an answer based on a query and a predicted topic, and the topic given the query.  Chen et al. (2018)  aimed to infer missing links in a knowledge graph. Three neural networks are used to parameterize probabilities of a latent path given two entities and a relation, a relation based on two entities and the chosen latent path, and the relation given the latent path. Our method also uses neural networks to parameterize two discrete distributions but aims to solve the DMSC task. 

 Conclusion In this paper, we propose a variational approach to weakly supervised DMSC. We extract many target-opinion word pairs from dependency parsers using simple rules. These pairs can be "supervision" signals to predict sentiment polarity. Our objective function is to predict an opinion word given a target word. After introducing the sentiment polarity as a latent variable, we can learn a sentiment polarity classifier by optimizing the variational lower bound. We show that we can outperform weakly supervised baselines by a large margin and achieve comparable results to the supervised method with hundreds of labels per aspect, which can reduce a lot of labor work in practice. In the future, we plan to explore better targetopinion word extraction approaches to find better "supervision" signals. Figure 1 : 1 Figure 1: A sentiment polarity classifier and an opinion word classifier associated with the aspect price. 
